#title linux man page : fork - 자식프로세스를 생성한다. 

{{{#!html
<HTML
><HEAD
><TITLE
><a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=fork">fork</a>(2)</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.59"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="CHAPTER"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="CHAPTER"
><H1
><A
NAME="AEN1"
>1&#51109;. <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=fork">fork</a>(2)</A
></H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>&#52264;&#47168;</B
></DT
><DT
>1.1&#51208;. <A
HREF="#AEN4"
>사용법</A
></DT
><DT
>1.2&#51208;. <A
HREF="#AEN8"
>설명</A
></DT
><DT
>1.3&#51208;. <A
HREF="#AEN12"
>반환값</A
></DT
><DT
>1.4&#51208;. <A
HREF="#AEN15"
>에러</A
></DT
><DT
>1.5&#51208;. <A
HREF="#AEN23"
>예제</A
></DT
></DL
></DIV
><P
>자식 프로세스를 만든다. </P
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN4"
>1.1&#51208;. 사용법</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;unistd.h&#62;

pid_t <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=fork">fork</a>(void);
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN8"
>1.2&#51208;. 설명</A
></H1
><P
>		fork는 자식프로세스를 만들기 위해서 사용되는 
		프로세스 생성기이다. fork 에 의해 생성된 자식 프로세스는 
		자신만의 PID 를가지게 되며, PPID는 부모프로세스의 PID를 
		가지게 된다. 그밖에 PGID, SID 를 상속받으며, 
		파일지시자, 시그널등을 상속받는다. 단 <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=파일잠금">파일잠금</a>(lock)와 
		시그널 팬딩은 상속받지 않는다.  
	</P
><P
>		리눅스에서 fork 는 copy-on-write 를 이용해서 수행된다. 
		쓰레드 방식에 비해서 부모프로세스의 페이지 테이블을 복사하고 
		자식 프로세스에 대한 task 구조체를 만들기 위한 시간과 메모리의 
		소비가 크다는 단점이 있다.
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN12"
>1.3&#51208;. 반환값</A
></H1
><P
>		성공할경우 자식 프로세스의 PID가 부모에게 리턴되며, 
		자식에게는 0이 리턴된다. 실패할경우에는 -1 이 리턴되며, 
		절적한 errno 값이 설정된다.  
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN15"
>1.4&#51208;. 에러</A
></H1
><P
>		<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>EAGAIN</DT
><DD
><P
>	
					자식프로세스를 위한 테스크 구조체를 할당할수 없을경우. 
					주로 메모리 문제와 연관된다. 
				</P
></DD
></DL
></DIV
>	
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN23"
>1.5&#51208;. 예제</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;unistd.h&#62;
#include &#60;stdlib.h&#62;

int <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=main">main</a>(int argc, char **argv)
{
    int pid;

    pid = <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=fork">fork</a>();
    if (pid &#62; 0)
    {
        printf("부모 프로세스 %d : %d&#92;n", <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=getpid">getpid</a>(), pid);
        <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=pause">pause</a>();
    }
    else if (pid == 0)
    {
        printf("자식 프로세스 %d&#92;n", <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=getpid">getpid</a>());
        <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=pause">pause</a>();
    }
    else if (pid == -1)
    {
        <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=perror">perror</a>("fork error : ");
        <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=exit">exit</a>(0);
    }
}
		</PRE
></TD
></TR
></TABLE
>
		위의 프로그램을 컴파일시켜서 실행시키면 
		아래와 같은 결과 화면을 보여준다.  
		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>[root@localhost test]# ./fork
부모 프로세스 1322 : 1323
자식 프로세스 1323
		</PRE
></TD
></TR
></TABLE
>
		fork 에 성공했을때 부모 프로세스에게는 자식 프로세스의 PID가 
		리턴되는것을 확인할수 있으며, 
		ps 명령을 이용하면 프로세스 상태를 확인할수 있다. 
		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>[root@localhost /root]# ps -efj | grep fork
UID        PID  PPID  PGID   SID  C STIME TTY          TIME CMD
root      1322   748  1322   748  0 10:33 ttyp0    00:00:00 ./fork
root      1323  1322  1322   748  0 10:33 ttyp0    00:00:00 ./fork
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
></DIV
></BODY
></HTML
>

<a href="http://picasaweb.google.com/lh/photo/cnHh9JbY8kVKxlsXZpEuPg?feat=embedwebsite"><img src="http://lh3.ggpht.com/_Os5qf5urx_A/S3BAokS02AI/AAAAAAAABHM/dwfPuU1guYA/s400/fork.png" /></a>
}}}
[[tag(프로세스,쓰레드,시스템 프로그래밍)]]

