head	1.4;
access;
symbols;
locks
	root:1.4; strict;
comment	@# @;


1.4
date	2014.02.21.16.58.33;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2014.02.21.16.16.59;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2014.02.21.16.12.47;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2014.02.21.16.11.59;	author root;	state Exp;
branches;
next	;


desc
@./data/text/man_2f12_2f_ec_9d_b8_ed_84_b0_eb_84_b7_ec_86_8c_ec_bc_93
@


1.4
log
@119.64.102.68;;yundream;;
@
text
@#title Internet socket

== internet socket ==
컴퓨터 네트워킹에서 '''인터넷 소켓''' 혹은 '''네트워크 소켓은''' 네트워크의 종단에 놓여서 원격으로 떨어져 있는 소프트웨어가 통신할 수 있도록 하는 '''소프트웨어 도구'''를 의미한다.

{{{#!html
<a href="http://picasaweb.google.com/lh/photo/SalOpDmynGpARqcqu-wT_A?feat=embedwebsite"><img src="http://lh4.ggpht.com/_Os5qf5urx_A/S7tzUhf6wXI/AAAAAAAABXw/8wQ8u5x3vWk/s800/socket.png" /></a>
}}}

인터넷 소켓은 [wiki:man/12/운영체제 운영체제]가 제공하는 [wiki:man/12/TCP TCP], [wiki:man/12/IP IP]프로토콜 스택을 이용할 수 있는 [wiki:Site/Network_Programing/Documents/SocketAPI socket API]로 제어할 수 있다.

소켓 API는 AT&T사에서 개발했으며, 후에 버클리 대학에서 공개된 버전의 소켓 API를 개발한다. 이 소켓을 [http://www.joinc.co.kr/modules/moniwiki/wiki.php/man/12/BSD%20socket BSD 소켓]이라고 하며, 실질적인 산업 표준이 되었다. [wiki:Site/Linux 리눅스]를 포함한 모든 유닉스운영체제와 Mac 운영체제가 BSD Socket을 지원한다.

윈도는 윈속(winsock)에서 확장 소켓 API와 함께 BSD socket 인터페이스를 지원하고 있다.

소켓은 '''인터넷 주소'''와 '''[wiki:man/12/포트번호 포트 번호]'''로 네트워크 상에서 유일한 소프트웨어를 찾을 수 있다. 인터넷 주소로 컴퓨터(정확한 표현은 네트워크 인터페이스이다)를 찾고 포트 번호로 컴퓨터에 있는 여러 소프트웨어 중 목적으로 하는 소프트웨어를 찾는다.

[[adtext]]
== 소켓 함수 ==
  ||[wiki:man/2/accept accept]   ||socket(소켓)으로 부터 연결을 받아들인다.   ||
  ||[wiki:man/2/bind bind]       ||소켓에 주소와 포트를 bind 한다.            ||
  ||[wiki:man/2/connect connect] ||소켓에 연결을 시도한다.            ||
  ||[wiki:man/2/listen listen]   ||소켓연결 대기열을 생성한다.        ||
  ||[wiki:man/2/open open]       ||소켓 - 혹은 파일 - 을 생성한다.    ||
  ||[wiki:man/2/read read]       ||소켓 - 혹은 파일 - 에서 읽는다.    ||
  ||[wiki:man/2/write write]      ||소켓 - 혹은 파일 - 에 쓴다.        ||
  ||[wiki:man/2/socketpair socketpair] ||소켓쌍을 생성한다.              ||
  ||[wiki:man/2/recvfrom recvfrom] ||소켓에서 메시지를 읽는다.         ||
  ||[wiki:man/2/recvmsg recvmsg] ||소켓으로 부터 메시지를 읽는다.     ||
  ||[wiki:man/2/sendto sendto]  ||소켓에 메시지를 쓴다.              ||
  ||[wiki:man/2/socket socket]  ||endpoint 소켓을 생성한다.          ||
  ||[wiki:man/3/htonl htonl]    ||호스트 바이트 순서를 네트워크 바이트 순서로 변경  ||
  ||[wiki:man/3/htons htons]    ||호스트 바이트 순서를 네트워크 바이트 순서로 변경  ||
  ||[wiki:man/3/ntohl ntohl]   ||네트워크 바이트 순서로 호스트 바이스 순서로 변경  ||
  ||[wiki:man/3/ntohs ntohs]   ||네트워크 바이트 순서로 호스트 바이스 순서로 변경  ||
  ||[wiki:man/3/inet_addr inet_addr] ||인터넷 주소를 32bit 바이너리 주소로 변환한다.   ||
  ||[wiki:man/3/inet_aton inet_aton] ||인터넷 주소를 32bit 바이너리 주소로 변환한다. inet_addr의 최신버전  ||

== 관련글 ==
  * [wiki:Site/TCP_IP TCP/IP]
  * [wiki:Site/Network_Programing 리눅스 네트워크 프로그래밍]
  * [wiki:Site/win_network_prog 윈도 네트워크 프로그래밍]
[[tag(네트워크 프로그래밍,인터넷,윈속,socket)]]
@


1.3
log
@119.64.102.68;;yundream;;
@
text
@d18 1
@


1.2
log
@119.64.102.68;;yundream;;
@
text
@d19 18
a36 18
  || accept(2)  || socket(소켓)으로 부터 연결을 받아들인다.   ||
  || bind(2)    || 소켓(:12)에 특성을 부여한다.            ||
  || connect(2) || 소켓에 연결을 시도한다.            ||
  || listen(2)  || 소켓연결 대기열을 생성한다.        ||
  || open(2)    || 소켓 - 혹은 파일 - 을 생성한다.    ||
  || read(2)    || 소켓 - 혹은 파일 - 에서 읽는다.    ||
  || write(2)   || 소켓 - 혹은 파일 - 에 쓴다.        ||
  || socketpair(2) || 소켓쌍을 생성한다.              ||
  || recvfrom(2) || 소켓에서 메시지를 읽는다.         ||
  || recvmsg(2) || 소켓으로 부터 메시지를 읽는다.     ||
  || sendto(2)  || 소켓에 메시지를 쓴다.              ||
  || socket(2)  || endpoint 소켓을 생성한다.          ||
  || htonl(3)   || 호스트 바이트 순서를 네트워크 바이트 순서로 변경  ||
  || htons(3)   || 호스트 바이트 순서를 네트워크 바이트 순서로 변경  ||
  || ntohl(3)   || 네트워크 바이트 순서로 호스트 바이스 순서로 변경  ||
  || ntohs(3)   || 네트워크 바이트 순서로 호스트 바이스 순서로 변경  ||
  || inet_addr(3) || 인터넷 주소를 32bit 바이너리 주소로 변환한다.   ||
  || inet_aton(3) ||인터넷 주소를 32bit 바이너리 주소로 변환한다. inet_addr의 최신버전  ||
@


1.1
log
@119.64.102.68;;yundream;;
@
text
@d16 1
a16 1
소켓은 '''인터넷 주소'''와 '''포트 번호'''로 네트워크 상에서 유일한 소프트웨어를 찾을 수 있다. 인터넷 주소로 컴퓨터(정확한 표현은 네트워크 인터페이스이다)를 찾고 포트 번호로 컴퓨터에 있는 여러 소프트웨어 중 목적으로 하는 소프트웨어를 찾는다.
@
