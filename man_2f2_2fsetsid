#title linux man page : setsid - 세션을 만들고 프로세스 그룹 아이디를 설정한다.
[wiki:docbook/setsid(2) Docbook 원문]

{{{#!html
<HTML
><HEAD
><TITLE
>setsid(2)</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.76b+
"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="CHAPTER"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="CHAPTER"
><H1
><A
NAME="AEN1"
>1&#51109;. setsid(2)</A
></H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>&#52264;&#47168;</B
></DT
><DT
>1.1. <A
HREF="#AEN4"
>사용법</A
></DT
><DT
>1.2. <A
HREF="#AEN8"
>설명</A
></DT
><DT
>1.3. <A
HREF="#AEN13"
>반환값</A
></DT
><DT
>1.4. <A
HREF="#AEN16"
>에러</A
></DT
><DT
>1.5. <A
HREF="#AEN20"
>예제</A
></DT
><DT
>1.6. <A
HREF="#AEN24"
>참고문헌</A
></DT
></DL
></DIV
><P
>	세션을 만들고 프로세스(:12) 그룹아이디(GID)를 설정한다.</P
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN4"
></A
>1.1. 사용법</H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;unistd.h&#62;

pid_t setsid(void);
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN8"
></A
>1.2. 설명</H1
><P
>		만약 setsid()를 호출하는 프로세스(:12)가 프로세스 그룹의 리더가 아니라면 
		새로운 세션을 생성하고 해당 세션에 대한 그룹의 리더가 되며, tty(:12)를 
		제어할 수 없게 된다. 이렇게 setsid()를 호출해서 세션을 생성하고 
		그룹의 리더가 되었다면 세션아이디와 그룹아이디는 프로세스아이디(PID)와
		동일하게 된다. 이후 이 프로세스에서 생성되는 모든 (자식)프로세스들은 
		이 세션 아이디와 그룹아이디를 가지게 된다. 
		<DIV
CLASS="NOTE"
><BLOCKQUOTE
CLASS="NOTE"
><P
><B
>&#52280;&#44256;: </B
>			프로세스 그룹의 리더는 자신의 PID와 그룹아이디가 동일하다.
			setsid()는 특히 데몬(:12)으로 작동하는 프로그램을 만들기 위해서 
			주요하게 사용된다. 이럴 경우 fork()후 부모프로세스(:12)를 
			종료하고 setsid()를 호출하게 된다. 
		</P
></BLOCKQUOTE
></DIV
>
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN13"
></A
>1.3. 반환값</H1
><P
>		호출한 프로세스의 세션 아이디를 리턴한다.
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN16"
></A
>1.4. 에러</H1
><P
>		에러가 발생했을 경우 -1을 리턴한다. 에러는 <B
CLASS="EMPHASIS"
>EPERM</B
>일
		경우에만 발생한다. 이 에러는 프로세스가 어떤 이유로 다른 프로세스가 
		사용하는 PID(:12)를 세션아이디로 사용하려고 할때 발생한다.  
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN20"
></A
>1.5. 예제</H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;sys/types.h&#62; 
#include &#60;sys/stat.h&#62; 
#include &#60;stdio.h&#62; 
#include &#60;fcntl.h&#62; 

int main()
{
    pid_t   pid;

    if (( pid = fork()) &#60; 0)
   	    exit(0);

    // 부모프로세스를 종료한다. 
    else if(pid != 0)
        exit(0);

    // 데몬 프로그램은 상호대화할 일이 없으므로 
    // 표준입/출/에러를 닫는다. 
    close(0);  
    close(1);
    close(2);
    // 세션을 생성한다. 
    setsid();    
    // 데몬 프로그램이 실행할 코드를 작성한다.
    while(1)
    {
    } 	
}
		</PRE
></TD
></TR
></TABLE
>
		위의 프로그램은 setsid()를 이용해서 데몬프로그램을 만드는 
		전형적인 예제다.
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN24"
></A
>1.6. 참고문헌</H1
><P
>		<P
></P
><OL
TYPE="1"
><LI
><P
>					<A
HREF="http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_데몬(daemon) 프로그램에 대한 이해"
TARGET="_top"
>데몬프로그램에 대한 이해</A
>
				</P
></LI
><LI
><P
>					<A
HREF="http://www.joinc.co.kr/modules/moniwiki/wiki.php/Code_C_makedaemon"
TARGET="_top"
>데몬작성 예제</A
>
				</P
></LI
></OL
>
	</P
></DIV
></DIV
></BODY
></HTML
>
}}}
