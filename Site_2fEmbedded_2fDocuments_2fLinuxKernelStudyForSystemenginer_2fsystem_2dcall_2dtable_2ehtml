
{{{#!html
<HTML
><HEAD
><TITLE
>시스템 콜 테이블</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.69
"><LINK
REL="HOME"
TITLE="임베디드 시스템 엔지니어를 위한 리눅스 커널 분석"
HREF="index.html"><LINK
REL="UP"
TITLE="리눅스에 시스템 콜 만들어 넣기"
HREF="app2.html"><LINK
REL="PREVIOUS"
TITLE="IDT (Interrupt Descriptor Table)"
HREF="idt.html"><LINK
REL="NEXT"
TITLE="시스템 콜 추가"
HREF="my-system-call.html"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="SECT1"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
SUMMARY="Header navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>임베디드 시스템 엔지니어를 위한 리눅스 커널 분석</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="idt.html"
>이전</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
>부록 B. 리눅스에 시스템 콜 만들어 넣기</TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="my-system-call.html"
>다음</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><DIV
CLASS="SECT1"
><H1
CLASS="SECT1"
><A
NAME="SYSTEM-CALL-TABLE"
>B.3. 시스템 콜 테이블</A
></H1
><P
>			0x80 트랩 핸들러는 모든 시스템 콜에의해 불려지고 이 핸들러는 불려질 당시의 시스템 콜 번호를
			가지고 해당 시스템 콜을 시스템 콜 테이블에서 찾아  실행해 준다.
		</P
><P
>			모든 시스템 콜의 번호는 $(TOPDIR)/include/asm/unistd.h에 정의되어 있다.
		</P
><P
>			<P
></P
><UL
><LI
><P
>#define __NR_exit	1</P
></LI
><LI
><P
>#define __NR_fork	2</P
></LI
><LI
><P
>#define __NR_read	3</P
></LI
><LI
><P
>...</P
></LI
><LI
><P
>#define __NR_vfork	190</P
></LI
></UL
>
		</P
><P
>			시스템 콜 테이블은 $(TOPDIR)/arch/i386/kernel/entry.S에 정의되어 있고 각 시스템 콜의 주소가
			연속되게 적혀져 있다.
		</P
><P
>			<P
></P
><UL
><LI
><P
>.long SYMBOL_NAME(sys_ni_syscall)</P
></LI
><LI
><P
>.long SYMBOL_NAME(sys_exit)</P
></LI
><LI
><P
>.long SYMBOL_NAME(sys_fork)</P
></LI
><LI
><P
>.long SYMBOL_NAME(sys_read)</P
></LI
><LI
><P
>...</P
></LI
><LI
><P
>.long SYMBOL_NAME(sys_vfork)</P
></LI
><LI
><P
>.rept NR_syscalls-190</P
></LI
></UL
>
		</P
><P
>			<A
HREF="system-call-table.html#FIGURE.FORK-SYSTEM-CALL"
>그림 B-2</A
>은 fork()가 실행될 때의 흐름을 나타낸 그림으로 이해에
			도움을 줄 수 있을 것이다.
			<DIV
CLASS="FIGURE"
><A
NAME="FIGURE.FORK-SYSTEM-CALL"
></A
><P
><B
>그림 B-2. fork()가 실행될 때의 흐름</B
></P
><P
>
}}}
attachment:fork-system-call.png
{{{#!html
</P
></DIV
>
		</P
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="idt.html"
>이전</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="index.html"
>처음으로</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="my-system-call.html"
>다음</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>IDT(Interrupt Descriptor Table)</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="app2.html"
>위로</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>시스템 콜 추가</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>
}}}
