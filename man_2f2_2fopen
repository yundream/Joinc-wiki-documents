#title linux man page : open - 파일이나 장치를 열거나 생성한다.

{{{#!html
<HTML
><HEAD
><TITLE
><a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=open">open</a>(2)</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.64
"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="CHAPTER"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="CHAPTER"
><H1
><A
NAME="AEN1"
>1&#51109;. <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=open">open</a>(2)</A
></H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>&#52264;&#47168;</B
></DT
><DT
>1.1&#51208;. <A
HREF="#AEN4"
>사용법</A
></DT
><DT
>1.2&#51208;. <A
HREF="#AEN8"
>설명</A
></DT
><DT
>1.3&#51208;. <A
HREF="#AEN92"
>반환값</A
></DT
><DT
>1.4&#51208;. <A
HREF="#AEN95"
>에러</A
></DT
><DT
>1.5&#51208;. <A
HREF="#AEN135"
>예제</A
></DT
></DL
></DIV
><P
>파일이나 장치를 열고 생성한다.</P
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN4"
>1.1&#51208;. 사용법</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;sys/types.h&#62;

#include &#60;sys/stat.h&#62;
#include &#60;fcntl.h&#62;

int <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=open">open</a>(const char *pathname, int flags);
int <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=open">open</a>(const char *pathname, int flags, mode_t mode);
int <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=creat">creat</a>(const char *pathname, mode_t mode);
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN8"
>1.2&#51208;. 설명</A
></H1
><P
>		open(2) 은 시스템호출(:12)로, 파일(:12)을 열거나 생성 할때 사용한다.  
		성공하면 해당파일을 지시하는 int(:12) 형의 파일지시자를 되돌려준다. path_name 은 
		생성하고자 하는 파일이름을 나타낸다. 보통 full path 이름을 적어주며, 단지 파일이름만 
		적을경우에는 현재 경로에 파일이 생성된다.  
	</P
><P
>	flag 는 파일을 어떠한 mode 로 열것인지를 결정하기 위해서 사용한다. "읽기전용", "쓰기전용", 
	"읽기/쓰기" 모드로 열수 있다. 이들 모드 선택을 위해서 O_RDONLY, O_WRONLY, O_RDWR 이 존재 
	한다.   
	</P
><P
>		또한 다음중 하나이상의 mode 를 bitwise:::연산(:12)시킬수도 있다. 
		<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>O_CREAT</DT
><DD
><P
>	
					만약 pathname 파일이 존재하지 않을경우 파일을 생성한다. 
				</P
></DD
><DT
>O_EXCL</DT
><DD
><P
>	
					O_CREAT 를 이용해서 파일을 생성하고자 할때, 이미 파일이 존재한다면, 
					에러를 되돌려주며 파일을 생성하는데 실패한다. 이러한 특성때문에 때때로 
					잠금:::파일(:12)을 만들기 위해 사용되기도 한다.  
				</P
></DD
><DT
>O_APPEND</DT
><DD
><P
>	
					파일이 추가모드로 열린다. 파일의 위치는 파일의 끝이된다. 
				</P
></DD
><DT
>O_NONBOLOCK, O_NDELAY</DT
><DD
><P
>	
					파일이 비봉쇄:::모드(:12)로 열린다.  
				</P
></DD
><DT
>O_NOFOLLOW</DT
><DD
><P
>	
					경로명이 심볼릭:::링크(:12)라면, 파일열기에 실패한다. 
				</P
></DD
><DT
>O_DIRECTORY</DT
><DD
><P
>	
					경로명이 디렉토리(:12)가 아니라면 파일열기에 실패한다. 
				</P
></DD
><DT
>O_SYNC</DT
><DD
><P
>	
					입출력:::동기화(:12) 모드로 열린다. 모든 write 는 데이타가 물리적인 
					하드웨어에 기록될때까지 호출 프로세스를 블록시킨다.  
				</P
></DD
></DL
></DIV
>	
	</P
><P
>		또한 mode 를 이용해서 에 파일의 권한을 지정해 줄수도 있다. 
		<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>S_IRWXU</DT
><DD
><P
>	
					00700 모드로 파일 소유자에게 읽기, 쓰기, 쓰기 실행권한을 준다. 
}}}
{{{#!html adsense
				</P
></DD
><DT
>S_IRUSR</DT
><DD
><P
>	
					00400 으로 사용자에게 읽기 권한을 준다.  
				</P
></DD
><DT
>S_IWUSR</DT
><DD
><P
>	
					00200 으로 사용자에게 쓰기 권한을 준다.  
				</P
></DD
><DT
>S_IXUSR</DT
><DD
><P
>	
					00100 으로 사용자에게 실행 권한을 준다.  
				</P
></DD
><DT
>S_IRWXG</DT
><DD
><P
>	
					00070 으로 그룹에게 읽기, 쓰기, 실행 권한을 준다. 
				</P
></DD
><DT
>S_IRGRP</DT
><DD
><P
>	
					00040 으로 그룹에게 읽기권한을 준다. 
				</P
></DD
><DT
>S_IWGRP</DT
><DD
><P
>	
					00020 으로 그룹에게 쓰기권한을 준다. 
				</P
></DD
><DT
>S_IXGRP</DT
><DD
><P
>	
					00010 으로 그룹에게 실행권한을 준다.  
				</P
></DD
><DT
>S_IRWXO</DT
><DD
><P
>	
					00007 으로 기타 사용자 에게 읽기, 쓰기, 실행 권한을 준다.  
				</P
></DD
><DT
>S_IROTH</DT
><DD
><P
>	
					00004 으로 기타 사용자 에게 읽기 권한을 준다.  
				</P
></DD
><DT
>S_IWOTH</DT
><DD
><P
>	
					00002 으로 기타 사용자 에게 쓰기 권한을 준다.  
				</P
></DD
><DT
>S_IXOTH</DT
><DD
><P
>	
					00001 으로 기타 사용자 에게 실행 권한을 준다.  
				</P
></DD
></DL
></DIV
>	
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN92"
>1.3&#51208;. 반환값</A
></H1
><P
>		에러가 발생하면 -1 을 반환하며, 성공했을경우에는 새로운 파일 지시자를 반환한다. 
		에러시에는 적당한 errno 값이 설정된다.  
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN95"
>1.4&#51208;. 에러</A
></H1
><P
>		<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>EEXIST</DT
><DD
><P
>	
					O_CREAT 와 O_EXECL 이 같이 사용되었을경우 발생한다. 이미 경로파일이 존재할경우 
					발생된다. 	
				</P
></DD
><DT
>EACCES</DT
><DD
><P
>					파일 접근이 거부될경우이다. 주로 권한 문제 때문에 발생한다. 
				</P
></DD
><DT
>ENOENT</DT
><DD
><P
>					경로명의 디렉토리가 없거나, 심볼릭 링크가 깨져있을때.
				</P
></DD
><DT
>ENOENT</DT
><DD
><P
>					경로명의 디렉토리가 없거나, 심볼릭 링크가 깨져있을때.
				</P
></DD
><DT
>ENODEV</DT
><DD
><P
>					경로명이 장치파일을 참고하고, 일치하는 장치가 없을때.
				</P
></DD
><DT
>EROFS</DT
><DD
><P
>					경로명이 read-only 파일시스템을 참조하면서, 쓰기로 열려고 할때.
				</P
></DD
><DT
>EROFS</DT
><DD
><P
>					경로명이 read-only 파일시스템을 참조하면서, 쓰기로 열려고 할때.
				</P
></DD
><DT
>EFAULT</DT
><DD
><P
>					경로명이 접근할수 없는 주소강간을 가르킬때 
				</P
></DD
><DT
>ELOOP</DT
><DD
><P
>					심볼릭 링크가 너무 많을때.
				</P
></DD
></DL
></DIV
>	
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN135"
>1.5&#51208;. 예제</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>// /usr/my.temp 파일을 읽기 전용으로 열고자 할때
fd = open("/usr/my.temp", O_RDONLY);
...

<a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=close">close</a>(fd);

// 파일을 쓰기 전용으로 생성하며, 파일의 권한은 644 로 한다. 
// 만약 이미 파일이 존재한다면 에러가 발생할것이다.
fd = open("/usr/my.temp", O_CREAT|O_EXCL|O_WRONLY, S_IRUSR|S_IWUSR|S_IRGRP|S_IROTH); 
...
<a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=close">close</a>(fd);
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
></DIV
></BODY
></HTML
>
}}}

 * read(2)
 * write(2)
