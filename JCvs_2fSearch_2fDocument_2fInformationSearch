#title 정보검색 개론
웹문서검색을 중심으로 검색에 대한 이해를 하고, 검색엔진시 고려되어야 할 것과 향후 검색엔진의 발전방향에 대해서 논한다. 
[[UploadFile]]
== 정보검색과 웹검색 ==
정보검색에 대한 요구는 오래전 부터 있어왔다. 인터넷이 보급되기 이전에는 도서관에서 원하는 문헌을 효율적으로 찾기위한 정보검색시스템구축에 대한 요구가 대부분이였던 것이 인터넷이 보편화 되고, 정보가 인터넷으로 옮겨감에 따라서 무게중심이 '''웹검색'''으로 옮겨졌다.   

웹검색을 위해서는 일반적인 정보검색 프로그램에 웹의 특성을 처리할 수 있는 기술이 필요하다.  
 * 일반적인 정보검색 기능 
   1. 문서 수집, 색인 생성, 문서 랭킹
   1. 대용량 처리 (2006년 기준 80억 페이지 이상)
   1. 고속 응답 (100ms - 500ms 이내)
   1. 빠른 Update  
 * 웹검색의 특성
   1. 다양한 형식의 웹문서 처리 
   1. Spam 문서 처리 
   1. 다양한 랭킹 기준 : News, Blog, Wiki등 웹문서가 다루는 내용에 따라서 랭킹의 기준도 달라질 것이다. 

=== 웹 검색의 일반적인 구성 ===
웹검색은 '''Content Creators''', '''Content aggregators''', '''Content consumers'''의 3가지 구성요소를 가진다. 부동산 중계시장과 동일한 구성을 가진다. 부동산을 제공하는 업자, 중간에서 부동산 관련 정보를 취합하여 매물정보를 만들어서 DB화 하는 부동산 중계인, 그리고 부동산을 구입하는 일반 구매자가 존재하는 것과 동일하다.

부동산 중계업자의 경쟁력은 얼마나 많은 부동산업자로 부터 얼마나 많은 양질의 매물을 확보하고 있는가 하는 것이다. 검색역시 동일하다. 웹검색 엔진(혹은 서비스)의 경쟁력을 판단하는 가장 중요한 척도는 얼마나 많은 색인된 웹문서를 확보하고 있는가 하는 것이다.
{{{#!plain
  +-----+               +------------+
  |     |               | Google     |
  |     | ------------> | Yahoo      |------> Content consumers 
  |     | ------------> | Naver      |------> 
  |     |               | MSN        |
  +-----+               +------------+
  Content Creators
}}}

=== 검색엔진의 대략적인 변천사 ===
 1. keyword-base engine
    1995년에서 1997년 사이에 발표된 엔진으로 Altabista, Excite, Infoseek, Lycos등에서 사용했었다. 키워드 기반의 검색을 지원했으며, 분석해야할 문서의 갯수가 적었고, 검색엔진에 대한 필요와 상업적 성장잠재력에 대한 이해가 없었기 때문에, 이정도로도 충분했었다.
 1. Link-based ranking engine 
    1998년 이후 사용되는 모델이다. 문서의 링크를 기반으로 문서를 검색하고 랭크를 부여한다. 이때 부터 검색엔진의 상업적 모델에 대한 본격적인 응용이 시작되었다고 볼 수 있다.

=== 웹 검색의 기본 ===
웹검색에는 3가지 요소가 존재한다.
 1. Web
   수많은 다양한 형식의 문서가 연결되어 있다.
 1. Search Engine
   Web의 문서를 '''Web spider'''를 통해서 수집하고, 이를 색인한다. 필요할 경우 Adsense 색인등을 확장하기도 한다. 색인으로 부터 유저의 쿼리를 받아서 검색할 수 있어야 하기 때문에, Web 사용자 Interface까지를 Search Engine라고 할 수 있다.
 1. User 
   웹브라우저를 통해서 쿼리를 내리는 최종 사용자
==== Web ====
웹문서는 다음과 같은 특징들을 가지고 있다. 
 1. 문서들은 Linking로 서로 연결된다.
 1. 정형화되어 있지 않으며, 관리 주체도 없다. 
 1. 매우 빠른 속도로 새로운 문서가 만들어진다.
 1. 많은 문서들이 programing되어서 동적으로 생성된다.

===== 동적 컨텐츠 =====
이중 2번과 4번의 특징이 웹문서의 검색을 어렵게 하는 주요 요인이다. 동적으로 생성되는 페이지의 경우 실제 보여주고자 하는 내용은 URL인자를 통해서 변경이 된다. 이럴 경우 crawing하는데 문제가 생길 수가 있다. 또한 이러한 페이지는 정형화된 테이블형식을 가질 건데, 본문을 제외한 양 사이드컨텐츠와 위 아래의 컨텐츠는 모든 페이지에 걸쳐서 비슷한 내용을 보여주는 경우가 많다.     

이럴 경우 양사이드의 광고링크에 '''java'''라는 단어가 들어갔다면, java로 검색할 때 이 문서가 나올 것이다. 그런데 본문은 java와는 전혀 관계없는 페이지일 수 있다.  
{{{#!plain
 +----------------------------------+-------+
 | blog : 오늘 본 영화              |       |
 +----------------------------------+-------|
 | 오늘 본영화는 괴물 인데,         | 광고  |
 | 어쩌고 저쩌고                    | java  |
 | ...                              | intel |
 | ...                              |       |
 | ...                              |       |
 +----------------------------------+-------+
}}}
위의 블러그 페이지는 영화와 관련된 내용을 담고 있지만, 사이드 광고 때문에, 전혀 엉뚱하게도 intel, java로 검색될 수 있다. 물론 scoreing 알고리즘에 의해서 순위가 조정될 수 있겠지만, 블러그/뉴스 전용 검색엔진을 만들고자 할때는 심각한 문제가 될 수 있다. 

다음은 '''동적 페이지'''가 생성되는 방식이다.
{{{#!plain
 +------------+
 | Browser    |      http://url/blog.html?id=
 |            |                                            +----------+
 |            |--------> Application Server -------------> | Backend  |-+
 |            |<-------                     <------------- | Database | |
 |            |                                            +----------+ |
 |            |                                             +-----------+
 |            |
 +------------+
}}}
또한 이런 동적 컨텐츠는 web spider가 접근을 못하는 경우가 많으며, 컨텐츠보호등을 이유로 접근을 못하게 막는 경우도 발생한다. 때문에 특화된 검색서비스의 경우 사이트의 특성을 고려한 web spider 프로그램을 만들어야 한다. 만약 frame를 사용했다면, 더 골치아파 질 것이다. 실제 이런 문제들 때문에, 검색결과의 질이 점점 떨어지고 있다.

최종적으로 웹검색 서비스의 질을 높일려면 지능형 spider이 개발되어야 한다. 이 spider는 아래의 요건이 만족되어야 할 것이다.
 1. 컨텐츠에서 목적으로 하는 부분만을 가져올 수 있어야 한다.
 1. 서비스에 특화되어 있으며 frame등을 능동적으로 판단할 수 있어야 한다.
 1. spam차단기에 걸리지 않아야 한다. 

===== 컨텐츠의 증가 =====
attachment:site_count_history.gif

1999년을 기점으로 급격하게 증가되고 있음을 확인할 수 있다. 특이하게 2002년경에 감소가 되었는데, 닷컷버블시기와 겹치고 있음을 알 수 있다.  

===== 분야별 컨텐츠의 점유율 =====
수백종류의 언어로된 컨텐츠가 존재하고 있는 것으로 파악되며, 이정 W3C encoding으로 지원하는게 55개 언어이며, 전체 컨텐츠의 50%이상이 영어로 씌여졌다.  

다음은 분야별 컨텐츠의 점유율이다.
 || Arts				|| 14.6%			|| Arts: Music						|| 6.1%			||
 || Computer		|| 13.8%			|| Regional: Noth America	|| 5.3%			||
 || Regional		|| 10.3%			|| Adult:Image Galleries	|| 4.4%			||
 || Society			|| 8.7%				|| Computers: Software		|| 3.4%			||
 || Adult				|| 8%					|| Computers: Internet		|| 3.2%			||
 || Recreation	|| 7.3%				|| Business:Industries		|| 2.3%			||
 || Business		|| 7.2%				|| Regional:Europe				|| 1.8%			||

=== 웹로봇 ===
정보검색에 있어서 가장 먼저 행해지는 행위는 다양한 형태의 웹문서를 수집하는 행위로, 이는 '''웹로봇'''에 의해서 수행된다. 웹로봇은 지정된 URL에서 시작하여 만들어진 URL목록에 있는 웹문서를 수집하며, 문서중에 URL을 수집하고 새로 발견된 URL은 다시 수집하는 과정을 반복하는 소프트웨어다. 결국 정보검색의 품질 보증은 얼마나 효과적인 웹로봇을 가지고 있느냐에 따라 좌우된다고 볼 수 있다.   

웹로봇은 2006년 기준 80억개 정도의 전체문서를 다룰 수 있어야 한다. 국내문서 검색용으로만 검색하는 걸로 범위를 축소하더라도 8000만건 이상의 웹문서를 수집할 수 있어야 한다.   

=== 웹검색 행태 ===
검색엔진은 보통 검색 서비스를 만들기 위해서 사용된다. 그렇지 않은 경우도 있지만 많은 사이트들이 검색엔진자체를 제공하기 보다는 검색서비스를 제공한다. 

구글봇

attachment:googlebot.gif

Google(:12)같은 경우가 검색엔진을 제공하는 대표적인 경우라 할 수 있다. '''Naver''', '''다음''', '''야후''' 같은 경우가 검색서비스를 제공하는 경우다. 결국 효과적인 서비스를 위한 검색엔진(혹은 서비스)를 개발하길 원한다면 유저의 웹검색 행태를 분석할 필요가 있다.   

웹검색은 기본적으로 사용자의 요청을 받으면 거기에 충실하게 대답을 하는걸 목적으로 한다. 그러나 웹서비스는 사용자에게 '''이것을 검색하면 재미있는 정보를 얻을 수 있을 겁니다''' 하는 식으로 사용자의 검색을 유도한다. 포탈이 사회의 의제를 만들어간다라는 얘기가 나오는 이유다.    

이렇게 사용자에게 검색을 유도하기 위해서, 서비스측은 '''통합검색'''이라는 서비스를 내놓게 된다. 통합검색에서 이루어지는 검색질의의 비율은 90%정도로 거의 절대적이라 할 수 있다. 9%의 사용자만이 웹검색엔진을 이용한 웹문서 검색과, 1%정도도 안되는 사용자가 디렉토리 검색을 할 뿐이다.   

웹검색 행태에 대한 다양한 분석이 가능하겠지만, 간단히 생각하면 된다. '''통합검색'''에서 끝난다.

주요 검색 키워드는 대략 다음과 같다.
|| 1	|| 연예/스포츠		|| 14.3%		||
|| 2	|| 교육관련				|| 12.4%		||
|| 3	|| 최근뉴스				|| 12.0%		||
|| 4	|| 컴퓨터 관련		|| 10.3%		||
|| 5	|| 브랜드 / 회사	|| 7.9%			||
|| 6  || 건강/다이어트	|| 7.5%			||
|| 7	|| 게임/애니			|| 7.1%			||
|| 8	|| 영화/공연			|| 6.6%			||

== 정보검색 시스템 ==
