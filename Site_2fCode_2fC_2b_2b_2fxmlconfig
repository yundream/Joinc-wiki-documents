#title Xml Config

== 소개 ==
 * 범용적으로 사용가능한 XML 설정 read 라이브러리
 * 참고 : [wiki:article/xml xml 위키]

== 기능 ==
<name, value> 형식의 단순한 xml 설정을 읽을 수 있는 가벼운 라이브러리를 제작한다. 

아이디어는 hadoop(:12)의 Configuration class에서 얻었다. 다음과 같은 형식의 xml 설정을 읽어들인다. 
{{{#!plain
<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<!-- Put site-specific property overrides in this file. -->

<configuration>

<!-- add by ohsgx@onnet.co.kr 2006.08.11 -->
<property>
  <name>http.agent.name</name>
  <value>xMind</value>
  <description>HTTP 'User-Agent' request header.</description> 
</property>

<property>
  <name>fetcher.server.delay</name>
  <value>1.0</value>
  <description>connect delay</description>
</property>
}}}

DTD(:12)는 다음과 같이 단순하게 정의할 수 있다.
{{{#!plain
<!ELEMENT configuration (property*)>
<!ELEMENT property (name, value, description?) 
}}}
 1. configuration은 property를 가지고 있지 않을 수도 있으며, 하나 이상 가질 수도 있다. 
 1. property 는 name과 value를 반드시 가지고 있어야 하며, description는 포함하지 않을 수도 있다. 

== class 정의 ==
class Configuration
{
	private:
		vector<string> ConfigList;
		string ConfigDir;
	public:
		Configuration()
		{
			ConfigDir = "./config";
		}
		Configuration(string dir)
		{
			ConfigDir = dir;
		}

		/* 읽어들일 설정파일을 등록한다 */
		int AddResource(string name)
		{
			ConfigList.push_back(name);
		}

		/* <name, value> 를 읽어들이기 위한 메서드들 */
		int GetInt(string name, int defaultValue);
		float GetFloat(string name, float defaultValue);
		string GetString(string name, string defaultValue);
		long GetLong(string name, long defaultValue);
		boolean GetBoolean(string name, boolean defaultValue);

		/* <name, value> 를 설정을 쓰기 위한 메서드들 */
		/* 첫번째 버전에서는 쓰기 기능을 구현하지 않는다. */ 
}
