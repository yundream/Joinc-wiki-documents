#title Whetting Your Appetite 

이글을 읽고 있는 당신이 프로그래머라면 종종 자동화하면 좋을 것 같은 일을 맡게될 것이다. 예를 들어 주기적으로 일정 크기 이상의 파일을 찾아서 삭제를 한다거나 로그파일을 날짜 별로 자른다거나 이미지 파일의 포맷을 전부 바꾸거나 혹은 이미지 파일의 섬네일 이미지를 만든다거나 등등. 이런 일들이 주어진다면 아마 여러분은 이런일을 간단하게 해주는 GUI 프로그램이 없나 찾을 것이다.

하지만 이런 일을 해주는 특화된 프로그램을 찾기는 매우 힘들 것이다. 왜냐하면 이런 류의 특화된 프로그램은 보통 일반유저를 위한 것이기 때문이다. 이미지 파일의 포맷을 바꾸는 프로그램이 있다고 하자. 이런 프로그램은 GUI 화면상에 이미지의 섬네일을 출력할 것이다. 그리고 마우스로 이미지를 선택해서 하나씩 포맷을 바꾸는 식으로 작동하지, 특정 디렉토리의 하위 디렉토리까지 이미지 파일을 찾아서 포맷을 변경해주는 그런일을 하지는 않는다. 물론 드물게 그런 프로그램이 있기도 하겠지만 찾기도 어려울 뿐더러, 이런 강력한 기능을 가진 프로그램은 십중팔구 비용을 지불해야 할 것이다.

개발자가 하는 일과 일반 컴퓨터 사용자가 하는 일이란 차이가 있다는 이야기다.

개발자라면 C/C++/Java와 같은 언어를 이용해서 이런 일을 하는 프로그램을 개발해서 사용할 수 있을 것이다. 프로그래밍을 할 줄 안다면, 거의 모든 일을 다 할 수 있겠지만 "코드작성 -> 컴파일 -> 테스트 -> 재 컴파일"이라는 느린 개발주기를 따라야 한다. 당신이 경험이 좀 더 많은 개발자라면 라이브러리(:12)를 이용해서 개발주기를 빠르게 가져갈 수 있기는 할 것이다.

여러분이 더 똑똑하다면 (혹은 게으르다면) "코드작성 -> 실행"으로 개발주기를 단축할 수 있는 스크립트 언어를 선택할 것이다. Bash(:12), Perl(:12), Ruby(:12) 그리고 이 문서에서 다룰 '''Python'''등이다. 

특히 리눅스(:12) 사용자라면 아마도 Shell 스크립트를 이용해서 작업을 수행하는 프로그램을 개발해봤을 것이다. 텍스트 문서에서 특정 필드의 값을 가져와서 정렬하고 하는 그런 것들 말이다. 이들 언어로 만든 프로그램은 예쁜 인터페이스를 제공하는 GUI 애플리케이션과 비교해 보면, 투박하고 단순하게 보일지 모르겠지만 지금하려고 하는 일에 대해서는 최고의 성능을 보여줄 것이다. 

Python도 Shell 스크립트와 비슷한 종류의 프로그래밍 언어라고 할 수 있다. 하지만 Pyton은 Shell에 비해서 더 강력하며, 명확하며, 진짜 프로그래밍 언어와 같은 모습을 보여준다. Shell 스크립트 언어도 언어이기는 하지만 최근에 개발된 Python같은 언어에 비하면 본격적인 프로그래밍 언어라고 하기엔 상당히 부족한 느낌이다. 

Python은 스크립트 언어처럼 작동한다. 즉 "코드작성 -> 실행"으로 개발주기를 단축할 수 있다. 또한 C(:12)같은 언어처럼 언어로서의 모든 기능을 가지고 있으며, C 언어에 비해서 사용하기도 쉽다. 데이터 타입을 걱정할 필요도 없으며, 배열과 dictionaries와 같은 자료구조를 내장하고 있다. C언어로 배열이나 dictionaries와 같은 자료구조를 구현해 본적이 있다면, 그게 얼마나 고달픈 작업인지를 이해할 것이다. 문자열도 다루기 쉽다. 즉 Python은 엄격하지 않으며, C 보다 훨씬 인간 친화적이다. 다른 말로 high-level language다. 그래서 C 보다 훨씬 쉽게 큰 프로그램을 만들 수 있다.

python은 모듈이라는 개념을 지원하는데, 모듈은 재사용가능한 코드의 모음으로 Python 프로그램을 쉽게 개발하도록 도와준다. 레고 블럭이라고 생각하면 된다. 

python은 인터프리티드 언어로, 작성한 코드는 컴파일과 링크과정을 거칠필요 없이 즉시 실행할 수 있다. 코드는 즉각 실행해서 테스트할 수 있다.  

