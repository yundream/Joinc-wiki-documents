#title linux man page : mkfifo - named pipe를 생성한다. 

{{{#!html
<HTML
><HEAD
><TITLE
><a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=mkfifo">mkfifo</a>(3)</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.64
"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="CHAPTER"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="CHAPTER"
><H1
><A
NAME="AEN1"
>1&#51109;. <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=mkfifo">mkfifo</a>(3)</A
></H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>&#52264;&#47168;</B
></DT
><DT
>1.1&#51208;. <A
HREF="#AEN4"
>사용법</A
></DT
><DT
>1.2&#51208;. <A
HREF="#AEN8"
>설명</A
></DT
><DT
>1.3&#51208;. <A
HREF="#AEN14"
>반환값</A
></DT
><DT
>1.4&#51208;. <A
HREF="#AEN17"
>에러</A
></DT
><DT
>1.5&#51208;. <A
HREF="#AEN33"
>예제</A
></DT
></DL
></DIV
><P
>특수파일인 FIFO 를 만들기 위해서 사용한다. FIFO 는 다른말로 
이름있는 pipe (명명된 파이프) 라고 부르기도 한다.  </P
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN4"
>1.1&#51208;. 사용법</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;sys/types.h&#62;

#include &#60;sys/stat.h&#62;

int mkfifo ( const char *pathname, mode_t mode );
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN8"
>1.2&#51208;. 설명</A
></H1
><P
>		mkfifo 는 특수 파일인 FIFO 파일을 만들기 위해서 사용되며, 
		pathname 이름을 가지며 mode 의 권한을 가지는 FIFO 파일을 
		만들어낸다. 주로 IPC 용도로 사용된다.  
	</P
><P
>		FIFO 파일은 pipe 와 매우 비슷하지만, pipe 와 달리 이름있는 
		파일을 통해서 통신을 할수 있도록 해준다는 점이 다르다. 
		그러므로 관계없는 프로세스들이라고 할지라도 FIFO 파일이름만 알면 
		통신이 가능하도록 만들수 있다. 
	</P
><P
>		일단 FIFO 파일이 만들어지면 open, write, read 등의 표준 함수를 
		이용해서 보통의 파일처럼 접근이 가능하다.  
	</P
><P
>		FIFO 는 First In First Out 의 뜻을가진다. 먼저들어온 데이타가 
		먼저 나가는 queue 방식의 입/출력을 지원한다. 
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN14"
>1.3&#51208;. 반환값</A
></H1
><P
>		성공할 경우 0을 되돌려준다. 
		실패할 경우에는 -1 을 되돌려주며 적당한 errno 값을 세팅한다. 
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN17"
>1.4&#51208;. 에러</A
></H1
><P
>		<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>EACCESS</DT
><DD
><P
>	
					pathname 의 디렉토리 구성요소중 어느 하나에 접근할수 
					없을때 	
				</P
></DD
><DT
>EEXIST</DT
><DD
><P
>					pathname 이 이미 존재하고 있을때.
				</P
></DD
><DT
>ENOENT</DT
><DD
><P
>					pathname 의 디렉토리 구성요소중 어느 하나가 존재 
					하지 않는 디렉토리를 가르키고 있을때
				</P
></DD
></DL
></DIV
>	
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN33"
>1.5&#51208;. 예제</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;sys/types.h&#62;

#include &#60;sys/stat.h&#62;
#include &#60;unistd.h&#62;
#include &#60;stdio.h&#62;

int <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=main">main</a>()
{
    int state;
    state = mkfifo("/tmp/myfifo", S_IRUSR|S_IWUSR);
    if (state &#60; 0)
    {
        <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=perror">perror</a>("mkfifo error &#92;n");
        <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=exit">exit</a>(0);
    }
    <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=for">for</a>(;;)
    {
        <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=sleep">sleep</a>(1);
    }
}
		</PRE
></TD
></TR
></TABLE
>

		위의 예제는 mkfifo 를 이용해서 /tmp/myfifo 란 파일을 만든다. 
		만들어진 파일을 ls 해보면 다음과 같은 정보를 보여준다.  
		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>[root@localhost test]# ls -al /tmp/myfifo 
prwx------    1 root     root            0  6월 16 18:40 /tmp/myfifo
		</PRE
></TD
></TR
></TABLE
>
		'p' 를 통해서 FIFO <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=파일">파일</a>(pipe) 임을 알수 있다.  
	</P
></DIV
></DIV
></BODY
></HTML
>
}}}
