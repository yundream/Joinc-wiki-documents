head	1.5;
access;
symbols;
locks
	root:1.5; strict;
comment	@# @;


1.5
date	2015.05.20.03.19.42;	author root;	state Exp;
branches;
next	1.4;

1.4
date	2013.10.27.15.39.11;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2013.10.27.15.37.57;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2013.10.27.15.36.08;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2013.05.28.07.06.05;	author root;	state Exp;
branches;
next	;


desc
@./data/text/man_2f12_2fMaseratiProblem
@


1.5
log
@119.64.102.68;;yundream;;
@
text
@#title Maserati Problem 

== Maserati Problem ==
https://lh5.googleusercontent.com/-5SXbsioPQLg/UaRSdCVYmKI/AAAAAAAADFg/QwTOFc0K6Io/s400/2007-edo-competition-maserati-mc12-front-angle-closeup-1280x960.jpg

마세라티라는 자동차 브랜드가 있나보다. 나는 자가용에 관심이 없어서 모르겠는데 (아마도)유명하고, (아마도)굉장히 비싼 브랜드인게 분명하다.

나는 차를 좋아한다. 나는 차를 구입해야 한다. 마세라티 브랜드의 수억원을 호가하는 고가 모델을 구입하고 싶지만, 아마도 10년 후에나 구입이 가능할 거다. 하지만 난 벌써 부터 "마세라티의 어떤 모델을 구입할 건지, 색깔은 어떻게 해야 할지, 기타등등의 옵션은 어떻게 해야 할지 결정할 수가 없어서 고민이다.

이 경우 해결 방법은 이렇다. 10년후의 일은 10년후에 걱정하고, 지금은 수준에 맞는 어번테나 소너타 정도에서 고민해라. 

이런 문제는 개발과정에서도 생길 수 있다. 
  * 비록 이제 막 개발하는 서비스이지만
  * 하루에 백만명이 접속할 지도 모르니
  * 그만큼의 유저 요청을 처리할 수 있는 확장가능한 서비스 모델을 개발해야 한다.
  * 이런 서비스에는 Hadoop이 대세라는 군, Hadoop를 써야겠어.
  * 엄청난 데이터를 빠르게 처리하려면 NoSQL이 있어야 한다더군. Mysql로는 안돼!!. MongoDB인가를 도입해야지. 
  * Spark라는 것도 있다는 군.
  * 자동 백업, 자동복구도 해야해. 
  * 소프트웨어 개발과 배포에 도커(docker)가 죽인다는 군.
  * 로그 수집.. 그거 카프카로 한번 해봐. 초당 수천수만건의 로그를 자유롭게 수집하고 처리 할 수 있데. 

이러면서 시스템을 갈아엎고 재 설계하고, 새로운 방법/툴들을 도입하는 것을 반복한다. 

MongoDB고 Hadoop이고 뭐고 됐고, 그냥 PHP+Mysql로 개발해라. 프로젝트에는 익숙한 걸로 개발하는게 맞다. 익숙한 걸로 개발해도 문제는 빵빵터지고, 일정은 늘어날 거다. 혁신을 위한 시간 투자 ? 그건 MongoDB든 hadoop이든 검색엔진이든지 스터디를 해서 경험을 축적한 다음에 다음 프로젝트에 적용하면 된다. 시간도 충분하고 연구인력도 충분하고 돈도 남아돈다면 ? 뭘하든 상관없다. 

== 관련 글 ==
 * [http://www.venturesquare.net/585839 VENTURE Square - 마세라티 문제]
@


1.4
log
@128.134.217.152;;yundream;;
@
text
@d14 1
a14 1
  * 하루에 백만명이 접속할 지도 모르니 
d17 5
a21 5
  * 엄청난 데이터를 빠르게 처리하려면 NoSQL이 있어야 한데. MongoDB인가를 도입해야지.  
  * 품질관리를 위해서 자동으로 프로비저닝을 해야 겠어.
  * 자동 백업, failover도 해야 겠지. 
  * 코드 형상관리도 완벽해야해. CI툴을 도입 자동 테스트, 자동배포 해야 겠어. 이슈트래킹툴을 도입해야할 뿐더러 이들을 통합하기도 해야 겠어. git을 봤더니, gitflow인가 뭔가 하면서 다양한 관리방법들이 있더군 그래 이것들을 써야겠어. 
  * 모니터링은 기본이야. 호스트가 얼마나 늘어날지 알 수 없으니, 분산모니터링 환경을 만들어야 하겠어. 몇개 툴들 살펴봤는데, 아오 뭐 이따위로 만들었어... 새로 만들어야지.  
d23 1
a23 1
이러면서 시스템을 갈아엎고 재 설계하고, 새로운 방법/툴들을 도입하는 것을 반복한다. 이런 모습을 보면서 "저..적당히 형편에 맞게하는게 어.. 어떻겠니" 라고 말하고 싶다면, 너 "마세라티 병에 걸린거 같아" 라고 일러준다. 
d25 4
a28 1
MongoDB고 Hadoop이고 뭐고 됐고, 그냥 PHP+Mysql로 개발해라. 프로젝트에는 익숙한 걸로 개발하는게 맞다. 익숙한 걸로 개발해도 문제는 빵빵터지고, 일정은 늘어날 거다. 혁신을 위한 시간 투자 ? 그건 MongoDB든 hadoop이든 검색엔진이든지 스터디를 해서 경험을 축적한 다음에 다음 프로젝트에 적용하면 된다. 물론 당장 서비스할 필요도 없고, 시간도 충분하고 개발인력도 충분하다면 고민해도 된다. 이런 고민은 팀의 역량을 높여줄 거다.
@


1.3
log
@128.134.217.152;;yundream;;
@
text
@d25 1
a25 1
MongoDB고 Hadoop이고 뭐고 됐고, 그냥 PHP+Mysql로 개발해라. 프로젝트에는 익숙한 걸로 개발하는게 맞다. 익숙한 걸로 개발해도 문제는 빵빵터지고, 일정은 늘어날 거다. 혁신을 위한 시간 투자 ? 그건 MongoDB든 hadoop이든 검색엔진이든지 스터디를 해서 경험을 축적한 다음에 다음 프로젝트에 적용하면 된다. 
@


1.2
log
@128.134.217.152;;yundream;;
@
text
@a19 1

@


1.1
log
@1.214.223.250;;yundream;;
@
text
@d8 1
a8 1
나는 차를 좋아한다. 나느 차를 구입해야 한다. 마세라티 브랜드의 수억원을 호가하는 고가 모델을 구입하고 싶지만, 아마도 10년 후에나 구입이 가능할 거다. 하지만 난 벌써 부터 "마세라티의 어떤 모델을 구입할 건지, 색깔은 어떻게 해야 할지, 기타등등의 옵션은 어떻게 해야 할지 결정할 수가 없어서 고민이다.
@
