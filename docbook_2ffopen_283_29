#title fopen(3)
[wiki:function_fopen(3) HTML 변환문서]

{{{#!plain
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook V4.1//EN">
<chapter lang=ko>
<!-- 작성자 : yundream             -->
<!-- 작성일 : 2004/06/09           -->
<!-- 연락처 : dreamyun@yahoo.co.kr -->

<!-- 함수 이름을 입력합니다 -->
<title>fopen(3)</title>

<!-- 이건 함수에 대한 대략적인 설명이구요 -->
<para>
	파일로 부터 스트림을 생성한다.
</para>
 
<!-- 여기에 함수의 간단한 사용법이 들어갑니다 -->
<section>
	<title>사용법</title>
	<para>
		<screen>
#include &lt;stdio.h&gt;

FILE *fopen(const char *path, const char *mode);
FILE *fdopen(int fildes, const char *mode);
FILE *freopen(const char *path, const char *mode, FILE *stream);
		</screen>
	</para>
</section>

<!-- 여기엔 함수의 자세한 설명 이 들어갑니다 -->
<section>
	<title>설명</title>
	<para>
	</para>
</section>

<!-- 함수가 되돌려주는 값이구요 -->
<section>
	<title>반환값</title>
	<para>
		fopen 은 종종 open(2) 함수와 비교되어서 설명된다. byte 단위로 
		열린파일을 다루는 open 과는 달리 fopen 는 stream 단위로 열린파일의 
		데이타를 다룬다. 즉 fopen 은 자체적으로 버퍼를 관리함으로써, 함수 
		사용자가 저수준에서 다루어야할 많은 것들을 대신 해결해 줌으로 좀더 
		쉽게 사용할수 있다. 
	</para>
	<para>
		path 에 지정된 파일을 mode 에 주어진 모드로 연다. 
	</para>
	<para>
		이 함수는 fputs(3), fgets(3), ungetc(3), getc(3) 등과 같이 쓰이며 
		표준 I/O(입출력) 함수라고 부른다. 
	</para>
	<para>
		다음과 같은 mode 를 path 에 대해서 지정해줄수 있다. 
		<variablelist>	
			<varlistentry>
			<term>r</term>	
			<listitem>
				<para>	
				파일을 읽기 전용으로 연다. stream 포인터의 위치는 파일의 시작위치를 가리킨다. 
				</para>	
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>r+</term>	
			<listitem>
				<para>	
				파일을 읽기/쓰기로 연다. stream 포인터의 위치는 파일의 시작위치를 가리킨다.
				</para>	
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>w</term>	
			<listitem>
				<para>	
				쓰기전용의 파일을 열기 위해서 사용된다. 열린 파일크기는 0 이되며, stream 
				포인터의 위치는 파일의 시작위치를 가리킨다. 
				</para>	
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>w+</term>	
			<listitem>
				<para>	
				파일을 읽기/쓰기로 연다. 파일이 이미 존재한다면, 파일의 크기는 0이 된다. 
				stream 포인터의 위치는 파일의 시작위치를 가리킨다. 
				</para>	
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>a</term>	
			<listitem>
				<para>	
				쓰기위해서 파일을 연다. 파일이 존재하지 않는다면 새로 생성한다. stream 
				포인터의 위치는 파일의 시작위치를 가리킨다. 
				</para>	
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>a+</term>	
			<listitem>
				<para>	
				파일을 읽기/쓰기로 연다. 파일이 존재하지 않는다면 새로생성한다. stream 포인터의 
				위치는 파일을 끝을 가리킨다. 
				</para>	
			</listitem>
			</varlistentry>
		</variablelist>	
	</para>
	<para>
		fdopen(3)함수는 파일지정자 <emphasis>fildes</emphasis>로 부터 스트림을 얻어온다. 
		<emphasis>mode</emphasis>는 fopen에 사용하는 것들을 그대로 사용할 수 있다. 
		그렇지만 파일지정자의 mode와 조화를 이룰 수 있어야 한다.
	</para>
	<para>
		freopen(3)함수는 <emphasis>stream</emphasis>를 <emphasis>path</emphasis>파일과 연결
		한다. 이때 최초의 stream은 닫히게 된다. mode는 fopen에서 사용하는 것과 동일하다. 
		이함수는 stderr, stdin, stdout 등을 파일과 연결시키고자 할때 주로 사용한다.   
	</para>
</section>

<!-- 에러가 발생했을때 되돌려주는 값들입니다 -->
<section>
	<title>에러</title>
	<para>
		<variablelist>	
			<varlistentry>
			<term>EINVAL</term>	
			<listitem>
				<para>	
				잘못된 mode를 지정했을 경우 
				</para>	
			</listitem>
			</varlistentry>
		</variablelist>	
		이 외의 에러는 open(2)와 동일하다.
	</para>
</section>

<!-- 마지막으로 에제 입니다                                                 -->
<!-- 여기에는 완전한 예제가 들어가 있는데, 굳이 완전한 예제를 만들필요 없이 -->
<!-- 코드 일부분만 작성해서 올려주셔도 됩니다                               --> 
<!-- "<", ">", "&" 등은 변환해 주셔야 하는데, 귀찮으시면 :-) 변환 하지 않   -->
<!-- 아도 됩니다. 제가 검사 해서 올리겠습니다                               -->
<!-- 예제에 대한 간단한 설명을 적어주셔도 되구요                            -->
<section>
	<title>예제</title>
	<para>
		<screen>
#include &lt;stdio.h&gt;
#include &lt;unistd.h&gt;

int main(int argc, char **argv)
{
    FILE *fp;

    fp = fopen("/home/test/test.txt", "r");
    if (fp == NULL)
    {
        perror("File open error: ");
        exit(0);
    }
    // 표준 I/O 함수를 이용한 여러가지 작업을 한다.  

    fclose(fp);
    return 0;
}
		</screen>
	</para>
</section>
<section>
	<title>참고문헌</title>
	<para>
		<orderedlist>
			<listitem>
				<para>
					open(2)
				</para>
			</listitem>
			<listitem>
				<para>
					fopen(3)
				</para>
			</listitem>
			<listitem>
				<para>
					fileno(3)
				</para>
			</listitem>
			<listitem>
				<para>
					<ulink url="http://www.joinc.co.kr/modules.php?name=News&amp;file=article&amp;sid=43">stdio.h 사용하기</ulink>
				</para>
			</listitem>
		</orderedlist>
	</para>
</section>
</chapter>
}}}
