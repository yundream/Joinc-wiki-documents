#title epoll을 제어하기 위한 인터페이스 

{{{#!html
<HTML
><HEAD
><TITLE
>epoll_ctl(2)</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.76b+
"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="CHAPTER"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="CHAPTER"
><H1
><A
NAME="AEN1"
>1&#51109;. epoll_ctl(2)</A
></H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>&#52264;&#47168;</B
></DT
><DT
>1.1. <A
HREF="#AEN4"
>사용법</A
></DT
><DT
>1.2. <A
HREF="#AEN8"
>설명</A
></DT
><DT
>1.3. <A
HREF="#AEN19"
>반환값</A
></DT
><DT
>1.4. <A
HREF="#AEN27"
>에러</A
></DT
><DT
>1.5. <A
HREF="#AEN43"
>예제</A
></DT
><DT
>1.6. <A
HREF="#AEN47"
>참고문헌</A
></DT
></DL
></DIV
><P
>	epoll 파일지정자를 제어한다.</P
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN4"
></A
>1.1. 사용법</H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;sys/epoll.h&#62;

int epoll_ctl(int epfd, int op, int fd, struct epoll_event *event)
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN8"
></A
>1.2. 설명</H1
><P
>		이 함수는 epoll 파일지정자인 <B
CLASS="EMPHASIS"
>epfd</B
>를 제어한다. 
		제어는 제어하고자 하는 파일지정자<B
CLASS="EMPHASIS"
>fd</B
>에 대해서 
		<B
CLASS="EMPHASIS"
>op</B
>를 이용해서 명령을 내리는 것으로 이루어 진다. 
		또한 <B
CLASS="EMPHASIS"
>event</B
>구조체의 사용자 정의 데이터를 변경함으로 써
		나중에 이벤트가 발생했을때 이벤트에 대한 정보로 사용할 수 있다.
		다음은  정의된 <B
CLASS="EMPHASIS"
>events</B
>구조체이다. 
		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>	
typedef union epoll_data {
     void *ptr;
     int fd;
     __uint32_t u32;
     __uint64_t u64;
} epoll_data_t;

struct epoll_event {
     __uint32_t events;  /* Epoll 이벤트 */
     epoll_data_t data;  /* 유저 설정 값 */
};
		</PRE
></TD
></TR
></TABLE
>	
	</P
><P
>		events멤버변수를 이용해서 파일지정자 <B
CLASS="EMPHASIS"
>fd</B
>가 어떤 
		이벤트에 반응할 것인지를 결정할 수 있다. 다음과 같은 이벤트 종류들이 있다. 
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN19"
></A
>1.3. 반환값</H1
><P
>		성공했을 경우 이벤트가 발생한 파일 지정자의 갯수를 리턴한다. timeout시간
		동안 이벤트가 발생하지 않았을 경우 0을, 에러가 발생했을 경우에는 -1을 리턴
		한다.	
		<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>EPOLLIN</DT
><DD
><P
>	
					epfd가 유요한 파일 지정자가 아니다.
				</P
></DD
></DL
></DIV
>	
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN27"
></A
>1.4. 에러</H1
><P
>		<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>EBADF</DT
><DD
><P
>	
					epfd가 유요한 파일 지정자가 아니다.
				</P
></DD
><DT
>EBADF</DT
><DD
><P
>	
					epfd가 유요한 파일 지정자가 아니다.
				</P
></DD
><DT
>EFAULT</DT
><DD
><P
>	
					잘못된 메모리 영역을 가리키고 있다.
				</P
></DD
></DL
></DIV
>	
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN43"
></A
>1.5. 예제</H1
><P
>		<A
HREF="http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_epoll"
TARGET="_top"
>epoll 연구 위키</A
>
		의 예제를 참고하기 바란다.
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN47"
></A
>1.6. 참고문헌</H1
><P
>		<P
></P
><OL
TYPE="1"
><LI
><P
>			<A
HREF="http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_epoll"
TARGET="_top"
>epoll 연구 위키</A
>
			</P
></LI
><LI
><P
>			epoll_ctl(2)
			</P
></LI
><LI
><P
>			epoll_create(2)
			</P
></LI
><LI
><P
>			close(2)		
			</P
></LI
></OL
>
	</P
></DIV
></DIV
></BODY
></HTML
>
}}}
