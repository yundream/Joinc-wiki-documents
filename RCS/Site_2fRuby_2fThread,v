head	1.1;
access;
symbols;
locks
	root:1.1; strict;
comment	@# @;


1.1
date	2013.07.26.06.22.27;	author root;	state Exp;
branches;
next	;


desc
@./data/text/Site_2fRuby_2fThread
@


1.1
log
@1.214.223.250;;yundream;;
@
text
@#title Ruby thread

== 멀티 스레드 프로그램 ==
싱글 스레드 프로그램은 프로그램을 구성하는 모든 명령이 종료 할 때까지 순차적으로 실행되는 프로그램을 말한다. 이 명령의 흐름(문맥)을 스레드라고 한다. 즉 싱글 스레드 프로그램은 스레드 하나로 실행되는 프로그램을 의미한다.  

멀티 스레드 프로그램은 2 개 이상의 스레드가 동시에 실행된다. 각 스레드에서 문맥은 순차적으로 수행되지만 멀티 코어 CPU일 경우 여러 코어에서 동시에 실행 될 수 있다.  

== 멀티 스레드 프로그램의 흐름 ==
멀티 스레드 프로그램의 흐름은 다음과 같다.
  * 메인 스레드 수행 
  * 메인 스레드로 부터 새로운 스레드 생성
    * 두 개 이상의 새로운 스레드를 만들 수 있다.
    * 보통 작업의 처리는 새로 만들어진 스레드에서 처리하는 경우가 많아서, 워커(worker) 스레드라고 부르기도 한다.  
  * 생성했던 스레드 종료  
  * 메인 스레드에서 종료 스레드를 '''join'''하는 것으로 스레드 자원 회수
이 흐름에 따라서 ruby의 메서드들을 살펴보면 될 것 같다. 

== 루비 스레드 만들기 ==
루비는 멀티 스레드 프로그래밍을 위해서 '''Thread'''클래스를 제공한다. Thread.new를 하는 것으로 새로운 스레드를 만들 수 있다. 스레드가 수행할 코드는 block({..})문으로 넘기면 된다. 
{{{#!plain
# 메인 스레드 
Thread.new{
  # work 스레드가 실행할 코드
}
# 메인 스레드는 여기에 있는 코드를 수행한다.
}}}

== 스레드 종료 ==

== 스레드와 변수 ==

== 뮤텍스 ==

== 조건 변수 == 

== Thread Class method == 

== Thread Instance Methods ==

@
