#title Ruby if, else, unless 문

== if ==
=== 문법 ===
{{{#!plain
if conditional [then]
	code ...
[elseif conditional [then]
	code...]...
[else
	code...]
end
}}}

=== 일반적인 예제 ===
{{{#!plain
x = 1
if x > 2
    puts "x is greater than 2"
elsif x <2 and x != 0
    puts "x is 1"
else
    puts "I can't guess the number"
end
}}}

=== ruby스러운 예제 ===
{{{#!plain
$val = 2
print "val is 2\n" if $val == 2
}}}

파일을 읽어서 줄의 첫 문자가 '#' 시작되면 주석으로 간주해서 건너 뛴다. 
{{{#!plain
File.open("my.pl").each do | line |
    next if line.index('#')
    puts line
end
}}}

== unless ==
=== 문법 ===
{{{#!plain
unless conditional [then]
   code
[else
   code ]
end
}}}
unless는 conditional이 '''false'''일때 code를 실행한다는 점을 제외하고 if 문과 같다.
{{{#!plain
$var =  1
print "1 -- Value is set\n" if $var
print "2 -- Value is set\n" unless $var

$var = false
print "3 -- Value is set\n" unless $var
}}}

== case ==
C언어의 switch와 비슷하다.
=== 문법 ===
{{{#!plain
case expression
[when expression [, expression ...] [then]
   code ]...
[else
   code ]
end
}}}

=== 예제 ===
{{{#!plain

$age =  5
case $age
when 0 .. 2
    puts "baby"
when 3 .. 6
    puts "little child"
when 7 .. 12
    puts "child"
when 13 .. 18
    puts "youth"
else
    puts "adult"
end
}}}
실행 결과는
{{{#!plain
little child
}}}
