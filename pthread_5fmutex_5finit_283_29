#title pthread_mutex_init(3) 
'''목차'''
[[TableOfContents]]

== HTML 문서 ==
[[getency(164)]]

== [docbook] 원본문서 ==

{{{#!plain
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook V4.1//EN">
<chapter lang=ko>
<!-- 작성자 : yundream             -->
<!-- 작성일 : 2003/12/05           -->
<!-- 연락처 : yundream@joinc.co.kr -->

<!-- 함수 이름을 입력합니다 -->
<title>pthread_mutex_init(3)</title>

<!-- 이건 함수에 대한 대략적인 설명이구요 -->
<para>
	뮤텍스(mutex)는 쓰레드가 공유하는 데이터 영역을 보호하기 위해서 
	사용되는 도구이다. <emphasis>pthread_mutex_init</emphasis>는 
	뮤텍스 객체를 초기화 시키기 위해서 사용한다. 	 
</para>
 
<!-- 여기에 함수의 간단한 사용법이 들어갑니다 -->
<section>
	<title>사용법</title>
	<para>
		<screen>
#include &lt;pthread.h&gt;

int pthread_mutex_init(pthread_mutex_t * mutex, 
         const pthread_mutex_attr *attr);
		</screen>
	</para>
</section>

<!-- 여기엔 함수의 자세한 설명 이 들어갑니다 -->
<section>
	<title>설명</title>
	<para>
		첫번째 인자인 <emphasis>mutex</emphasis>는 초기화 시킬 mutex객체이다. 
		초기화 시킬 때 뮤텍스의 
		특징을 정의할 수 있는데, 이는 두번째 인자인 <emphasis>attr</emphasis>를
		통해서 이루어진다. 기본 뮤텍스 특징을 사용하길 원한다면 NULL을 이용하면 
		된다.
	</para>
	<para>
		뮤텍스는 "fast", "recurisev", "error checking"의 3가지 종류중 하나를 
		선택할 수 있으며, 기본적으로 "fast"가 사용된다.  
	</para>
</section>

<!-- 함수가 되돌려주는 값이구요 -->
<section>
	<title>반환값</title>
	<para>
		성공할경우 0을 실패했을경우에는 -1을 반환하며, 적당한 errno 값을 
		설정한다. 
	</para>
</section>

<!-- 에러가 발생했을때 되돌려주는 값들입니다 -->
<section>
	<title>에러</title>
	<para>
		<variablelist>	
			<varlistentry>
			<term>EINVAL</term>	
			<listitem>
				<para>	
					뮤텍스가 제대로 초기화 되지 않았다.
				</para>	
			</listitem>
			</varlistentry>

			<varlistentry>
			<term>EDEADLK</term>
			<listitem>
				<para>
					뮤텍스가 이미 잠겨있다.("error checking" 뮤텍스의 경우에만 발생)
				</para>
			</listitem>
			</varlistentry>
		</variablelist>	
	</para>
</section>

<!-- 마지막으로 에제 입니다                                                 -->
<!-- 여기에는 완전한 예제가 들어가 있는데, 굳이 완전한 예제를 만들필요 없이 -->
<!-- 코드 일부분만 작성해서 올려주셔도 됩니다                               --> 
<!-- "<", ">", "&" 등은 변환해 주셔야 하는데, 귀찮으시면 :-) 변환 하지 않   -->
<!-- 아도 됩니다. 제가 검사 해서 올리겠습니다                               -->
<!-- 예제에 대한 간단한 설명을 적어주셔도 되구요                            -->
<section>
	<title>예제</title>
	<para>
		<screen>
#include &lt;pthread.h&gt;

pthread_mutex_t mutex_lock;
...

void *t_function(void *data)
{
    pthread_mutex_lock(&amp;mutex_lock);
    // critical section
    pthread_mutex_unlock(&amp;mutex_lock);
}

int main()
{
    pthread_t p_thread;
    int state;
    int a;

    pthread_mutex_init(&amp;mutex_lock, NULL);
    pthread_create(&amp;p_thread, NULL, t_function, (void *)&amp;a);
    ...
    pthread_join(&amp;pthread, (void **)&amp;status);
}
		</screen>
	</para>
</section>
</chapter>
}}}

== 변경사항 ==
 1. JOINC에 등록 2003/12/05 - [yundream] 
