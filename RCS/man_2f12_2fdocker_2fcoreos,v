head	1.5;
access;
symbols;
locks
	root:1.5; strict;
comment	@# @;


1.5
date	2015.10.04.09.09.44;	author root;	state Exp;
branches;
next	1.4;

1.4
date	2015.10.04.09.09.30;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2015.10.04.09.07.06;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2015.05.21.12.08.49;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2015.05.21.12.07.05;	author root;	state Exp;
branches;
next	;


desc
@./data/text/man_2f12_2fdocker_2fcoreos
@


1.5
log
@119.64.102.68;;yundream;;
@
text
@#title CoreOS 

== CoreOS ==
CoreOS는 리눅스 컨테이너를 관리하기 위한 서비스를 제공하는 '''컨테이너 전용 리눅스 배포판'''이다. 리눅스 컨테이너는 하이퍼바이저 기반의 가상머신과 비슷한 특징과 장점을 제공하지만, '''가상 호스트를 제공하는게 아닌 격리된 애플리케이션 실행 환경을 제공하는데''' 촛점이 맞춰져 있다. Paas 혹은 Saas에 가까운 느낌이다.  

== 문서 ==
 * [wiki:man/12/docker/coreos/quickinstall CoreOS 인스톨]
 * [wiki:man/12/etcd etcd]
@


1.4
log
@119.64.102.68;;yundream;;
@
text
@d7 1
a7 1
 * [wiki:man/12/coreos/quickinstall CoreOS 인스톨]
@


1.3
log
@119.64.102.68;;yundream;;
@
text
@d7 1
@


1.2
log
@119.64.102.68;;yundream;;
@
text
@d7 1
a7 1
[[SubIndex]]
@


1.1
log
@119.64.102.68;;yundream;;
@
text
@d6 2
a7 37
== 설치 ==
=== 설치 환경 ===
설치 환경은 아래와 같다.
  * 우분투 리눅스 15.04
  * KVM : 자유롭게 할 수 있는게 많아서 선택했다. 

=== 스크립트 다운로드 ===
CoreOS는 stable, beta, alpha 3개 채널로 릴리즈를 배포한다. 나는 stable 버전을 설치하기로 했다. 
{{{#!plain
# mkdir coreos; cd coreos
# wget http://stable.release.core-os.net/amd64-usr/current/coreos_production_qemu.sh
# wget http://stable.release.core-os.net/amd64-usr/current/coreos_production_qemu_image.img.bz2 
# bunzip2 coreos_production_qemu_image.img.bz2
# chmod +x coreos_production_qemu.sh 
}}}
실행
{{{#!plain
# ./coreos_production_qemu.sh -nographic 
}}}
실행 해 보면 알겠지만, 로그인할 방법이 없다..

=== SSK Keys ===
SSH key pair을 만들어서 복사하는 방법을 사용해야 한다. kvm는 '''fsdev''' 옵션을 이용해서 로컬파일을 가상머신과 공유 할 수 있다. 이 기능을 이용해서 ssh public key를 복사한다. '''ssh-keygen'''으로 ssh key를 만든다.
{{{#!plain
# ssh-keygen -t rsa
}}}
~/.ssh 디렉토리 밑에 id_rsa.pub, id_rsa 파일 쌍이 만들어진다. 이 정보는 kvm의 fsdev를 이용해서 가상머신과 공유 할 수 있다. 스크립트가 알아서 해주니 고민 할 필요 없다. 작동방식이 궁금하면 스크립트 파일을 분석해보자. id_rsa.pub를 authorized_keys로 복사 한 다음 스크립트를 실행한다. 
{{{#!plain
# ./coreos_production_qemu.sh -a ~/.ssh/authorized_keys -- -nographic
}}}
스크립트는 가상머신을 만들 때, localhost:2222을 ssh로 포워딩 한다. ssh를 이용 2222번 포트로 접근하자.
{{{#!plain
# ssh -l core -p 2222 localhost
Last login: Thu May 21 11:58:09 2015 from 10.0.2.2
CoreOS stable (647.0.0)
core@@coreos_production_qemu-647-0-0 ~ $ 
}}}
@
