head	1.2;
access;
symbols;
locks
	root:1.2; strict;
comment	@# @;


1.2
date	2014.05.03.08.32.23;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2014.05.03.08.30.50;	author root;	state Exp;
branches;
next	;


desc
@./data/text/man_2f12_2f_ec_9b_b9_ec_95_a0_ed_94_8c_eb_a6_ac_ec_bc_80_ec_9d_b4_ec_85_98_ec_84_9c_eb_b2_84
@


1.2
log
@119.64.102.68;;yundream;;
@
text
@#title 웹 애플리케이션 서버

== 웹 애플리케이션 서버 ==
Web Application Server 줄여서 '''WAS'''라고 한다.

웹서버는 [wiki:man/12/HTTP HTTP] 프로토콜을 기반으로 웹 클라이언트의 요청을 처리하는데, 이미지와 HTML, CSS, Javascript 같은 정적(static) 자원을 서비스한다. 이 방식은 고정된 문서와 이미지를 처리하는데 전혀 문제가 없다. 그러나 인터넷이 비지니스 영역으로 확대되면서, 기업 기간 시스템에서 유지하던 자원을 인터넷에 서비스해야 하는 요구가 생긴다. 고객 정보와 상품정보, 고객이 상품을 구매한 정보, 고객의 요구사항들이 그것이다. 비지니스는 항상 변하기 때문에, 동적인 데이터 처리가 가능해야 한다. 

'''WAS'''는 웹서버와 기간 시스템 사이에서 동적 처리를 서비스하도록 최적화된 프로그램으로 비지니스 로직을 담당하며, 트랜잭션을 핸들링한다. 

많은 WAS 소프트웨어들이 HTTP 요청을 집접 처리하기 위한 기능을 가지고 있지만, 일반적으로 WEB과 WAS를 분리해서 구성한다.    
  1. WEB 서버 은 HTTP 요청만을 전문적으로 처리하며, 이미지 HTML, CSS, Javascript 같은 정적인 정보를 서비스 한다.
  1. WAS는 WEB 서버의 요청을 받아서 비지니스 로직을 전문적으로 처리한다.

{{{#!html
<img src="https://docs.google.com/drawings/d/174jtYW2v88yeFoGKIchtujyj2kMZh2jwr2Jl1Xn-5Ig/pub?w=778&amp;h=357">
}}}

다음과 같은 WAS 제품들이 있다.
  * Netscape Application Server
  * WEblog Enterprise
  * Websphere Application Server
  * Apache Tomcat
@


1.1
log
@119.64.102.68;;yundream;;
@
text
@a5 2
웹 애플리케이션 서버라고 하면 많은 사람들이 '''웹 서버와 다른게 뭔지 ?'''라는 생각을 할 것이다. 대표적인 웹 서버인 Apache를 이용한 웹 서비스에 대해서 살펴보자.

@
