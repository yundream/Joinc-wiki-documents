#title latex 사용하기

{{{#!html
<h3>Latex 란?</h3>
Latex 를 설명하기전에 우선 Tex 에 대해서 설명하고자한다. 
TEX는 수학식을 보기좋고 편리하게 조판 하기 위한 도구로써, 1970년대 
후반에 개발이 시작되어서 완성되는데 거의 10년이상이나 걸렸으며, 
현재는 거의 개발이 이루어지지 않고 있다. 이유는 더이상 손볼게 없는 
거의 완벽한? 프로그램으로 까지 발전했기 때문이다. 그러나 Tex자체가 
매우 완벽한 언어이긴 하지만 그자체가 거의 프로그래밍 언어와 마찬가지 였음으로 
이것을 배워서 실제 작업에 적용하는데에는 상당한 노력이 필요로 했다.<br><br> 
그리하여 좀더 쉽게 Tex의 강력함을 이용해 보자라는 취지에서 만들어진것이 
LaTex(라텍, 혹은 레이텍) 이다. Tex 의 강력함을 그대로 가지며, 스타일화된 
레이아웃으로 누구라도 쉽게 Tex 를 작성하도록 도와주는 문서작성 시스템이다. 

<h3>왜 Latex 를 권유하는가</h3> 
위에서 Latex 는 문서작성기라고 했는데, 그렇다면 왜 다른 많은 훌륭한 
워드프로세스등을 대신해서 Latex를 권유하는지 궁금해 할것이다.<br><br> 
그이유는 다음과 같다. 
<ul>
	<li> Latex 는 plain text 로 문서가 작성된다. 이말은 
	어떠한 컴퓨터, 어떠한 OS에서라 할지라도, 문서호환이 가능하다라는 뜻이다. 
	워드 프로세스는 데이타가 바이너리로 제작됨으로 전용 어플리케이션이 
	있어야 하며, 시스템, OS에 따른 제한이 상당히 크다. 심할경우는 
	동일한 어플리케이션에서 작성된 문서라도 그버젼에 따라 호환되지 않을수 
	있다. 10년전에 작성된 문서라면, 때때로 문서를 완전히 포기해야 하는경우가 
	생길수도 있다. 혹시 전용어플리케이션이 단종되어도 비슷한 사태를 
	맞이할수 있다.<br>
	Latex는 plain text 이므로 쉽게 database 화 할수 있으며, 
	쉽게 검색이 가능하다. 가장 최악의 경우라도 grep 를 통하여 간단하게 
	원하는 문서를 찾을수 있다. 워드프로세서는 대부분의 경우 파일이름만으로 
	원하는 문서를 찾아야 하며, database 화 하기가 매우 까다롭다. 
	워드프로세스로 만든 대부분의 문서는 이러한 이유로(검색이 어렵고, 
	DB화가 어려운) 거의 재활용이 힘들다. kldp 의 문서가 워드로 작성되어 있다고 
	생각해보라.
	<li>부가적인 장점이긴 하지만, latex 를 사용하는데에는 비용이 들지 않는다. 
	그냥 텍스트 편집기와, 메뉴얼만 가지고 있으면 된다.  
	<li> Latex 는 문서의 표준화를 도와준다. 물론 다른 워드 프로세서들도 
	템플릿을 제공하여 문서의 표준화를 시도하지만, 그건 대부분의 경우 
	단지 지역회사 내에서만 혹은 하나의 부서에서만의 표준화일 경우가 
	대부분이다.
	<li>Latex 의 가장 중요한점인데, 바로 논리적인 문서의 작성을 가능하도록 
	도와준다라는 것이다. Latex 를 사용하다보면 알겠지만, 논리적인 문서를 
	작성할수 밖에 없게끔 만들어준다(종종 오히려 논리적이지 않은 문서를 
	만들기가 더어렵다고들 말하기도 한다). 개발자 입장에서 
	어떠한 기술문서를 작성할때 가장 중요한것은 개발목표의 달성을 위해서 
	자신의 생각을 논리적으로 기술문서에 담아내야 하는 것인데, 
	Latex 는 이러한 
	작업을 위한 최적의 솔류션을 제공한다. Latex 은 문서의 텍스트 뿐만 
	아니라, 페이지 그림 단락번호 등 모든것을 논리적이고 구조적으로 
	일관성 있게 관리하도록 도와준다. 
	<li>관리하기 쉽다. 워드 프로세스 작업을 자주하는 사람이라면, 문서가 
	아무런 이유없이 깨지는걸 경험하게 될것이다. 그러나 plain text 인 
	latex 는 그러한 걱정을 거의 가지지 않아도 된다. 
	<li>매우 양질의 출력물을 보장한다. 다른 워드프로세스들 역시 
	마찬가지라고 말할수 있을것이다. 분명히 폰트의 질, 테이블의 모양 
	글의 정렬들만 보자면 맞는말이다. 그러나 latex 의 출력물은 
	워드에 의해 작성된 문서에 비해 매우 인간지향적인 출력물을 보여준다. 
	즉 보기 쉽고, 직관적인 출력물을 보여준다. 워드프로세스는 매우 신경을 
	쓰지 않는한 화려하긴 하지만 보기 힘들고 인간지향적이지 않은 출력물을 
	보여준다. 
	<li>latex를 통해 만들어진 문서는 ps, pdf, html 로 쉽게 변환 가능하다. 
</ul>
물론 모든경우에 Latex 가 적당한것은 아니다. Latex 는 문서를 논리적으로 
기술하는데 촛점을 맞춘문서이므로, 시각적으로 문서를 기술해야 하는 작업에는 
적당하지가 않다. 즉 전단지, 연하장, 카드, 고위직 간부에게 무언가 있어보이도록 
만들기 위한 1회성 문서를 작성하는데에는 latex 를 쓰지 않는것이 좋다. 
물론 latex로도 위의 작업을 할수 있지만, 본연의 작업이 아니다. 이러한 작업에는 
워드프로세스를 사용하는것이 좋다.<br><br>  
또하나 단점이라면 워드 프로세스에 비해서 사용하기가 좀 까다롭다라는 
점이다. 필자의 경우도 그럭저럭 Latex 를 오래 써왔다고 생각하지만 여전히
Latex 작업을 할때, Latex 에서 자주 쓰이는 키워드를 적어 놓은 
사용설명서를 틈틈히 참고해야한다.
<br><br>
그리고 마지막으로 Latex 은 WYSIWYG 환경을 지원하지 않는다. 이것은 
처음 Latex 를 접하는 사람을 당황스럽게 만든다. 물론 조금 지나면 
WYSIWYG 가 아니라는게 굳이 단점으로 볼수 없다는걸 알게 될테지만.. 
처음 사용자의 접근을 어렵게 만드는 요인인것만은 분명하다. 
<br><br>
어쨋든 필자는 Latex 를 강력히 권장하는 바이다. 왜냐하면 우리는 프로그래머이고 
프로그래머는 생각을 논리적으로 전개할수 있도록 도와주는 도구가 필요하기 때문
이다. (필자의 경우 이러한 이유로 docbook 도 자주 사용하는데, 여기에서는 
논외로 하도록 하겠다). 또한 문서는 쉽게 공유될수 있어야하며, 쉽게 
접근가능해야 한다. RFC 문서가 워드프로세스로 저장되지 않고, 
plain text 로 되어있는 이유도 이러한것들 때문이다.  
<br><br>
다음은 today_vr.tex 라는 문서를 ps, pdf, html 로 각각변환한 셈플이다. 
<br>
<a href=sample/todays_vr.tex>today_vr.tex</a><br>
<a href=sample/todays_vr.ps>today_vr.ps</a><br>
<a href=sample/todays_vr.pdf>today_vr.pdf</a><br>
<a href=sample/todays_vr>today_vr.html</a>

<h3>Latex 설치전 준비사항</h3>
Latex 를 설치하는데에는 매우 다양한 방법이 있으며, 운영체제마다 조금씩 차이가 
있는데, 이 문서는 Linux OS 상에서 Redhat 배포본을 기준으로 작성되었으다. 
또한 한글환경이 가능하도록 추가적인 설치에 대한 내용을 담고 있음을 
밝히는 바이다. 
설치에 대한 좀더 많은 자료를 원한다면 <a href=http://www.ktug.or.kr>한국 텍스 
사용자 그룹</a> 사이트를 참고하기 바란다. 

<h4>tetex 패키지 확인</h4>
우선 teTex 패키지가 설치되어 있는지 확인한다. 아래와 같은 패키지를 
확인하고 없으면 다운로드 받자.
<table width=100%>
<tr><td bgcolor=E0E0E0>
<pre>
[root@localhost test]# rpm -qa | grep tetex
tetex-xdvi-1.0.7-15
tetex-latex-1.0.7-15
tetex-fonts-1.0.7-15
tetex-1.0.7-15
tetex-dvilj-1.0.7-15
tetex-dvips-1.0.7-15
tetex-afm-1.0.7-15
</pre>
</td></tr>
</table>

<h4>폰트의 받기</h4>
기본적으로 latex 는 영문환경에서 작동하므로 한글환경을 위해서 별도의 
작업을 해주어야 하는데, 그중 가장 먼재 해야할 일이 폰트의 설치이다. 
준비되어야할 폰트는 "한글폰트", "한자폰트", "특수문자" 폰트 등이며 
<a href=ftp://knot.kaist.ac.kr/pub/htex/htex-fonts>kaist 한글텍스 ftp</a> 에서 얻을수 
있다. 여기에는 해상도에 따른 폰트가 준비되어 있는데, 1200dpi 폰트를 
사용하면 될것이다. han.1200pk.tar.gz, hanja.1200pk.tar.gz, symb.1200pk.tar.gz 
등 3개의 파일을 다운로드 받으면 된다. 

<h4>폰트 메트릭스 파일 받기</h4>
<a href=ftp://knot.kaist.ac.kr/pub/htex/htex-fonts/htex.tfm.tar.gz>htex.tfm.tar.gz</a>를 받아서 사용하면 된다. 폰트 메트릭스 파일은 위에서 받은 폰트 크기에 
상관없이 동일한 파일을 사용한다. 

<h4>한글지원을 위해 필요한 파일들</h4>
<a href=ftp://knot.kaist.ac.kr/pub/htex/hlatexp/unpacked.tar.gz>unpacked.tar.gz</a>과 <a href=ftp://knot.kaist.ac.kr/pub/htex/htexp/linux/tex.poo>tex.poo</a> 파일을 받아온다.

<h3>설치</h3>
<h4>teTex 설치</h4>
teTex 가 설치 되어 있다면 다음으로 넘어가도 문제 없다.<br><br>
rpm 패키지 메니저를 이용해서 미리 받아온 tetex 패키지를 하고, 설치를 
마쳤다면 슈퍼유저 계정으로 texconfig 라는 프로그램을 실행시켜 
아래와 같은 사항을 점검하도록 한다. 
<ul>
	<li>MODE : xdvi 와 dvips 를 위한 프린팅 모드를 설정한다. 
	자신이 사용하는 프린터 모델을 선택하도록 한다. <br>
	프린터가 없다면 폰트 해상도를 지원하는 아무 프린터나 하나 
	선택하도록 한다(이왕이면 대중적인걸로).
	<li>XDVI : xdvi 프로그램을 위한 설정으로 주로 사용하게될 용지크기를 
	지정한다. 우리나라는 보통 A4 를 사용하므로 PAPER를 A4로 설정하시면 
	된다. 
	<li>FONT : OPTIONS메뉴에서 varfonts 를 꼭 켜놓도록한다. 
	<li>REHASH : texconfig 를 종료하기전에 REHASH를 선택해준다. 
	혹은 쉘상에서 texhash 를 실행시켜도 된다. 
</ul>

<h4>폰트설치</h4>
우선 폰트가 설치될 디렉토리를 만든다. /usr/share/texmf/fonts/pk/xhan 
디렉토리를 생성하고 받아둔 폰트의 압축을 푼후 생성된 디렉토리로 
전부 복사한다. 복사한후 생서된 디렉토리로 이동해서 texhash 명령을 
실행시켜둔다. 
<br><br>
다음 폰트 메트릭스 파일을 설치한다. 위에서 받아둔 htex.tfm.tar.gz 파일을 
/usr/share/texmf/fonts/tfm/public/xhan 에 복사하도록 한다.
<br><br>
마지막으로 texmf.cnf 를 수정한다. 
이 파일은 /usr/share/texmf/web2c 에 위치하는데, 적당한 편집기를 이용해서 
아래와 같이 수정하도록 한다. 
<table width=100%>
<tr><td bgcolor=E0E0E0>
<pre>
---수정전----
PKFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/pk/{$MAKETEX_MODE,modeless,}//

---수정후----
PKFONTS = .;{$TEXMF/fonts,$VARTEXFONTS}/pk/{$MAKETEX_MODE,modeless,xhan}//
</pre>
</td></tr>
</table>

<h4>한글환경 설정</h4>
위에서 받은 unpacked.tar.gz 파일의 압축을 풀고 unpacked 디렉토리로 
이동한다음 아래와 같이 명령을 실행한다.  
<table width=100%>
<tr><td bgcolor=E0E0E0>
<pre>
[root@localhost unpacke]# initex hlatex.ltx
</pre>
</td></tr>
</table>
그러면 디렉토리에 hlatex.fmt 라는 포멧파일이 만들어진다.  
만들어진 파일을 latex.fmt 가 있는 디렉토리에 설치해야 한다. 
latex.fmt 가 있는 디렉토리는 kpsewhich 명령을 이용해서 찾아낼수 있다. 
<table width=100%>
<tr><td bgcolor=E0E0E0>
<pre>
[root@localhost unpacked]# kpsewhich fmt latex.fmt
/usr/share/texmf/web2c/latex.fmt
[root@localhost unpacked]# cp hlatex.fmt /usr/share/texmf/web2c
[root@localhost unpacked]# texhash 
</pre>
</td></tr>
</table>
그리고 unpacked 디렉토리의 tex 파일들을 아래와 같이 설치한다.
<table width=100%>
<tr><td bgcolor=E0E0E0>
<pre>
[root@localhost unpacked]# cp -f hlatex.ltx hlatexp.ltx dbfont.map hltxman.tex latex.ltx latexbug.tex testpage.tex lablst.tex idx.tex nfssfont.tex small2e.tex
sample2e.tex docstrip.tex *.sty *.cls *.clo *.fd *.def *.cfg /usr/share/texmf/tex/latex/base
</pre>
</td></tr>
</table>
texmf 디렉토리 아래에 htexpformats 라는 이름의 디렉토리를 생성하고, 
tex.poo 파일을 복사한다. 
<table width=100%>
<tr><td bgcolor=E0E0E0>
[root@localhost texmp]# mkdir htexpformats
[root@localhost test]# cp tex.poo /usr/share/texmf/htexpformats 
</td></tr>
</table>
이제 마지막으로 /usr/bin 에 다음과 같은 내용을 가지는 
hlatex 이름의 실행 스크립트를 만들도록한다. 
<table width=100%>
<tr><td bgcolor=E0E0E0>
<pre> 
#!/bin/sh
virtex "&amp;hlatex" $1
</pre> 
</td></tr>
</table>
만들어진 스크립트에는 chmod 를 이용하여 실행퍼미션을 주도록 한다. 

<h3>테스트</h3>
이로써 latex 의 모든 설정을 마쳤으며, 한글출력 또한 가능한 상태로 만들었다. 
이제 테스트를 해보자<br><br>
unpacked 디렉토리로 이동해보면 hltxman.tex 라는 파일이 있다(latex 문서는 
.tex 확장자를 가진다). 이건 한글라텍에 관한 간단한 메뉴얼인데, unpacked 가 아닌 
다른 디렉토리로 옮긴다음 위에서 만든 
hlatex 스크립트를 이용해서 컴파일 해보도록 하자. 
<table width=100%>
<tr><td bgcolor=E0E0E0>
<pre>
[root@localhost test]# hlatex hltxman.tex 
</pre>
</td></tr>
</table>
성공적으로 위의 작업을 마치고 나면 현재 디렉토리에 hltxman.dvi 라는 파일이 
생성될것이다. 이것은 xdvi 라는 프로그램을 통해서 읽을수 있다.  
<table width=100%>
<tr><td bgcolor=E0E0E0>
<pre>
[root@localhost test]# xdvi hltxman.dvi
</pre>
</td></tr>
</table>

<h3>문서 변환</h3>
이렇게 만들어진 dvi 파일은 ps, pdf 문서로 변경이 가능하다. 
<table width=100%>
<tr><td bgcolor=E0E0E0>
<pre>
[root@localhost test]# dvips hltxman.dvi
[root@localhost test]# dvipdf hltxman.dvi
</pre>
</td></tr>
</table>
만약 html 문서로 변경하고 싶다면 latex2html 을 이용해서 tex 파일을 
html 로 변경할수 있다. 
<table width=100%>
<tr><td bgcolor=E0E0E0>
<pre>
[root@localhost test]# latex2html hltxman.tex
</pre>
</td></tr>
</table>

<h3>latex 설명서</h3>
이 문서에서는 왜 latex 를 써야 하는지와, 설치에 관한 내용만 담고 있다. 
laetx 사용문서는 <a href=http://www.joinc.co.kr/modules.php?name=Downloads&d_op=viewdownload&cid=4>자료실</a>에서 다운로드 받으면 된다.  

<h3>결론</h3>
어떤 사람은 필지가 latex 를 이용해서 문서작업을 하는것을 보면서 
왜 그렇게 눈에 잘 보이지도 않는 도구를 사용해서 문서 작업을 하는지 
의아해 하는경우도 있다. 이를테면 너무 어려워 보인다는 것이다. 
하지만 필자는 오히려 워드프로세스를 사용하는것보다 latex 를 사용해서 
작업하는게 더욱 효율적이고 더욱 빠르게 느껴진다. 또한 유지 보수하기도 
쉬우며, 언제든지 데이타베이스화 할수 있다. <br><br>
그렇다고 필자가 워드프로세스를 잘 사용하지 못해서 그런가 하면 그렇지도 
않다. 군 생활 26개월을 워드병 -.- 으로 지내면서, 그야말로 워드프로세서의 
궁극의 한계에 까지 경험해 보았다고 자부 --; 한다.
<br><br>
프로그래머에게 수학을 권하는 이유는 수학을 실제 자주 사용해서가 아니다. 
대부분의 경우 실무에서 수학을 사용하는 일은 드물게 발생한다. 대게는 중학교 
수준의 수학이면 충분하다. 그럼에도 수학을 권장하는 것은 논리적인 사고력을 
키워주고, 사고의 경계를 넓혀주기 때문이다.<br><br> 
흔히 프로그래밍의 과정을 창조의 과정이라고 한다(창조가 5%, 나머지가 노가다 
작업이라고 말하는 사람도 있지만). 마지막 창조물은 현재에 존재하지 않는 
것이므로 여기에 도달하기 위한 연결고리가 필요하다. 이 연결고리가 바로 
"논리"이다. 수학은 이러한 논리적 응용력 사고력을 키워주며, latex 도 
그러한 일을 가능하도록 한다. <br><br>
latex 를 사용하면 
훌륭한 재사용가능한 문서를 만들어냄과 동시에, 
논리적 사고력까지 더불어 키울수 있게 되니 1석 2조의 효과를 가져다준다.  
<br><br>
다시 한번 말하지만 latex 는 정말로 훌륭한 도구이다. 재미삼아서라도 
꼭 한번 사용해 보길 바란다. 
}}}
