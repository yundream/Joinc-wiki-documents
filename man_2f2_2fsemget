#title linux man page : semget - 세마포어 값을 가져온다.
[wiki:docbook/semget(2) Docbook 원문]

{{{#!html
<HTML
><HEAD
><TITLE
><a href="http://www.joinc.co.kr/modules/moniwiki/wiki.php/function_semget(2)">semget</a>(2)</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.64
"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="CHAPTER"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="CHAPTER"
><H1
><A
NAME="AEN1"
>1&#51109;. <a href="http://www.joinc.co.kr/modules/moniwiki/wiki.php/function_semget(2)">semget</a>(2)</A
></H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>&#52264;&#47168;</B
></DT
><DT
>1.1&#51208;. <A
HREF="#AEN4"
>사용법</A
></DT
><DT
>1.2&#51208;. <A
HREF="#AEN8"
>설명</A
></DT
><DT
>1.3&#51208;. <A
HREF="#AEN13"
>반환값</A
></DT
><DT
>1.4&#51208;. <A
HREF="#AEN16"
>에러</A
></DT
><DT
>1.5&#51208;. <A
HREF="#AEN36"
>예제</A
></DT
></DL
></DIV
><P
>	세마포어 설정을 확인한다. </P
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN4"
>1.1&#51208;. 사용법</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;sys/types.h&#62;
#include &#60;sys/ipc.h&#62;
#include &#60;sys/sem.h&#62;

int <a href="http://www.joinc.co.kr/modules/moniwiki/wiki.php/function_semget(key_t key, int nsems, int semflg)">semget</a>(key_t key, int nsems, int semflg)
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN8"
>1.2&#51208;. 설명</A
></H1
><P
>		key 의 값과 일치하는 세마포어(:12) 설정확인자를 반환한다. 
		sem_num 은 세마포어를 생성할것인지, 아니면 
		이미 만들어진 세마포어에 접근할것인지를 결정하기 위해서 
		사용한다. 	
	</P
><P
>		semflg 는 세마포어 생성특성을 결정하기 위해서 사용한다. 
		즉 세마포를 생성하는데 있어서 이미 만들어진 세마포어가 있다면 
		어떤 행동을 취할것인지, 그리고 접근권한은 어떻게 할것인지등을 
		지정하기 위해서 사용한다. 	  
	</P
><P
>		만약 semflg 가 IPC_PRIVATE 가 아니고 주어진 key 값으로 
		이미 만들어진 세마포어와 중복되지 않으면 새로 생성될것이다. 
		만약 IPC_PRIVATE 이고 중복된 key 값이 있다면 생성에 실패하고 
		에러를 리턴할것이다. 	  
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN13"
>1.3&#51208;. 반환값</A
></H1
><P
>		성공할경우 세모포어 설정확인자(양의 정수)이며, 그렇지 않을경우 
		-1 이 반환되고 errno 가 설정된다. 
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN16"
>1.4&#51208;. 에러</A
></H1
><P
>		다양한 원인에 의해서 에러가 발생할수 있으며 아래와 같은 에러 메시지들이 있다. 
		<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>EACCESS</DT
><DD
><P
>	
					세마포어 접근을 위한 key 가 존재하지만, 호출된 프로세스가 
					세마포어에 접근권한을 갖지 못할경우
				</P
></DD
><DT
>EEXIST</DT
><DD
><P
>					semflg 가 IPC_CREATE 와 IPC_EXECL 로 설정되어 있고 
					사용된 key 가 이미 존재하는 세마포어일경우. 
					(<a href="http://www.joinc.co.kr/modules/moniwiki/wiki.php/function_open(2)">open</a>(2) 의 O_CREAT 와 O_EXECL 조합과 동일한 효과이다.) 
				</P
></DD
><DT
>ENOMEM</DT
><DD
><P
>					세마포어 설정이 되어야 하지만 시스템에 메모리가 충분치 
					않아서 세마포어 설정이 안될경우
				</P
></DD
><DT
>ENOSPC</DT
><DD
><P
>					세마포어 설정이 되어야 하지만 시스템의 세마포어 생성가능한 
					최대값 범위를 넘겨버렸을경우.
				</P
></DD
></DL
></DIV
>	
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN36"
>1.5&#51208;. 예제</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;errno.h&#62;

int <a href="http://www.joinc.co.kr/modules/moniwiki/wiki.php/function_main()">main</a>()
{
    int semid;
    int status;

    if ((semid = semget(12345, 1, IPC_CREAT|0666)) == -1)
    {
        <a href="http://www.joinc.co.kr/modules/moniwiki/wiki.php/function_perror("semget error ")">perror</a>("semget error ");
        return 1;
    }

    printf("success semid is %d : %d %d&#92;n", status, semid, errno);
}
		</PRE
></TD
></TR
></TABLE
>
		위의 프로그램을 실행시킨후 ipcs 로 확인해보면 아래와 같은 
		결과를 되돌려줄것이다. 	
		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>[root@localhost root]# ipcs -s

------ Semaphore Arrays --------
key        semid      owner      perms      nsems      status      
0x00003039 32768      root      666        1         
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
></DIV
></BODY
></HTML
>
}}}
