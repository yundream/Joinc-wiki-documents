#title setsid(2)
[wiki:function_setsid(2) HTML 원문]

{{{#!plain
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook V4.1//EN">
<chapter lang=ko>
<!-- 작성자 : yundream             -->
<!-- 작성일 : 2004/04/13           -->
<!-- 연락처 : yundream@joinc.co.kr --> 

<!-- 함수 이름을 입력합니다 -->
<title>setsid(2)</title>

<!-- 이건 함수에 대한 대략적인 설명이구요 -->
<para>
	세션을 만들고 프로세스 그룹아이디(GID)를 설정한다.
</para>
 
<!-- 여기에 함수의 간단한 사용법이 들어갑니다 -->
<section>
	<title>사용법</title>
	<para>
		<screen>
#include &lt;unistd.h&gt;

pid_t setsid(void);
		</screen>
	</para>
</section>

<!-- 여기엔 함수의 자세한 설명 이 들어갑니다 -->
<section>
	<title>설명</title>
	<para>
		만약 setsid()를 호출하는 프로세스가 프로세스 그룹의 리더가 아니라면 
		새로운 세션을 생성하고 해당 세션에 대한 그룹의 리더가 되며, tty를 
		제어할 수 없게 된다. 이렇게 setsid()를 호출해서 세션을 생성하고 
		그룹의 리더가 되었다면 세션아이디와 그룹아이디는 프로세스아이디(PID)와
		동일하게 된다. 이후 이 프로세스에서 생성되는 모든 (자식)프로세스들은 
		이 세션 아이디와 그룹아이디를 가지게 된다. 
		<note>
		<para>
			프로세스 그룹의 리더는 자신의 PID와 그룹아이디가 동일하다.
			setsid()는 특히 데몬으로 작동하는 프로그램을 만들기 위해서 
			주요하게 사용된다. 이럴 경우 fork()후 부모프로세스를 
			종료하고 setsid()를 호출하게 된다. 
		</para>
		</note>
	</para>
</section>

<!-- 함수가 되돌려주는 값이구요 -->
<section>
	<title>반환값</title>
	<para>
		호출한 프로세스의 세션 아이디를 리턴한다.
	</para>
</section>

<!-- 에러가 발생했을때 되돌려주는 값들입니다 -->
<section>
	<title>에러</title>
	<para>
		에러가 발생했을 경우 -1을 리턴한다. 에러는 <emphasis>EPERM</emphasis>일
		경우에만 발생한다. 이 에러는 프로세스가 어떤 이유로 다른 프로세스가 
		사용하는 PID를 세션아이디로 사용하려고 할때 발생한다.  
	</para>
</section>

<!-- 마지막으로 에제 입니다                                                 -->
<!-- 여기에는 완전한 예제가 들어가 있는데, 굳이 완전한 예제를 만들필요 없이 -->
<!-- 코드 일부분만 작성해서 올려주셔도 됩니다                               --> 
<!-- "<", ">", "&" 등은 변환해 주셔야 하는데, 귀찮으시면 :-) 변환 하지 않   -->
<!-- 아도 됩니다. 제가 검사 해서 올리겠습니다                               -->
<!-- 예제에 대한 간단한 설명을 적어주셔도 되구요                            -->
<section>
	<title>예제</title>
	<para>
		<screen>
#include &lt;sys/types.h&gt; 
#include &lt;sys/stat.h&gt; 
#include &lt;stdio.h&gt; 
#include &lt;fcntl.h&gt; 

int main()
{
    pid_t   pid;

    if (( pid = fork()) &lt; 0)
   	    exit(0);

    // 부모프로세스를 종료한다. 
    else if(pid != 0)
        exit(0);

    // 데몬 프로그램은 상호대화할 일이 없으므로 
    // 표준입/출/에러를 닫는다. 
    close(0);  
    close(1);
    close(2);
    // 세션을 생성한다. 
    setsid();    
    // 데몬 프로그램이 실행할 코드를 작성한다.
    while(1)
    {
    } 	
}
		</screen>
		위의 프로그램은 setsid()를 이용해서 데몬프로그램을 만드는 
		전형적인 예제다.
	</para>
</section>
<section>
	<title>참고문헌</title>
	<para>
		<orderedlist>
			<listitem>
				<para>
					<ulink url="http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_데몬(daemon) 프로그램에 대한 이해">데몬프로그램에 대한 이해</ulink>
				</para>
			</listitem>
			<listitem>
				<para>
					<ulink url="http://www.joinc.co.kr/modules/moniwiki/wiki.php/Code_C_makedaemon">데몬작성 예제</ulink>
				</para>
			</listitem>
		</orderedlist>
	</para>
</section>
</chapter>
}}}
