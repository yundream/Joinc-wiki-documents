#title linux man page : isalpha 단어가 알파벳인지 검사한다.

{{{#!html
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML
><HEAD
><TITLE
>isalpha(3)</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.7"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="CHAPTER"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="CHAPTER"
><H1
><A
NAME="AEN1"
>1&#51109;. isalpha(3)</A
></H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>&#52264;&#47168;</B
></DT
><DT
>1.1. <A
HREF="#AEN4"
>사용법</A
></DT
><DT
>1.2. <A
HREF="#AEN8"
>설명</A
></DT
><DT
>1.3. <A
HREF="#AEN60"
>반환값</A
></DT
><DT
>1.4. <A
HREF="#AEN63"
>예제</A
></DT
><DT
>1.5. <A
HREF="#AEN67"
>참고문헌</A
></DT
></DL
></DIV
><P
>	문자의 종류 판독</P
><DIV
CLASS="SECTION"
><HR><H2
CLASS="SECTION"
><A
NAME="AEN4"
>1.1. 사용법</A
></H2
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;ctype.h&#62;

int isalnum(int c);
int isalpha(int c);
int isascii(int c);
int isblank(int c);
int iscntrl(int c);
int isdigit(int c);
int isgraph(int c);
int islower(int c);
int isprint(int c);
int ispunct(int c);
int isspace(int c);
int isupper(int c);
int isxdigit(int c);
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H2
CLASS="SECTION"
><A
NAME="AEN8"
>1.2. 설명</A
></H2
><P
>		이 함수들은 문자<B
CLASS="EMPHASIS"
>c</B
>에 대해서 어떤 영역에 포함되는지를
		확인한다.
	</P
><P
>		<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>isalnum</DT
><DD
><P
>	
				알파벳숫자임을 체크한다. 이것은 isalpha(c) || isdigit(c)와 동일하다. 
				</P
></DD
><DT
>isalpha</DT
><DD
><P
>	
				알파벳임을 확인한다. isupper(c) || islower(c)로 같은일을 할 수 있다. 
				</P
></DD
><DT
>isascii</DT
><DD
><P
>	
				주어진 문자 <B
CLASS="EMPHASIS"
>c</B
> ASCII 문자셋에 포함되는 7-bit 
				unsigned char 인지를 확인한다.
				</P
></DD
><DT
>isblank</DT
><DD
><P
>	
				공백문자인지를 확인한다. 공백문자는 스패이스, 탭이 포함된다.
				</P
></DD
><DT
>isdigit</DT
><DD
><P
>	
				0에서 9까지의 숫자인지를 확인한다. 
				</P
></DD
><DT
>isgraph</DT
><DD
><P
>	
				출력가능한(printable)문자인지를 확인한다. 스페이스는 제외된다.
				</P
></DD
><DT
>islower</DT
><DD
><P
>	
				소문자인지 검사한다.
				</P
></DD
><DT
>islower</DT
><DD
><P
>	
				소문자인지 검사한다.
				</P
></DD
><DT
>isprint</DT
><DD
><P
>	
				출력가능한 문자인지 검사한다. 스페이스 문자 까지 포함한다.
				</P
></DD
><DT
>isspace</DT
><DD
><P
>	
				공백문자들을 검사한다. form-feed ('\f'), newline ('\n'), 
				carriage return ('\r'), horizontal tab ('\t'), vertiacal ('\v')
				를 포함한다.
				</P
></DD
><DT
>isxdigit</DT
><DD
><P
>	
				16진수 를 표한할 수 있는 문자인지 확인한다. 
				<B
CLASS="EMPHASIS"
>0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F</B
>
				</P
></DD
></DL
></DIV
>
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H2
CLASS="SECTION"
><A
NAME="AEN60"
>1.3. 반환값</A
></H2
><P
>	검사 항목을 만족하는 문자라면 0이 아닌 숫자를 그렇지 않다면 0을 리턴한다.	
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H2
CLASS="SECTION"
><A
NAME="AEN63"
>1.4. 예제</A
></H2
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;ctype.h&#62;
#include &#60;stdio.h&#62;

int main(int argc, char **argv)
{
    char buff[256];
    int i;

    fgets(buff, 255, stdin);


    for(i = 0; i &#60; strlen(buff); i++)
    {
        if (islower(buff[i]))
            buff[i] = (int)buff[i] - 32;
    }
    printf ("%s\n", buff);
}
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H2
CLASS="SECTION"
><A
NAME="AEN67"
>1.5. 참고문헌</A
></H2
><P
>		<P
></P
><OL
TYPE="1"
><LI
><P
>		<A
HREF="http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_ctype.h를_이용한_문자다루기"
TARGET="_top"
>ctype 함수를 이용한 문자 다루기</A
>
		</P
></LI
></OL
>
	</P
></DIV
></DIV
></BODY
></HTML
>
}}}
