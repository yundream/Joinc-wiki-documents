head	1.1;
access;
symbols;
locks
	root:1.1; strict;
comment	@# @;


1.1
date	2013.12.09.14.49.39;	author root;	state Exp;
branches;
next	;


desc
@./data/text/man_2f12_2fspdy
@


1.1
log
@128.134.217.152;;yundream;;
@
text
@#title SPDY

<!> 미완성
== SPDY ==
SPDY는 웹 콘텐츠의 빠른 전송을 위해서 구글이 개발한 오픈 네트워킹 프로토콜이다. SPDY는 2012년 7월 부터 표준화를 위한 노력을 해왔는데, 그 노력의 결과 HTTP2.0의 표준 기능으로 들어갈 것 같다. 이미 chromium, 모질라, Opera, IE11 등의 웹 브라우저가 SPDY를 지원하고 있다.     

== SPDY 등장 배경 ==
=== HTTP는 성능을 목적으로 만든 프로토콜이 아니었다. ===
HTTP가 처음 등장한게 1991년으로 이때 버전이 0.9였다. 이후 HTML 문서를 전송하기 위한 프로토콜로 사용되면서, HTML과 함께 인터넷에서 가장 성공적인 프로토콜로 등극한다. 문제는 HTTP가 20년전의 인터넷 상황에 맞게 만들어진 프로토콜이라는 점이다.

이게 [http://info.cern.ch/hypertext/WWW/TheProject.html 최초의 웹 사이트]로 단지 몇 개의 링크와 텍스트로만 포함하고 있다. 1996년의 (가장 인기있던 디렉토리 서비였던) 야후의 모습이 이러하다.

https://lh4.googleusercontent.com/-XBX7KEmeX3I/UqXNYLTOAOI/AAAAAAAADcA/EUnggK31Tl8/s800/yahoo1996.png

3개 정도의 저해상도 이미지와 몇 줄 안되는 텍스트가 전부다.

그하다. 애초에 HTTP는 대량의 멀티미디어 데이터를 송/수신하기 위해서 만들어진 프로토콜이 아니다. (몇 개의 정적 이미지와)텍스트만으로 이루어진 문서를 공유하기 위해서 만들어진 프로토콜이다. 기본적으로는 오프라인에서 볼 수 있는 A4 문서를 온라인 상에서 내려받기 위함이 그 목적이다. 문서는 기본적으로 낱개로 취급할 수 있기 때문에, 연결을 맺을 필요도 없다. 연결을 맺는 가장 큰 이유는 현재의 상태를 알기 위함인데, 낱개로 다루어져도 상관이 없으니 굳이 연결을 맺을 필요가 없다. 1996년의 야후 웹페이지는 2개의 이미지를 포함하고 있으니, 문서까지 해서 고작 3개의 오브젝트다.

요약하자면 HTTP는 
  1. 요청/응답 형태의 심플한 규격 
  1. 응답 지연 같은 건 고민하지 않는다. 애초에 네트워크가 구렸던 때라서 지연같은건 신경쓸 필요도 없었다. 사이트를 간단하게 만드는 걸로 해결할 문제다. 이미지는 indexed 할 걸 고려해서 만들었다.

하지만 상황이 달라졌다. 2013년 12월 현재의 야후 사이트를 보자. 거의 80개에 달하는 오브젝트들을 포함하고 있다.

https://lh6.googleusercontent.com/-4b6rQvhablU/UqXOmo-ag1I/AAAAAAAADcM/p1vGt3c_QR8/s800/yahoo2013.png

== Apache에 SPDY 적용 ==
=== mode_spdy ===
@
