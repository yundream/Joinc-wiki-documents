#title remove(3)
[wiki:docbook_remove(3) Docbook 원문]

{{{#!html
<HTML
><HEAD
><TITLE
>remove(3)</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.76b+
"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="CHAPTER"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="CHAPTER"
><H1
><A
NAME="AEN1"
>1&#51109;. remove(3)</A
></H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>&#52264;&#47168;</B
></DT
><DT
>1.1. <A
HREF="#AEN4"
>사용법</A
></DT
><DT
>1.2. <A
HREF="#AEN8"
>설명</A
></DT
><DT
>1.3. <A
HREF="#AEN15"
>반환값</A
></DT
><DT
>1.4. <A
HREF="#AEN18"
>에러</A
></DT
><DT
>1.5. <A
HREF="#AEN53"
>예제</A
></DT
></DL
></DIV
><P
>	프로그램 명령행 인자를 파싱한다.</P
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN4"
></A
>1.1. 사용법</H1
><P
>        <TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;stdio.h&#62;

int remove(const char *pathname);
        </PRE
></TD
></TR
></TABLE
>

    </P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN8"
></A
>1.2. 설명</H1
><P
>		파일시스템에서 파일을 삭제한다. 이 함수는 내부적으로 unlink(2)와 
		rmdir(2)를 호출한다.
    </P
><P
>		만약 삭제하는 파일이 마지막 링크이고 파일을 열고 있는 프로세스가 
		더 이상없다면 파일은 디스크 공간에서 완전히 삭제된다. 
		삭제된 공간은 다른 파일에 의해서 사용이 된다. 
    </P
><P
>	 	삭제하고자 하는 파일이 마지막 링크이지만, 파일을 열고 있는 프로세스가 
		있을 경우 해당 프로세스가 파일을 close()할때까지 여전히 남아 있게 된다.  
    </P
><P
>		삭제하고자 하는 파일이 symbolic 링크일 경우 링크가 삭제된다.
    </P
><P
>		삭제하고자 하는 파일이 socket(12), fifo(12)일경우 파일은 삭제되지만, 
		해당 객체는 여전히 프로세스에 의해서 사용되어진다.
    </P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN15"
></A
>1.3. 반환값</H1
><P
>		성공할 경우 0을리턴한다. 실패할 경우 -1을 리턴하고 적당한 errno값이 설정된다.
    </P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN18"
></A
>1.4. 에러</H1
><P
>        <P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>EFAULT</DT
><DD
><P
>    
				pathname을 가리키는 포인터가 접근가능한 주소영역을 벗어났다.
                </P
></DD
><DT
>EACCES</DT
><DD
><P
>    
                부모 디렉토리가 프로세스에게 쓰기 허가권을 허락하지 않았거나, 
                pathname에 있는 디렉토리 중 하나가 찾기 허가권이 없다.
                </P
></DD
><DT
>ENOENT</DT
><DD
><P
>    
				pathname을 포함한 디렉토리 혹은 파일이 존재하지 않는다.	
                </P
></DD
><DT
>ENAMETOOLONG</DT
><DD
><P
>    
                <B
CLASS="EMPHASIS"
>pathname</B
>이 너무 길다.
                </P
></DD
><DT
>ENODIR</DT
><DD
><P
>    
                <B
CLASS="EMPHASIS"
>pathname</B
>에 디렉토리로서 사용한 요소가 
                디렉토리가 아니다.
                </P
></DD
><DT
>ENOMEM</DT
><DD
><P
>    
                이용할 수 있는 커널 메모리가 충분하지 않다.
                </P
></DD
><DT
>EROFS</DT
><DD
><P
>    
                <B
CLASS="EMPHASIS"
>pathname</B
>가 읽기 전용 파일 시스템에 있는
                파일을 가리키고 있다.
                </P
></DD
></DL
></DIV
>    
    </P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN53"
></A
>1.5. 예제</H1
><P
>        <TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;stdio.h&#62;
#include &#60;errno.h&#62;

int main(int argc, char **argv)
{
	int rtv;

	if (argc !=2 )
	{
		printf("Usage : ./remove filename\n");
		exit(0);
	}	
	if(remove(argv[1]) != 0)
	{
		perror("file remove error ");
		return 1;
	}
	return 0;
}

        </PRE
></TD
></TR
></TABLE
>
    </P
></DIV
></DIV
></BODY
></HTML
>
}}}
