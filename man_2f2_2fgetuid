#title getuid - 유저 ID를 얻어온다.
[wiki:docbook_getuid(2) Docbook 원문]

{{{#!html
<HTML
><HEAD
><TITLE
>getuid(2)</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.76b+
"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="CHAPTER"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="CHAPTER"
><H1
><A
NAME="AEN1"
>1&#51109;. getuid(2)</A
></H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>&#52264;&#47168;</B
></DT
><DT
>1.1. <A
HREF="#AEN4"
>사용법</A
></DT
><DT
>1.2. <A
HREF="#AEN8"
>설명</A
></DT
><DT
>1.3. <A
HREF="#AEN13"
>반환값</A
></DT
><DT
>1.4. <A
HREF="#AEN16"
>에러</A
></DT
><DT
>1.5. <A
HREF="#AEN19"
>예제</A
></DT
><DT
>1.6. <A
HREF="#AEN24"
>참고문헌</A
></DT
></DL
></DIV
><P
>	유저 ID를 얻어온다.</P
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN4"
></A
>1.1. 사용법</H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;sys/types.h&#62;
#include &#60;unistd.h&#62;

uid_t getuid(void);
uid_t geteuid(void);
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN8"
></A
>1.2. 설명</H1
><P
>		getuid()는 현재 프로세스의 실제 유저 아이디를 얻어온다. 
	</P
><P
>		geteuid()는 현재 프로세스의 유효 유저 아이디(effective user ID)를 
		언어온다.
	</P
><P
>		실제 유저 아이디는 프로세스를 호출한 유저의 아이디이다. 
		유효 유저 아이디는 실행된 파일에 설졍된 SID를 가지는 아이디이다.  
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN13"
></A
>1.3. 반환값</H1
><P
>		유저의 ID를 되돌려준다.
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN16"
></A
>1.4. 에러</H1
><P
>		이 함수들은 언제나 성공한다.
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN19"
></A
>1.5. 예제</H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;stdio.h&#62;
#include &#60;stdlib.h&#62;
#include &#60;unistd.h&#62;
#include &#60;sys/types.h&#62;
#include &#60;pwd.h&#62;

int main()
{
    struct passwd *lpwd;
    printf("UID    : %d\n",getuid());
    printf("EUID   : %d\n" ,geteuid());

    lpwd = getpwuid(getuid());
    printf("UNAME  : %s\n", lpwd-&#62;pw_name);

    lpwd = getpwuid(geteuid());
    printf("EUNAME : %s\n", lpwd-&#62;pw_name);

}
		</PRE
></TD
></TR
></TABLE
>
		위의 프로그램은 프로세스를 싱행 시킨 유저의 ID와 이름, 
		프로세스의 SID 와 이름을 출력한다. SID를 변경했을 때의 
		결과를 확인하기 위해서는 다음과 같이 root계정으로 해당 프로그램에
		SID를 부여한다음 다른 계정의 유저로 프로그램을 실행시켜 보면 된다. 
		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
># chmod +s getuid
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN24"
></A
>1.6. 참고문헌</H1
><P
>		<P
></P
><OL
TYPE="1"
><LI
><P
>			<A
HREF="http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_안전한_프로그래밍"
TARGET="_top"
>안전한 프로그래밍</A
>
			</P
></LI
><LI
><P
>			
seteuid(2)
			</P
></LI
><LI
><P
>
setuid(2)
			</P
></LI
></OL
>
	</P
></DIV
></DIV
></BODY
></HTML
>
}}}
