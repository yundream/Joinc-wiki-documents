#title lseek(2)

{{{#!plain
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook V4.1//EN">
<chapter lang=ko>
<!-- 작성자 : yundream             -->
<!-- 작성일 : 2004/03/22           -->
<!-- 연락처 : yundream@joinc.co.kr --> 

<!-- 함수 이름을 입력합니다 -->
<title>lseek(2)</title>

<!-- 이건 함수에 대한 대략적인 설명이구요 -->
<para>
	읽기및 쓰기를 위해서 파일의 위치를 재지정
</para>
 
<!-- 여기에 함수의 간단한 사용법이 들어갑니다 -->
<section>
	<title>사용법</title>
	<para>
		<screen>
#include &lt;sys/types.h&gt;
#include &lt;unistd.h&gt;

off_t lseek(int fildes, off_t offset, int whence);
		</screen>
	</para>
</section>

<!-- 여기엔 함수의 자세한 설명 이 들어갑니다 -->
<section>
	<title>설명</title>
	<para>
		lseek()는 열린 파일 지정자 <emphasis>fildes</emphasis>로 부터 
		<emphasis>offset</emphasis>만큼 위치를 변경한다. 위치 변경시 
		기준점을 정할 수 있는데 <emphasis>whence</emphasis>를 이용해서 
		지정가능 하다.  
		<variablelist>	
			<varlistentry>
			<term>SEEK_SET</term>	
			<listitem>
				<para>	
				파일의 처음을 기준으로 offset을 계산한다.	
				</para>	
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>SEEK_CUR</term>	
			<listitem>
				<para>	
				파일의 현재 위치를 기준으로 offset을 계산한다.
				</para>	
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>SEEK_END</term>	
			<listitem>
				<para>	
				파일의 마지막을 기준으로 offset을 계산한다.
				</para>	
			</listitem>
			</varlistentry>
		</variablelist>	
		실수로 파일의 마지막을 초과해서 lseek를 사용했을 경우 lseek에서 
		리턴을 하지는 않지만 write()혹은 read()에서 에러를 발생하게 되므로 
		주의 해야 한다.  
	</para>
</section>

<section>
	<title>반환값</title>
	<para>
		성공했을 경우 파일의 시작으로 부터 떨어진 byte만큼의 offset을 
		리턴한다. 실패했을 경우 -1을 리턴한다.  
	</para>
</section>

<section>
	<title>에러</title>
	<para>
		<variablelist>	
			<varlistentry>
			<term>EBADF</term>	
			<listitem>
				<para>	
					<emphasis>Fildes</emphasis>가 열린 파일 지정자가 아니다.
				</para>	
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>ESPIPE</term>	
			<listitem>
				<para>	
					<emphasis>Fildes</emphasis>가 파이프, 소켓 혹은 FIFO이다. 
				</para>	
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>EINVAL</term>	
			<listitem>
				<para>	
					<emphasis>Whence</emphasis>가 유효한 값이 아니다. 
				</para>	
			</listitem>
			</varlistentry>
		</variablelist>	
	</para>
</section>

<section>
	<title>예제</title>
	<para>
		<screen>
#include &lt;unistd.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;stdio.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;sys/types.h&gt;

int main(int argc, char **argv)
{
    int fd;
    int i, buf;
    fd = open("num.dat", O_RDWR|O_CREAT);
    if (fd &lt; 0)
    {
        perror("error : ");
        exit(0);
    }
    for (i = 1000; i &lt; 1010; i++)
    {
        write(fd, (void *)&amp;i, sizeof(i));
    }
    // 파일의 처음으로 이동한 다음 데이터를 읽는다. 
    lseek(fd, 0, SEEK_SET);
    read(fd, (void *)&amp;buf, sizeof(i));
    printf("%d\n", buf);

    // 파일의 처음이로 이동한 다음 4번째 입력된 숫자를 
    // 읽는다. 
    lseek(fd, 4*sizeof(i), SEEK_SET);
    read(fd, (void *)&amp;buf, sizeof(i));
    printf("%d\n", buf);
}
		</screen>
	</para>
</section>

<section>
	<title>참고문헌</title>
	<para>
		<orderedlist>
			<listitem>
				<para>
					<ulink url="http://www.joinc.co.kr/modules.php?name=News&amp;file=article&amp;sid=98">seek를 이용한 파일내 위치이동</ulink>
				</para>
			</listitem>
		</orderedlist>
	</para>
</section>
</chapter>
}}}
