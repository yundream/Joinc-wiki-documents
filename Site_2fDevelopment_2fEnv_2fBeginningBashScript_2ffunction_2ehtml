{{{#!html
<HTML
><HEAD
><TITLE
>함수</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.76b+
"><LINK
REL="HOME"
TITLE="BASH 프로그래밍 입문 하우투"
HREF="index.html"><LINK
REL="PREVIOUS"
TITLE="for, while, until을 사용하는 순환문 "
HREF="loop.html"><LINK
REL="NEXT"
TITLE="사용자 인터페이스 "
HREF="interface.html"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="SECT1"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
SUMMARY="Header navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>BASH 프로그래밍 입문 하우투</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="loop.html"
ACCESSKEY="P"
>&#51060;&#51204;</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
></TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="interface.html"
ACCESSKEY="N"
>&#45796;&#51020;</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><DIV
CLASS="SECT1"
><H1
CLASS="SECT1"
><A
NAME="FUNCTION"
></A
>8. 함수</H1
><P
> 
대부분의 프로그래밍 언어에서는 논리적인 흐름과 재귀 표현 등을 위해 함수라는 이름으로 코드를 묶어 사용하는 일이 많다. </P
><P
> 
함수를 정의하는 데에는 심란하고 어려운 방법 같은 것은 전혀 필요하지 않다. 단지 이렇게 입력할 수만 있으면 된다. function my_func { my_code } 하고 말이다. </P
><P
> 
함수를 호출할 때는 다른 프로그램을 호출하는 것과 똑같이 이름을 적어주면 된다. </P
><DIV
CLASS="SECT2"
><H2
CLASS="SECT2"
><A
NAME="AEN236"
></A
>8.1. 함수 예제</H2
><P
> 
<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
> 
#!/bin/bash 
function quit { 
exit 
} 
function hello { 
echo Hello! 
} 
hello 
quit 
echo foo </PRE
></TD
></TR
></TABLE
> </P
><P
> 
2~4줄은 'quit' 함수이며, 5~7줄은 'hello' 함수이다. 이 스크립트가 무슨 뜻인지 잘 이해가 가지 않는다면, 백문이 불여일견이다. 한번 실행해 보면 무슨 말인지 다 알 것이다. </P
><P
> 
함수를 선언하는 데에는 특별히 신결 쓸 만한 일은 전혀 없다. 넘어가자. </P
><P
> 
이 스크립트가 실행되면 먼저 hello 함수가 호출되고 다음으로 quit 함수가 호출된다. 10번째 줄은 결코 실행되지 않을 것이다. </P
></DIV
><DIV
CLASS="SECT2"
><H2
CLASS="SECT2"
><A
NAME="AEN243"
></A
>8.2. 인자를 받는 경우</H2
><P
> 
<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
> 
#!/bin/bash 
function quit { 
exit 
} 
function e { 
echo $1 
} 
e Hello 
e World 
quit 
echo foo </PRE
></TD
></TR
></TABLE
> </P
><P
> 
이 스크립트는 방금 전에 살펴 본 것과 매우 비슷하다. 가장 큰 차이는 'e'라는 이름의 함수이다. 이 함수는 받아들인 첫 번째 인자를 출력한다. </P
></DIV
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="loop.html"
ACCESSKEY="P"
>&#51060;&#51204;</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="index.html"
ACCESSKEY="H"
>&#52376;&#51020;&#51004;&#47196;</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="interface.html"
ACCESSKEY="N"
>&#45796;&#51020;</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>for, while, until을 사용하는 순환문</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
>&nbsp;</TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>사용자 인터페이스</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>
}}}
