head	1.12;
access;
symbols;
locks
	root:1.12; strict;
comment	@# @;


1.12
date	2014.08.03.05.52.08;	author root;	state Exp;
branches;
next	1.11;

1.11
date	2014.08.03.02.33.52;	author root;	state Exp;
branches;
next	1.10;

1.10
date	2014.08.03.02.32.39;	author root;	state Exp;
branches;
next	1.9;

1.9
date	2014.07.28.11.38.16;	author root;	state Exp;
branches;
next	1.8;

1.8
date	2014.07.28.07.06.05;	author root;	state Exp;
branches;
next	1.7;

1.7
date	2014.07.28.07.05.34;	author root;	state Exp;
branches;
next	1.6;

1.6
date	2014.07.28.07.04.04;	author root;	state Exp;
branches;
next	1.5;

1.5
date	2014.07.20.16.16.20;	author root;	state Exp;
branches;
next	1.4;

1.4
date	2014.07.16.08.21.03;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2014.07.16.03.03.33;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2014.07.15.15.08.04;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2014.07.15.12.39.25;	author root;	state Exp;
branches;
next	;


desc
@./data/text/man_2f12_2fphp
@


1.12
log
@119.64.102.68;;yundream;;
@
text
@#title php 프로그래밍 언어

[[TableOfContents]]
== 소개 ==
프로젝트 수준에서 PHP 프로그래밍에서 손을 뗀게 거의 10년이 넘은 것 같다. 그동안 사이트 유지 보수하는 정도에서 (다시 말해서 취미수준)사용했는데, 다시 좀 자세히 살펴봐야 할 것 같다. '''Modern PHP''' 관련 문서들을 보고 있는데, 엄청 많이 변했네(PHP에 대한 나의 시계는 거의 3.x에 멈춰있다.).

새로운 (개인)프로젝트를 시작한 김에 자세히 살펴보려고 한다.
== PHP ==
1994년 '''Rasmus Lerdorf'''가 개발한 언어다. 개발된지 (2014년 현재 기준)20년이 넘은 굉장히 오래된 언어다. 

내가 PHP언어를 시작한건 1998년 쯤이다. 그때 버전이 3.x로 확장자로 .php3를 쓰던 때였다. 횟수로만 따지면17년째 하고 있는 건가 ? 물론 꾸준히 한건 아니다. 한 3년 정도 흔히 말하는 Apache + PHP + Mysql(당시에는 3.x 버전이였던 것으로 기억한다.)기반으로 개발을 했다. 그 다음에는 분야를 완전히 갈아탔는데, 그 이후 회사 프로젝트 차원에서 PHP를 직접 활용했던 적은 없다.  

다만 PHP로 된 모니위키를 꾸준히 관리해왔으니 완전히 손을 뗀 것은 아니다. PHP 최신 트랜드와는 좀 동떨어진 상태에서, 그럭저럭 필요한 용도로 활용할 수 있는 수준정도라고 보면 되겠다.

여전히 지금도 PHP는 사용하고 있다. 뭔가 빠르게 웹 서비스를 개발 해야 할 경우에 주로 사용한다. 루비 기반의 경량 프레임워크인 [wiki:Site/Ruby/sinatra sinatra]를 사용하기도 하는데, PHP가 더 다루기가 쉽다. C 언어와 비슷해서 그런건가 ? 코드가 좀 커지면 지저분해 진다는 의견이 있기는 한데, 정말 그런지는 잘 모르겠다. HTML과 PHP Code가 함께 녹아드는 그 느낌 때문에, 항상 직관적이다라는 생각을 가지게 된다.

뭐 PHP에 대한 여러가지 비판적인 의견들이 있는 것 같지만, 내가 원하는 용도로 사용하기에는 좋은 툴이라서 앞으로도 계속 사용할거다.

== 특징 ==
Java, [wiki:Site/Ruby Ruby], Python, Perl, Javascript(Node), Golang과 같은 언어들로 웹 서비스를 개발할 수 있다. 하지만 PHP는 다른 언어와 구별되는 특징이 있는데, 다른 언어들이 범용 언어로써 웹 쪽으로 확장을 한 반면, PHP는 웹 개발에 특화된 거의 유일한 언어라는 특징이 있다.

HTML과 함께 섞어서 사용해도 전혀 위화감이 없는 것도 이런 이유 때문일 거다. 반면, 범용언어가 아닌 관계로 범용언어가 가지고 있지 않는 좀 당황스러운 언어적 특징과 언어 커뮤니티 특징을 가지고 있다. 

=== 언어적 특징 ===
굉장히 오래된 언어다. 그리고 HTML과 함께 섞어쓰기 위해서 만든 언어다. HTML 자체가 절차적으로 해석이 되기 때문에, PHP도 HTML의 흐름에 따라서 절차적으로 수행되도록 만들어졌다. 객체지향적이 아니었고, (그때는)그럴 필요도 없었다. 언어측면에서 객체지향을 지원한 것은 굉장히 최근의 일이다.

웹 전용으로 만든 언어인데, 목표로하는 웹 환경이 너무 급격하게 변한 측면이 있다. 언어가 웹의 트랜드를 따라가지 못한 측면이 있다. 결과적으로 잘 설계되지 않은 언어의 특징을 가지게 됐다. 새 것을 새 부대에 담는 방식이 아니고, 옛 것과 새것을 헌부대에 담는 방식으로 개발이 진행된거다.

이런 이유로 언어 자체에 대한 비판이 많다. [http://mgkim.blogspot.kr/2012/04/php.html PHP: 잘못된 디자인의 프렉탈]이라는 글을 읽어보자. 요는 그렇다. 초기에 PHP는 쓸만한 언어였는지 모르지만, 태생적인 한계를 극복하지 못한 낡아 빠진 언어다. 이런 언어를 사용하면 안된다. 

확실히 PHP는 그런 측면이 있는데, 그럼에도 불구하고 여전히 수많은 웹 애플리케이션이 PHP로 개발되고 있으며, 앞으로도 그럴것으로 예상한다.

{{{#!html
<img src="https://docs.google.com/drawings/d/1CrVOa69hrnVygw3R1AKzhp8r8hm7QTRpV3JWSnKbkCE/pub?w=551&amp;h=499" width="385" height="349">
}}}


참고 : [http://redmonk.com/dberkholz/2014/05/02/github-language-trends-and-the-fragmenting-landscape GitHub language trends and the fragmenting landscape]

PHP는 여전히 5위 안에 드는 인기언어고, 혹평이 있는 것 같지만 큰 변화가 있을 것 같지는 않다.

=== 커뮤니티 특징 ===
"헌 부대를 수선해 가며, 옛 것과 새 것을 모두 담으려는 상황이니 언어가 좀 프랙탈 하더라도 이해해줄께"라는 정도로 관대하게 끝나지 않는 경우도 있다. 아마추어적인 커뮤니티를 문제삼기도 한다. 

범용언어가 아니고, 웹에 특화한 언어다 보니 진입이 정말 쉽다. (약간 과장 일지도 모르겠다.)아무것도 모르는 일반인도 [http://opentutorials.org/course/488 생활코딩]의 일주일짜리 웹 프로그래밍 코스면, PHP로 만든 웹 서비스를 만들 수 있다. (배포판에 따라 조금 다르지만)10분이면 HelloWorld 찍을 수 있다. Java로는 그렇게 할 수 없다. 개발 환경 만드는 것만 일주일 이상 삽질해야 할 거다. 

상황이 이러하니 1. 일반인스러운 2. 개발자 스럽지 않은(혹은 인정하고 싶지 않은) 사람이 폭넓은 층을 차지하고 있다. 뭐.. 글쎄.. 난 이걸 문제라고 보는 입장은 아니라서. 

== 문서들 ==
내가 공부한 문서들은 여기에 꾸준히 정리한다.
 * [wiki:man/12/php/pecl PHP PECL]
 * [wiki:man/12/php/buildInWebserver PHP 내장 웹서버]
 * [wiki:man/12/php/namespace PHP 네임 스페이스]
 * [wiki:man/12/php/Security PHP 보안]
 * [http://wafe.github.io/php-the-right-way/ PHP the right way]
 * [wiki:man/12/php/PSR PHP 코딩 스타일 가이드]
@


1.11
log
@119.64.102.68;;yundream;;
@
text
@d15 1
a15 1
여전히 지금도 PHP는 사용하고 있다. 뭔가 빠르게 웹 서비스를 개발 해야 할 경우에 주로 사용한다. 루비 기반의 경량 프레임워크인 sinatra를 사용하기도 하는데, PHP가 더 다루기가 쉽다. C 언어와 비슷해서 그런건가 ? 코드가 좀 커지면 지저분해 진다는 의견이 있기는 한데, 정말 그런지는 잘 모르겠다. HTML과 PHP Code가 함께 녹아드는 그 느낌 때문에, 항상 직관적이다라는 생각을 가지게 된다.
d20 1
a20 1
Java, Ruby, Python, Perl, Javascript(Node), Golang과 같은 언어들로 웹 서비스를 개발할 수 있다. 하지만 PHP는 다른 언어와 구별되는 특징이 있는데, 다른 언어들이 범용 언어로써 웹 쪽으로 확장을 한 반면, PHP는 웹 개발에 특화된 거의 유일한 언어라는 특징이 있다.
d51 1
a51 1
 * [wiki:man/12/php/pecl PECL]
@


1.10
log
@119.64.102.68;;yundream;;
@
text
@d56 1
a56 2

[[subindex]]
@


1.9
log
@119.64.102.68;;yundream;;
@
text
@d56 2
@


1.8
log
@182.212.44.139;;yundream;;
@
text
@d9 1
a9 1
1994년 '''Rasmus Lerdorf'''가 개발한 언어다. (2014년 현재 기준)무려 20년이나 된 굉장히 오래된 언어다. 
d13 1
a13 1
다만 PHP로 된 모니위키를 꾸준히 관리해왔으니 완전히 손을 뗀 것은 아니다. PHP 최신 트랜드와는 좀 동떨어진 상태에서, 그럭저럭 필요한 용도로 사용하는 수준정도라고 보면 되겠다.
d15 1
a15 1
지금도 여전히 PHP는 사용하고 있다. 뭔가 빠르게 웹 서비스를 개발 해야 할 경우에 주로 사용한다. 루비 기반의 경량 프레임워크인 sinatra를 사용하기도 하는데, PHP가 더 다루기가 쉽다. C 언어와 비슷해서 그런건가 ? 코드가 좀 커지면 지저분해 진다는 의견이 있기는 한데, 그것과는 별개로 굉장히 직관적이다. HTML과 PHP Code가 함께 녹아드는 그 느낌 때문인 것 같다. 
d20 1
a20 1
Java, Ruby, Python, Perl, Javascript(Node), Golang과 같은 언어들로 웹 서비스를 개발할 수 있다. 하지만 PHP는 다른 언어와 구별되는 특징이 있는데, 다른 언어들이 범용 언어로써 웹 서버 사이드로 확장을 한 반면, PHP는 웹 개발에 특화된 거의 유일한 언어라는 점이다. 
d25 1
a25 1
굉장히 오래된 언어다. 그리고 HTML과 함께 섞어쓰기 위해서 만든 언어다. HTML 자체가 절차적으로 해석이 되기 때문에, PHP도 HTML의 흐름에 따라서 절차적으로 수행되도록 만들어졌다. 객체지향적이 아니었고, (그때는)그럴 필요도 없었다. 언어측면에서 객체지향을 지원한 것은 비교적 최근의 일로 여전히 지원이 명확하지 않아서 까임의 대상이 된다. 
d34 1
a34 1
<img src="https://docs.google.com/drawings/d/1CrVOa69hrnVygw3R1AKzhp8r8hm7QTRpV3JWSnKbkCE/pub?w=551&amp;h=499">
d37 1
d40 1
a40 1
PHP는 여전히 탑 5위 안에 드는 인기언어고, 혹평에도 불구하고 큰 변화는 없어 보인다. 
d43 1
a43 1
"헌 부대를 수선해 가며, 옛 것과 새 것을 모두 담으려는 상황이니 언어가 좀 프랙탈 하더라도 이해해주께"정도로 관대하게 끝나지 않는 경우도 있다. 아마추어적인 커뮤니티를 문제삼기도 한다. 
d45 1
a45 1
범용언어가 아니고, 웹에 특화한 언어다 보니 진입이 정말 쉽다. (약간 과장 일지도 모르겠다.)아무것도 모르는 일반인도 [http://opentutorials.org/course/488 생활코딩]의 일주일짜리 웹 프로그래밍 코스면, PHP로 만든 웹 서비스를 만들 수 있다. Java로는 그렇게 할 수 없다. 개발 환경 만드는 것만 일주일은 공부해야 할 거다.
d50 1
@


1.7
log
@182.212.44.139;;yundream;;
@
text
@d3 1
@


1.6
log
@182.212.44.139;;yundream;;
@
text
@d50 2
a52 2

[[SubIndex]]
@


1.5
log
@119.64.102.68;;yundream;;
@
text
@d49 1
d51 2
@


1.4
log
@1.214.223.250;;yundream;;
@
text
@d3 4
d36 1
a36 2
참고 : [http://redmonk.com/dberkholz/2014/05/02/github-language-trends-and-the-fragmenting-landscape 
GitHub language trends and the fragmenting landscape]
@


1.3
log
@1.214.223.250;;yundream;;
@
text
@d4 1
a4 1
1994년 '''Rasmus Lerdorf'''가 개발한 언어다. 무려 20년이나 된 굉장히 오래된 언어다. 
d6 1
a6 1
내가 PHP언어를 시작한건 1998년 쯤이다. 그때 버전이 3.x ? 2.x였던가 ? 그랬던 것 같다. 지금이 2014년이니까. 17년째 하고 있는 건가 ? 물론 꾸준히 한건 아니다. 한 3년 정도 흔히 말하는 Apache + PHP + Mysql(당시에는 3.x 버전이였던 것으로 기억한다.)기반으로 개발을 했다. 그 다음에는 분야를 완전히 갈아탔는데, 그 이후로는 회사 프로젝트 차원에서 PHP를 활용했던 적은 없다. 
d8 1
a8 1
다만 PHP로 된 모니위키를 꾸준히 관리해왔으니 완전히 손을 논 것은 아니다. PHP 최신 트랜드와는 좀 동떨어진 상태에서, 그럭저럭 필요한 용도로 사용하는 수준정도이겠다.  
d14 30
@


1.2
log
@119.64.102.68;;yundream;;
@
text
@d16 1
@


1.1
log
@119.64.102.68;;yundream;;
@
text
@d15 1
@
