#title strcpy(3)
[wiki:function_strcpy(3) HTML 변환문서]

{{{#!plain
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook V4.1//EN">
<chapter lang=ko>
<!-- 작성자 : yundream             -->
<!-- 작성일 : 2004/02/04           -->
<!-- 연락처 : yundream@joinc.co.kr -->

<!-- 함수 이름을 입력합니다 -->
<title>strcpy(3)</title>

<!-- 이건 함수에 대한 대략적인 설명이구요 -->
<para>
	문자열을 복사한다. 
</para>
 
<!-- 여기에 함수의 간단한 사용법이 들어갑니다 -->
<section>
	<title>사용법</title>
	<para>
		<screen>
#include &lt;string.h&gt;

char *strcpy(char *dest, const char *src);
char *strncpy(char *dest, const char *src, size_t n);
		</screen>
	</para>
</section>

<!-- 여기엔 함수의 자세한 설명 이 들어갑니다 -->
<section>
	<title>설명</title>
	<para>
		src 가 가르키는 문자열을 dest 가 가르키는 배열에 복사한다. 
		src 에서 복사될때 '\0' 까지 복사됨으로 문자열이 겹쳐지지는 않는다. 
		이때 dest 는 src 를 모두 복사 받을수 있을정도로 충분히 커야 한다. 
	</para>
	<para>
		strcpy() 는 목적지의 배열의 크기가 충분히 크지 않을경우 어떤일이 
		발생될지 알수가 없다. 운이 좋으면 세그먼트폴트 에러와 함께 죽겠지만, 
		그렇지 않고 알수 없는 작동을 할수도 있다. 이는 흔히 말하는 
		버퍼 오버 플로우 크래커 기술에 매우 취약하다. strcpy() 를 쓰기전에는 
		반드시 복사할 문자열의 크기를 검사해주어야 한다. 
		또는 strncpy() 를 써야 한다.
	</para>
	<para>
		strncpy()는 <emphasis>n</emphasis>을 이용해서 복사할 문자열의 크기를 
		정할 수 있으므로 버퍼 오버 플로우에 좀더 안전하다. 
		만약 <emphasis>dest</emphasis>문자열의 크기가 <emphasis>src</emphasis>의
		크기보다 작다면 남는 공간은 null로 채워진다. 
	</para>
</section>

<!-- 함수가 되돌려주는 값이구요 -->
<section>
	<title>반환값</title>
	<para>
		 목적지 문자열 dest 에 대한 포인터를 반환한다.
	</para>
</section>

<!-- 마지막으로 에제 입니다                                                 -->
<!-- 여기에는 완전한 예제가 들어가 있는데, 굳이 완전한 예제를 만들필요 없이 -->
<!-- 코드 일부분만 작성해서 올려주셔도 됩니다                               --> 
<!-- "<", ">", "&" 등은 변환해 주셔야 하는데, 귀찮으시면 :-) 변환 하지 않   -->
<!-- 아도 됩니다. 제가 검사 해서 올리겠습니다                               -->
<!-- 예제에 대한 간단한 설명을 적어주셔도 되구요                            -->
<section>
	<title>예제</title>
	<para>
		<screen>
#include &lt;string.h&gt;

int main()
{
    char buf[25];

    strcpy(buf, "hello world");
    printf("%s\n", buf);
    strncpy(buf, "hello world", 5);
    printf("%s\n", buf);
}
		</screen>
	</para>
</section>
</chapter>

}}}
