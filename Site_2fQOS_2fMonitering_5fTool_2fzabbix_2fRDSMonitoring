#title Zabbix와 Cloud-watch를 이용한 RDS 모니터링 

[[TableOfContents]]
== Zabbix와 Cloudwatch를 이용한 RDS 모니터링 ==
[wiki:Site/QOS/Monitering_Tool/zabbix Zabbix]를 이용해서 [wiki:Site/cloud/AWS AWS]의 시스템과 네트워크를 모니터링하고 있다. 각 인스턴스에 에이전트를 설치해서, 인스턴스들로 부터 직접 데이터를 수집하고 있다. Cloudwatch에서 제공하는 정보를 수집하거나 혹은 Agent와 Cloudwatch를 함께 사용하는 방법도 있겠는데, 에이전트를 설치하면 cloudwatch를 이용해서 수집하는 모든 데이터외에 추가적인 데이터 수집이 가능하기 때문에, cloudwatch는 아예 사용하지 않고 있다.    

하지만 Mysql([wiki:Site/cloud/AWS/RDS RDS])와 같은 (SaaS) 형태의 서비스의 경우 에이전트 설치가 불가능 하다. 이런 경우라고 해도 (mysql에서 지원하는 특수 query를 이용해서)애플리케이션 영역에서의 정보들 그러니까, qps, open tables, slow query, connection 등에 대한 정보는 확인할 수 있지만, 인스턴스 영역의 정보들인 메모리, 시피유, 디스크 사용율 등의 정보는 수집할 수가 없다. 제대로된 모니터링을 위해서는 이들 정보도 반드시 수집해야 만한다.  

그렇다고 cloudwatch만으로 모니터링을 하기에는 몇 %쯤 부족한 느낌이 든다. 
  1. cloudwatch는 2주간의 데이터만 제공한다. 모니터링 결과를 활용하기 위해서는 좀 더 긴 시간동안 데이터를 저장해야 한다.
  1. cloudwatch api 호출에는 "돈"이 들어간다.
결국 cloudwatch와 mysql query를 모두 이용해서 목적에 맞는 데이터를 수집해야 한다.
=== 테스트 환경 ===
  * 우분투 리눅스 14.04
  * Python 2.7.6 : AWS CLI를 설치하려면 필요하다. 
=== Mysql Query vs Cloudwatch ===
Cloudwatch에서 가져올 수 있는 정보는 다음과 같다. 참고로 Mysql 쿼리로 가져올 수 없는 정보를 표시했다.
||Metric                  ||설명                                    ||단위       || Mysql에서 읽을 수 없는 데이터 ||
||BinLogDiskUsage         ||바이너리로그가 사용하는 디스크 용량     ||바이트     ||                               ||
||CPUUtilization          ||CPU 사용율                              ||퍼센트     || O                             ||
||DatabaseConnection      ||데이터베이스 연결 횟수                  ||카운트     ||                               ||
||FreeableMemory          ||사용할 수 있는 메모리 크기              ||바이트     || O                             ||
||FreeStorageSpace        ||사용할 수 있는 디스크 크기              ||바이트     || O                             ||
||SwapUsage               ||인스턴스가 사용중인 스왑 메모리 크기    ||바이트     || O                             ||
||ReadIOPS                ||초당 디스크 읽기 횟수                   ||카운트/초  || O                             ||
||WriteIOPS               ||초당 디스크 쓰기 횟수                   ||카운트/초  || O                             ||
||ReadLatency             ||디스크 읽기에 걸리는 평균 시간          ||초         || O                             ||
||WriteLatency            ||디스크 쓰기에 걸리는 평균 시간          ||초         || O                             ||
||ReadThroughput          ||디스크에서 초당 읽는 데이터 크기        ||바이트/초  || O                             ||
||WriteThroughput         ||디스크에 초당 쓰는 데이터 크기          ||바이트/초  || O                             ||
여기에 Mysql query를 이용해서 읽을 수 있는 정보를 더하면 필요한 거의 대부분의 메트릭을 수집할 수 있다. Mysql query로 수집할 수 있는 메트릭은 [wiki:Site/QOS/Monitering_Tool/zabbix/Mysql 여기를 참고]하자.  

내가 mysql을 모니터링 하려는 이유는 
  1. 문제가 서비스 영역으로 확대하기 전에 확인 한다.
  1. 최적화 시점과 최적화 지점을 찾기 위한 기초 자료를 수집한다. 
이다. 

고민하지 말고 일단 모든 메트릭을 다 수집한 다음, 필요한 메트릭을 뽑아서 사용하는 방법도 있겠지만 문제가 있다. "Cloudwatch의 경우 API 1000건 호출당 1센트의 비용이 들어간다. 별거 아니라고 생각하겠지만 100개의 Mysql로 부터 매분 15개의 메트릭을 수집한다고 하면, 한달에 64,800,000건의 API를 호출한다. 무려 648,000달러다." 마음대로 사용할 수 있는 자원이 아니다. 

수집 간격도 5분 정도로 하고, 목적에 필요한 메트릭을 사용하기로 했다. 
||Metric               ||수집               ||
||CPUUtilization       ||CloudWatch         ||
||FreeableMemory       ||CloudWatch         ||
||DatabaseConnection   ||Mysql              ||
||Querypersecond       ||Mysql              ||
||SlowQuery            ||Mysql              ||
||ReadThroughput       ||Mysql              ||
||WriteThroughput      ||Mysql              ||

=== Mysql Zabbix Agent 개발 ===
Zabbix agent는 독립된 프로그램이다. 실행할 zabbix agent 프로그램 이름을 등록하면, zabbix 서버는 zabbix agent를 실행하고 그 결과를 읽어와서 데이터베이스에 저장한다. 결과는 단순 [wiki:man/12/표준출력 표준출력]이다. Mysql 연결 횟수를 가져오는 간단한 스크립트다.
{{{#!plain
# mysqladmin -umonuser -pmypassword extended-status | grep -i " Connections " | cut -d '|' -f3 | tr -d ' ' 
2039
}}}

Zabbix agent 개발과 등록은 [wiki:Site/QOS/Monitering_Tool/zabbix/Agent Zabbix agent 개발]문서를 참고하자.
=== Cloudwatch Zabbix Agent 개발 ===
이제 CPUUtilization과 FreeableMemory를 수집할 차례다. 이 값들은 CloudWatch API를 이용해서 주기적으로 수집해서 zabbix 서버에 저장하려고 한다. 그냥 CloudWatch API를 호출해서 값을 읽어오는 간단한 스크립트를 하나 만들면 된다. 

먼저 Cloudwatch API를 이용하는 방법을 살펴봐야 겠다.
==== CLI ====
AWS에서 제공하는 '''AWS CloudWatch Command Line Interface'''(이하 moncli)를 이용하는 방법이다. [http://aws.amazon.com/developertools/2534?_encoding=UTF8&jiveRedirect=1 AWS 사이트]에서 다운로드 할 수 있는데, 나는 그냥 apt-get을 이용해서 설치했다. (편리하다 우분투)
{{{#!plain
# apt-get install moncli 
}}}
패키지를 설치하면 cloudwatch를 사용하기 위한 여러가지 프로그램들이 설치되는데, 그 중 '''mon-get-stats'''를 이용해서 모니터링 메트릭 정보를 가져올 수 있다. 참고로 이 프로그램은 RDS 뿐만 아니라, EC2, SQS 등 다른 모든 AWS 자원들에 대해서 범용적으로 사용할 수 있다. 

계속 ...
==== API ====

계속 ...
=== 참고 ===
 * [http://aws.amazon.com/cloudwatch/pricing/ Cloudwatch 비용]
 * [http://databasesincloud.wordpress.com/2011/11/08/monitoring-oracle-databases-running-on-amazon-rds/ CloudWatch를 이용한 RDS Oracle 데이터베이스 모니터링]
