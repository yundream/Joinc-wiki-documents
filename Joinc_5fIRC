#title JOINC IRC의 각종 대화내용들 덤프

''' 목차 '''
[[TableOfContents]]

==== 2003/12/10 01:00 ====
 * 이 문제는 lisen대기열에만 있고 아직 accept()가 이루어지지 않은 상태에서 클라이언트가 write할경우 어떤 문제가 벌어질 것이냐에 대한 토론이다. 결론은 accept되지 않은 상태에서도 write는 성공적으로 이루어지고 데이터는 서버측 버퍼에 쌓인다로 나왔다. 결과는 [FAQ]에 정리해 두었다. 
{{{#!plain
<MichinOm> 서버소켓에서 대기중에 클라이언트의 connect는 listen대기열에만
           들어가도 클라이언트는 success로 판정되잖아요? 그런데 서버에서는,
           다른일 처리로 바로 accept못한다고 봤을때, 클라이언트가
           connect되자마자 바로 write해버리면 write error되잖아요? 그래서,
           서버에서 소켓붙였으니깐 데이터보내라는 신호를 먼저클라이언트에게
           보내고 그걸 받고나야, 클
<MichinOm> 라이언트에서 데이터를 보내느게 낫다고 얘기됐는데. 님들 생각은요?
<yundream> 앗 -.-;
<yundream> 아.. 서버 클라이언트간 동기화..를.. 시키자라는 ?
<minzkn^초보> select에서 Tx쪽에 fd_set 걸어두면 그럴 이유가 있을지 모르겠네요.
              
<MichinOm> 클라이언트가 connect하자마자 바로 write해버리면 에러나는 경우가
           생긴다는 얘기죠. 서버에서 바로 accept안했다면.
<MichinOm> minzkn^초보:  예쓰기검사안할때 얘깁니다
<minzkn^초보> 쓰기 검사 안하는것은 좀 거시기 할거 같아요. 저라면...
<MichinOm> 전에 윤님의견이 쓰기검사는 굳이 할필요가 없지 않나. 하고 나와서요
<MichinOm> 흐음..쓰기검사를 꼭 한다라...
<minzkn^초보> 물론 검사 필요성이 없을수도 있지만 초반에 한번은 하는게...
<yundream> 음..
<MichinOm> 초반에 한번?
<MichinOm> 저렇게 connect이후에
<MichinOm> 첫번째 wirte일때만?
<yundream> 정확한 반응이 어떻게 되죠 ? 대기열에만 있고 accept()하기전에
           write하면 ?
<MichinOm> 에러나던데요.
<minzkn^초보> 아니면 서버가 의도적으로 연결을 끊기전에 listen(0)하여 두고
              있다가 여유 생기면 다시 listen(5)로 전환을....
<MichinOm> 근데 쓰기검사하면 ACCEPT전엔 가능으로 안돼는건 맞죠?
<minzkn^초보> 아뇨. 가능일수도 있죠.
<MichinOm> 음.그럼 별 효용이 없네요
<yundream> 음.. accept 호출후 데이터를 보내는 것도.. 괜찮을것 같군요.
<MichinOm> 프로토콜설계에 서버가 ACCEPT이후에 "니 인자 데이터보내라' 하고
<MichinOm> 클라이언트에 보내고나면 클라이언트가 데이터를 보내는식의..
<MichinOm> 그런방법말고 또 좋은게 없나해서.
<yundream> 음. ..
<minzkn^초보> 획기적인 방법은 없을듯 하네요. 그냥 클라이언테에서 write시에 0
              또는 (-1)반환되면 그냥 클라이언트도 끊는것이...
<yundream> 음.. 마땅한 방법이 떠오르질 않는군요.
<MichinOm> minzkn^초보: 음..
<MichinOm> 프로토콜에 그런게 없다면..그냥 클라이언트가 끊는다라..
<minzkn^초보> 똑똑한 클라이언트가 되야죠~ 그 외에는 방법이 없을듯..
<minzkn^초보> if(sendto(sock, buff, sizeof(buff)) != sizeof(buff))
              Disconnected();
<minzkn^초보> if(send(sock, buff, sizeof(buff), MSG_NOSIGNAL) != sizeof(buff))
              Disconnected();
<MichinOm> connect timeout을 위해 따로 커넥트  전용쓰레드를 쓰듯이 accept를
           위해 항상  accept하고 있는 전용쓰레드를 돌리는건?
<minzkn^초보> 서버측에서 문제해결을 위한것보다 클라이언트에서 방법을
              강구하는게 좋지 않을가요?
<yundream> accept쓰레드만을 따로 쓴다면.. .. 그 문제는.. 거의 해결 가능 할것
           같은데..
}}}

==== 2003/12/05 20:00 ====
{{{#!plain
[19:25] <yundream> 으함님 / 블로그 잘 아시나요 ?
[19:25] <yundream> 블+로+그
[19:25] <yundream> 음..
[19:25] <으함™^내방> 아뇨 처음 듣는데요
[19:25] <으함™^내방> 전 용어는 안외워요
[19:25] <으함™^내방> ㅋㅋ
[19:25] <yundream> 흠.. 그렇구뇨.
[19:26] <으함™^내방> 그냥 하는식이라니간요 ㅋㅋ
[19:26] <yundream> 음.. 그게 뭐더라..
[19:26] <으함™^내방> 전 이상하게 친구이름도 1년만나야 외워져요
[19:26] <으함™^내방> ^^
[19:26] <yundream> 개인 미디어 어쩌고 하는..
[19:26] <으함™^내방> 개인 미디어 서버요?
[19:26] <yundream> 게시판. -.-;
[19:26] <으함™^내방> 아
[19:27] <으함™^내방> php로만든건가요?
[19:27] <yundream> 음..
[19:27] <yundream> 뭘로 만들어도 관계 없죠.
[19:28] <으함™^내방> 아..
[19:28] <으함™^내방> 블로그 VS 게시판. 막상 나조차도 '블로깅' 이라는 
[19:28] <으함™^내방> 것을 하고는 있지만, 대체 그것과 일반 게시판에 일상을 기록하는 것과의 
[19:28] <으함™^내방> 차이점은 모르고 있다. 
[19:28] <으함™^내방> 아
[19:29] <으함™^내방> 블러그가 모길래 검색이 많이 되지
[19:29] <으함™^내방> 크크
[19:30] <으함™^내방> 대충 템플릿 게시판?
[19:30] <으함™^내방> 게시판 블로그(blog)란 ‘웹로그’(web log)의 준말로 일반적인 온라인 
[19:30] <으함™^내방> 게시판이 확장된 형태 
[19:31] <yundream> 흠.. 결국은 게시판이군요..
[19:31] <으함™^내방> 홈페이지 블러그 라는 검색도 있네요
[19:31] <으함™^내방> 검색할수록 궁금 해지네
[19:31] <으함™^내방> 크크
[19:32] <yundream> 음....
[19:32] <으함™^내방> 블로그가 개인적(private)이라고 한다면, 위키는 훨씬 더 공유적(public)입니다. 
[19:32] <으함™^내방> 아
[19:32] <으함™^내방> 먼지 대충 알겠당
[19:32] <으함™^내방> ㅋㅋ
[19:33] <으함™^내방> 오
[19:33] <으함™^내방> 블러그 라는게
[19:33] <yundream> djel 
[19:33] <으함™^내방> 개인 홈피 성격으로 신드롬을 이르키고 있군요
[19:33] <yundream> 어디 블러그 표준 프로세스 같은거 나온거 없나..
[19:33] <yundream> 만들어 보고 싶은데 흠..
[19:33] <으함™^내방> 좀더 뒤져보면 나올거 같은데요?
[19:33] <yundream> RSS를 이용해서.. 변경된 내용 공유하고..
[19:34] <으함™^내방> http://blog.hanmir.com
[19:34] <yundream> 서비스 말고 원리를.. 알려주는 고런..
[19:35] <으함™^내방> 주요 포털·커뮤니티 사이트들이 최근 앞다퉈 ‘블로그’ 서비스경쟁에 나서고 있다. 
[19:35] <으함™^내방> 블로그는 웹(web)과 항해 일지를 뜻하는 로그북(logbook)의 합성어. 1인 미디어 커뮤니티로 일종의 ‘약식 개인 홈페이지’다.특히 게시판 형식의 사이트에 개인이 자유롭게 글과 사진, 동영상 등을 올림으로써 네티즌의 자유로운 생각과 감정을 표현하는수단으로 자리잡아왔다. 
[19:35] <으함™^내방> 오
[19:36] <으함™^내방> 이거 잘만이용하면 카페 보다 좋은 개인 홈피로 탈바꿈될듯
[19:36] <yundream> 음.. 원리를 알아야..
[19:36] <yundream> 워케 유용할지를..
[19:36] <으함™^내방> http://www.help119.co.kr/blog/archives/000102.html
[19:36] <yundream> 으함 / 검색의 천재
[19:37] <으함™^내방> dh
[19:37] <으함™^내방> 오
[19:37] <으함™^내방> 여기도
[19:37] <으함™^내방> http://www.ejino.net/jino/archives/2003/07/20030715_000070.html
[19:38] <으함™^내방> 블로그는 개인 홈페이지와 달리 웹사이트에서 제공하는 양식을 이용해 손쉽게 만들 수 있어 홈페이지 제작기술이 없는 사람도 쉽게 만들 수 있다. 콘텐츠도 게시판을 통해 쉽게 등록할 수 있으며 또한 다른 블로그 게시판의 글을 퍼오는 형태로 쉽게 꾸밀 수 있어 네티즌의 폭발적인 인기를 얻고 있다. 
[19:41] <으함™^내방> 앞서서 말했듯이 blog은 단독적인 사이트이지만 비슷한 주제를 다루는 다른 blog들과 매우 밀접하게 연결되어 있어 전체적으로 큰 네크워크를 형성하게 된다.
[19:44] <yundream> 음..
[19:45] <멍^--> ^^
[19:45] <으함™^내방> http://woogi.apmsetup.net:5000/bbs/zboard.php?id=column
[19:45] <으함™^내방> 거의 위키네
[19:45] <으함™^내방> 얌얌
[19:46] <으함™^내방> 어떤넘이 위키 따라해놓고 다르게 할려고 애쓴 흔적을 엿볼수 있음 >,.<
[19:46] <으함™^내방> 그래도 좋군
[19:46] <으함™^내방> ㅋㅋ
[19:46] <yundream> 음.. -.-;
[19:47] <으함™^내방> 드림님 말씀대로
[19:47] <으함™^내방> RSS로 공유 하네요?
[19:48] <yundream> 음.. .
[19:48] <yundream> 핵심은 RSS, 트랙백, 핑백? 뭐 대량 이거라고 나왔군요.
[19:49] <으함™^내방> 이히히
[19:50] <으함™^내방> http://www.guys.pe.kr/shrimp/index.php?itemid=35
[19:50] <으함™^내방> 여기 블로그 프로그램 2가지요
[19:52] <으함™^내방> 이히히
[19:53] <yundream> 으함님
[19:53] <으함™^내방> 옙?
[19:53] <yundream> 지금 대화 내용을 -.-
[19:53] <yundream> JOINC_IRC wiki에 좀 붙여 주세요 :-)
}}}

==== 2003/12/02 11:30 ====
 1. 멀티캐스팅을 통한 네트워크 관리
 1. 어셈블리로 libc를 대체하는 방법 
{{{#!plain
<알파인유니션> 기입해서
<멍> 리스트박스 동적 생성해도 써도 되지만 --;;
<알파인유니션> 게임장에서
<멍> 별루.
<알파인유니션> B클래스를
<알파인유니션> 이용해서
<멍> -0- 겜회사
<알파인유니션> 서브넷별로 게임에다 배당했는데
<알파인유니션> 그게 좀 짜증나서
<알파인유니션> 멀티캐스팅을 이용해서
<알파인유니션> 하려고 그러거든요
<알파인유니션> 빙고,경마,포커
<yundream> 음...
<알파인유니션> 등등 게임종류가 많은데
<알파인유니션> 종류에 관계없이
<알파인유니션> dhcp를 이용해서 일단
<알파인유니션> IP는 상관없이 나눠주고
<알파인유니션> 멀티캐스트 관리 서버를 하나 둬서
<알파인유니션> 게임타입에 맞게
<알파인유니션> 멀티캐스트 주소를 배당해서
<yundream> 적당히 JOINC 시켜서 서비스 ?
<알파인유니션> ㅎㅎ
<yundream> JOINC가 아니고 JOIN =/=;
<알파인유니션> 일단
<알파인유니션> 예를 들어
<minzkn_초보> multicast 는 IP아무거나 (출돌나도 상관없음) 배당하고 사용해도
              되요~~~~~~~``
<알파인유니션> 게임타입 A인
<알파인유니션> 포커가
<yundream> 어차피 조인만 시키면 되니.
<알파인유니션> IP는
<알파인유니션> 172.31.23.1인데
<알파인유니션> 이미 알고있는
<알파인유니션> 172.31.0.1
<알파인유니션> TCP 리스닝 서버인
<알파인유니션> 멀티캐스트 관리 서버에다가
<알파인유니션> 쿼리하면
<알파인유니션> 어 너네 게임타입이 A인
<알파인유니션> 포커는 221.1.0.1 쓴다
<알파인유니션> 이리로 통신해라라고
<알파인유니션> 리스폰스 해주면
<알파인유니션> 각 게임타입별로만
<알파인유니션> 멀티캐스트를 이용해서
<알파인유니션> 게임장내에서
<알파인유니션> 유도리있게
<알파인유니션> 통신할라 그러는데
<yundream> 음..
<알파인유니션> 어떻게 생각하십니까
<알파인유니션> 이구조에 대해서
<yundream> 요즘엔 아케이드 게임도 네트워크 게임이 나오는 모양이네요 ?
<알파인유니션> 음
<알파인유니션> 원래는
<알파인유니션> 시리얼비스무리하게
<알파인유니션> 연결하는데
<yundream> 구조상으로는 문제 없을것 같은데... .
<알파인유니션> 저희는 x86기반이라서
<minzkn_초보> 제 생각에는 그냥 하나의 multicast zone만 쓰고
<알파인유니션> openGL에
<알파인유니션> 고속 NIC가 
<알파인유니션> 있어서
<알파인유니션> TCP/IP환경으로 하려구요
<minzkn_초보> 게임별로 자신에 해당하는 프로토콜을 구분해서 가져가는것이
              어떨지요..
<알파인유니션> 음
<알파인유니션> 프로토콜은
<알파인유니션> 그게 좀 그런게
<알파인유니션> 아케이드 게임은
<알파인유니션> 또 포커나 고도리 이런건
<알파인유니션> 프로그레시브 보너스같은게 있어서
<알파인유니션> 예를들어서
<알파인유니션> 라스베가스 게임장에서
<알파인유니션> 어떤 게임기가
<알파인유니션> 비디오포커같은거에서
<알파인유니션> 로티플이 터지면
<알파인유니션> 타게임기에 있는
<알파인유니션> 보너스까지 줄수도 있거든요
<알파인유니션> 뭐 약간은 다른이야긴데
<알파인유니션> 게임기들이
<알파인유니션> 전부 같은 존을 쓰면
<알파인유니션> 게임타입구분은 그럼
<알파인유니션> 포트로 하란 말씀이신지
<알파인유니션> 아님
<알파인유니션> 같은 존에다가
<알파인유니션> 다른 프로토콜로 통신을 
<minzkn_초보> 같은존+포트 에다가 프로토콜에 DestinationType 을 두어 운영하면
              어떨까라는거지요... 
<알파인유니션> 음 그럼
<yundream> 음..
<알파인유니션> 무슨 말씀인지는 알겠는데
<알파인유니션> 게임별로 다른 존을 부여하는거랑
<알파인유니션> 어떤 장단점이 생기는지
<알파인유니션> 바로 머리속에
<알파인유니션> 와닿지 않네요 ㅎㅎ
<minzkn_초보> 다른존을 부여받아도 어차피 네트웍 트래픽은 전부 발생하쟎아요..
<알파인유니션> 네
<minzkn_초보> 그래서 그냥 합치는게 어떨까라는 거지요.. 다른 이유는 없어요..
<minzkn_초보> 관리자는 상황을 봐야 할거쟎아요
<minzkn_초보> 상황보는 프로그램도 같은존에 1회만 조인하면 되니까....
<알파인유니션> 훔
<알파인유니션> 아
<알파인유니션> 그렇겠군요
<yundream> 흠... .. 그렇군요.
<알파인유니션> 제 생각은
<알파인유니션> 그 존 부여하는
<알파인유니션> 서버를 따로 박아두고
<알파인유니션> 관리도 그서버에서
<알파인유니션> 할려고 그랬는데
<알파인유니션> 음 생각해볼 문제네요
<minzkn_초보> 어떻게 해도 똑같은듯 하네요... 그냥 저라면 하나의 존을 쓰는거고
              충분히 다른 방식도 똑같네요...
<yundream> 실제로 저런건 머리로만 생각해봤지 -.-
<알파인유니션> 그런데
<yundream> 본적은 없어서 .. 긁적
<알파인유니션> 원래
<알파인유니션> 멀티캐스트 존에
<알파인유니션> 여러개 등록해도
<알파인유니션> 224.0.0.1로 때리면
<알파인유니션> 다 받을수 있지 않나요?
<알파인유니션> 저는 그렇게 생각했는데
<알파인유니션> 그게 아니더군요
<알파인유니션> 다른존에 조인한 넘들은
<알파인유니션> 224.0.0.1로 때리면 못받던데
<알파인유니션> -_-
<알파인유니션> 제 상식과는 틀린이야기라
<알파인유니션> ㅎㅎ
<알파인유니션> 하여간 감사합니다
<알파인유니션> 또 열나리 코딩을
<yundream> 코딩 -.-;
<알파인유니션> 고수분들이 옆에 계시니
<알파인유니션> 맘이 편해지는군요
<알파인유니션> ㅎㅎ
<알파인유니션> 아으 토욜날 저녁에
...
<minzkn_초보> yundream:cvs 에 /home/jcvs/pmp3 에 tdump 라는거 올려놨어요.
              어셈블리로 libc 를 사용안하도록 하는 방법이예요...
<yundream> 옷.
<minzkn_초보> 당연히 systemCall 사용하는거구요...
<yundream> dma.. ..
<yundream> 어디에 있어요 ? 왜 안보이지 -.-;
<minzkn_초보> cvs -d:pserver:<ID>:<Passwd>@cvs.joinc.co.kr:/home/jcvs/pmp3 co
              tdump
<yundream> 아 프로젝트군요.
<yundream> 전 파일인줄 알고 -.-;
<minzkn_초보> ㅋㅋㅋ.
<yundream> 여기에 주석달면 그게 공부가 되겠군요 :-)
<minzkn_초보> 거기서 보실부분은 __mzstartup__ 과 __MZ_SystemCall__ 함수
              2개뿐이예요. 나머지는 뭐 그냥.. 
<yundream> 네..
<minzkn_초보> 그리고 Makefile에서 -e 옵션...
<minzkn_초보> ldd dump 해보세요. statically 로 나오죠?
<minzkn_초보> #include 문도 없고...
<yundream> 잠시..
<yundream> 네 -e 옵션 보이는 군요.
<yundream> 오홍.
<minzkn_초보> libc를 사용하지 않으면 기본적으로 _start 라는것을 요구하는데 
<minzkn_초보> _start 부분을 __mzstartup__이 대신하여 main에 들어갈 인자를
              만들어주는것이구요.
<yundream> 음...
<minzkn_초보> __mzstartup__을 _start로 보이게 하기 위해서 -e옵션을 준거예요.
<yundream> libc를 사용할거면 _main을 사용하면 되나요 ?
<minzkn_초보> 아뇨. _main은 전혀 무관하고요.
<minzkn_초보> 링크할때 -nostdlib 옵션을 때면 알아서 libc를 포함해요.
<minzkn_초보> system call함수가 원래 7가지가 정의되고 거기서 파생되어 사용하면
              장땡인데요.
<minzkn_초보> 저는 일단 인자 4개짜리 함수만 정의해서 쓴거고요..
}}}

==== 2003/11/28 16:32 ====
{{{#!
<까토> 혹시 랜카드 하나가꼬..
<yundream> 가꼬.
<까토> 내부아이피와 외부아이피를 쓸수 있스까?
<까토> 내부아이피 연결 외부아이피 연결
<까토> 그게 대?
<yundream> 냉정하게 생각을 해보자고..
<까토> 엉
<yundream> 하나에 2개의 아이피를 줘서 어디에 쓸건데 ?
<까토> 음..
<yundream> 인터페이스 하나에 2개의 아이피라..
<까토> 어디다 쓰지 ㅡㅡ;;;;
<yundream> 쓸데 없겄는데.
<까토> 어 꼭 써야 한댜....ㅠㅠ
<yundream> 잠깐 그게 가능한가 -.-;;
<까토> 흠냥..
<yundream> 가능하다고 문서는 본거 같은데..
}}}


==== 2003/11/28 14:08 ====
{{{#!plain
<minzkn_초보> getpagesize();
<minzkn_초보> sysconf();
<minzkn_초보> getrlimit() - RLIMIT_RSS
<minzkn_초보> getrusage() - struc rusage.ru_ixrss,ru_idrss,ru_isrss
}}}
