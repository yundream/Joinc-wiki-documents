#title Assembly - Programming from the Ground Up

{{{#!html
<HTML
><HEAD
><TITLE
>Programming from the Ground Up</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.76b+
"><LINK
REL="NEXT"
TITLE="소개"
HREF="introduction.html"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="ARTICLE"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="ARTICLE"
><DIV
CLASS="TITLEPAGE"
><H1
CLASS="TITLE"
><A
NAME="AEN2"
></A
>Programming from the Ground Up</H1
><H3
CLASS="AUTHOR"
><A
NAME="AEN4"
>Jonathan Bartlett</A
></H3
><H3
CLASS="OTHERCREDIT"
>윤상배</H3
><DIV
CLASS="AFFILIATION"
><SPAN
CLASS="ORGNAME"
>www.joinc.co.kr<BR></SPAN
><DIV
CLASS="ADDRESS"
><P
CLASS="ADDRESS"
>				yundream@gmail.com<br>
			</P
></DIV
></DIV
><DIV
CLASS="REVHISTORY"
><TABLE
WIDTH="100%"
BORDER="0"
><TR
><TH
ALIGN="LEFT"
VALIGN="TOP"
COLSPAN="3"
><B
>&#44256;&#52828; &#44284;&#51221;</B
></TH
></TR
><TR
><TD
ALIGN="LEFT"
>&#44256;&#52840; 0.8</TD
><TD
ALIGN="LEFT"
>2004년 2월 09일 19시</TD
><TD
ALIGN="LEFT"
></TD
></TR
><TR
><TD
ALIGN="LEFT"
COLSPAN="3"
>최초 문서작성</TD
></TR
></TABLE
></DIV
><HR></DIV
><DIV
CLASS="TOC"
><DL
><DT
><B
>&#52264;&#47168;</B
></DT
><DT
>1. <A
HREF="introduction.html"
>소개</A
></DT
><DD
><DL
><DT
>1.1. <A
HREF="introduction.html#HELLOPROGRAMMINGWORLD"
>프로그래밍의 세계로</A
></DT
><DT
>1.2. <A
HREF="introduction.html#USEDTOOL"
>사용하는 도구</A
></DT
></DL
></DD
><DT
>2. <A
HREF="computerstructure.html"
>컴퓨터 구조</A
></DT
><DD
><DL
><DT
>2.1. <A
HREF="computerstructure.html#COMPUTERMEMORYSTRUCTURE"
>컴퓨터의 메모리 구조</A
></DT
><DT
>2.2. <A
HREF="computerstructure.html#CPU"
>CPU</A
></DT
><DT
>2.3. <A
HREF="computerstructure.html#TERMS"
>몇 가지 용어들</A
></DT
><DT
>2.4. <A
HREF="computerstructure.html#INTERPRETINGMEMORY"
>interpreting Memory</A
></DT
><DT
>2.5. <A
HREF="computerstructure.html#DATAACCESSMETHOD"
>데이터 접근 방법</A
></DT
></DL
></DD
><DT
>3. <A
HREF="makefirstprog.html"
>첫번째 프로그램 만들기</A
></DT
><DD
><DL
><DT
>3.1. <A
HREF="makefirstprog.html#ENTERINGINTHEPROG"
>Entering in the Program</A
></DT
><DT
>3.2. <A
HREF="makefirstprog.html#INTROASSEMBLY"
>어셈블리 프로그램의 개요</A
></DT
><DT
>3.3. <A
HREF="makefirstprog.html#PLANNINGTHEPROG"
>Planning the Program</A
></DT
><DT
>3.4. <A
HREF="makefirstprog.html#FINDMAXNUMBER"
>최대 숫자 찾기</A
></DT
><DT
>3.5. <A
HREF="makefirstprog.html#ADDRESSINGMODE"
>Addressing mode</A
></DT
></DL
></DD
><DT
>4. <A
HREF="assemblylanguageprogram.html"
>함수에 대해서 다루기</A
></DT
><DD
><DL
><DT
>4.1. <A
HREF="assemblylanguageprogram.html#HANDLECOMPLEXPROG"
>복잡한 프로그램 다루기</A
></DT
><DT
>4.2. <A
HREF="assemblylanguageprogram.html#MAKEFUNCTION"
>함수 만들기</A
></DT
><DT
>4.3. <A
HREF="assemblylanguageprogram.html#ASSEMBLYFUNCTION"
>C calling convention을 이용한 어셈블리어 함수설명</A
></DT
><DT
>4.4. <A
HREF="assemblylanguageprogram.html#SAMPLEFUNCTION"
>함수 예제</A
></DT
><DT
>4.5. <A
HREF="assemblylanguageprogram.html#RECURSIVEFUNCTION"
>재귀 함수</A
></DT
></DL
></DD
><DT
>5. <A
HREF="usedfile.html"
>파일 다루기</A
></DT
><DD
><DL
><DT
>5.1. <A
HREF="usedfile.html#INTROFILE"
>유닉스 파일 소개</A
></DT
><DT
>5.2. <A
HREF="usedfile.html#BUFFERANDBSS"
>버퍼와 .bss</A
></DT
><DT
>5.3. <A
HREF="usedfile.html#FILETYPE"
>표준파일과 특수 파일들</A
></DT
><DT
>5.4. <A
HREF="usedfile.html#USEDFILEINPROG"
>프로그램에서 파일의 이용</A
></DT
><DT
>5.5. <A
HREF="usedfile.html#LASTSTUDY"
>복습</A
></DT
></DL
></DD
><DT
>6. <A
HREF="recordreadandread.html"
>레코드 단위의 읽기와 쓰기</A
></DT
><DD
><DL
><DT
>6.1. <A
HREF="recordreadandread.html#RECORDWRITE"
>레코드 쓰기</A
></DT
><DT
>6.2. <A
HREF="recordreadandread.html#RECORDREAD"
>레코드 읽기</A
></DT
><DT
>6.3. <A
HREF="recordreadandread.html#RECORDEDIT"
>레코드 수정</A
></DT
><DT
>6.4. <A
HREF="recordreadandread.html#ENDINGCHAPTER"
>마치며</A
></DT
><DD
><DL
><DT
>6.4.1. <A
HREF="recordreadandread.html#AEN724"
>복습</A
></DT
><DT
>6.4.2. <A
HREF="recordreadandread.html#AEN738"
>연습문제</A
></DT
></DL
></DD
></DL
></DD
><DT
>7. <A
HREF="robustprogmake.html"
>견고한 프로그램 작성하기</A
></DT
><DD
><DL
><DT
>7.1. <A
HREF="robustprogmake.html#WHYLATE"
>왜 시간이 지연되는가 ?</A
></DT
><DT
>7.2. <A
HREF="robustprogmake.html#TIPFORROBUSTPROG"
>견고한 프로그램을 만들기 위한 몇가지 팁</A
></DT
><DD
><DL
><DT
>7.2.1. <A
HREF="robustprogmake.html#AEN771"
>사용자 테스트</A
></DT
><DT
>7.2.2. <A
HREF="robustprogmake.html#AEN775"
>데이터 테스트</A
></DT
><DT
>7.2.3. <A
HREF="robustprogmake.html#AEN802"
>모듈 테스트</A
></DT
></DL
></DD
><DT
>7.3. <A
HREF="robustprogmake.html#ERRHANDLING"
>에러 핸들링의 기본</A
></DT
><DD
><DL
><DT
>7.3.1. <A
HREF="robustprogmake.html#AEN810"
>모든 것은 에러코드를 가진다.</A
></DT
></DL
></DD
><DT
>7.4. <A
HREF="robustprogmake.html#LORDOFROBUSTPROG"
>견고한 프로그램으로 만들기</A
></DT
></DL
></DD
><DT
>8. <A
HREF="usedlibrary.html"
>라이브러리를 통한 함수 공유</A
></DT
><DD
><DL
><DT
>8.1. <A
HREF="usedlibrary.html#SHAREDLIBRARYUSED"
>공유 라이브러리의 이용</A
></DT
></DL
></DD
><DT
>9. <A
HREF="aboutmemory.html"
>메모리에 대하여</A
></DT
><DD
><DL
><DT
>9.1. <A
HREF="aboutmemory.html#SEECOMPUTERMEMORY"
>컴퓨터는 메모리를 어떻게 바라보는가</A
></DT
><DT
>9.2. <A
HREF="aboutmemory.html#INSTRUCTIONPOINTER"
>Instruction Pointer</A
></DT
><DT
>9.3. <A
HREF="aboutmemory.html#MEMORYSTRUCTUREFORLINUX"
>리눅스 프로그램에서의 메모리 구조</A
></DT
><DT
>9.4. <A
HREF="aboutmemory.html#ADDRESSISLIE"
>Every Memory Address is Lie</A
></DT
><DT
>9.5. <A
HREF="aboutmemory.html#GETTINGMOREMEMORY"
>Getting More Memory</A
></DT
><DT
>9.6. <A
HREF="aboutmemory.html#MEMORYCONTROL"
>메모리 관리</A
></DT
><DT
>9.7. <A
HREF="aboutmemory.html#VARIABLEANDCONST"
>변수와 상수들</A
></DT
><DT
>9.8. <A
HREF="aboutmemory.html#ALLOCATEINIT"
>allocate_init 함수</A
></DT
><DT
>9.9. <A
HREF="aboutmemory.html#AEN931"
>allocate 함수</A
></DT
><DT
>9.10. <A
HREF="aboutmemory.html#AEN962"
>deallocate 함수</A
></DT
><DT
>9.11. <A
HREF="aboutmemory.html#AEN967"
>성능 및 다른 몇가지 문제들</A
></DT
><DT
>9.12. <A
HREF="aboutmemory.html#AEN975"
>Allocator 사용하기</A
></DT
><DT
>9.13. <A
HREF="aboutmemory.html#AEN991"
>더 많은 정보들</A
></DT
><DT
>9.14. <A
HREF="aboutmemory.html#AEN1010"
>복습</A
></DT
></DL
></DD
><DT
>10. <A
HREF="optimization.html"
>최적화</A
></DT
><DD
><DL
><DT
>10.1. <A
HREF="optimization.html#AEN1032"
>최적화가 필요한 시점</A
></DT
><DT
>10.2. <A
HREF="optimization.html#AEN1052"
>어디를 최적화 할 것인가</A
></DT
><DT
>10.3. <A
HREF="optimization.html#AEN1059"
>지역 최적화 방안</A
></DT
><DT
>10.4. <A
HREF="optimization.html#AEN1089"
>전역 최적화 방안</A
></DT
><DT
>10.5. <A
HREF="optimization.html#AEN1103"
>복습</A
></DT
></DL
></DD
><DT
>11. <A
HREF="appendixa.html"
>Appendix A. GUI 프로그래밍</A
></DT
><DD
><DL
><DT
>11.1. <A
HREF="appendixa.html#AEN1114"
>GNOME 라이브러리</A
></DT
><DT
>11.2. <A
HREF="appendixa.html#AEN1119"
>다양한 언어를 이용한 간단한 GNOME 프로그램 작성</A
></DT
><DT
>11.3. <A
HREF="appendixa.html#AEN1169"
>GUI Builders</A
></DT
></DL
></DD
><DT
>12. <A
HREF="appendixb.html"
>Appendix B. Common x86 Instructions</A
></DT
><DD
><DL
><DT
>12.1. <A
HREF="appendixb.html#AEN1185"
>Data Transfer Instructions</A
></DT
><DT
>12.2. <A
HREF="appendixb.html#AEN1239"
>Integer Instructions</A
></DT
></DL
></DD
><DT
>13. <A
HREF="appendixc.html"
>Appendix C. 주요 시스템 콜들</A
></DT
><DT
>14. <A
HREF="appendixd.html"
>Appendix D. ASCII 코드 표</A
></DT
></DL
></DIV
><BLOCKQUOTE
CLASS="ABSTRACT"
><DIV
CLASS="ABSTRACT"
><A
NAME="AEN17"
></A
><P
></P
><P
>        이 문서는 ProgrammingGroundUp의 번역 문서다. 계획으로는 하루 한시간씩을
        번역에 투자할 생각이지만 생각처럼 잘 될런지는 모르겠다. 누군가 참여하는 
        사람이 있다면 훨씬 진행이 빨라질 것이라고 생각된다. 
    </P
><P
>        번역은 매우 느슨하게 이루어질 것이다. 즉 필요없다고 생각 되는 부분은 
        과감히 생략할 수 있으며, 비슷한 다른 말론 바뀔 수 있으며 추가 될 수도 
        있다. 번역 순서역시 각장의 순서를 따르지는 않을 수도 있다(관심있는
        부분부터 번역이 이루어질 것이다).  
    </P
><P
></P
></DIV
></BLOCKQUOTE
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>&nbsp;</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
>&nbsp;</TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="introduction.html"
ACCESSKEY="N"
>&#45796;&#51020;</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>&nbsp;</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
>&nbsp;</TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>소개</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>
}}}
[[category(1)]]
