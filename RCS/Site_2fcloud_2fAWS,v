head	1.7;
access;
symbols;
locks
	root:1.7; strict;
comment	@# @;


1.7
date	2013.09.13.14.45.22;	author root;	state Exp;
branches;
next	1.6;

1.6
date	2013.08.15.12.55.37;	author root;	state Exp;
branches;
next	1.5;

1.5
date	2013.08.14.15.18.04;	author root;	state Exp;
branches;
next	1.4;

1.4
date	2013.07.28.12.52.48;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2013.07.28.12.49.16;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2013.07.28.12.48.25;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2012.12.10.13.41.17;	author root;	state Exp;
branches;
next	;


desc
@./data/text/Site_2fcloud_2fAWS
@


1.7
log
@128.134.217.152;;yundream;;
@
text
@#title Amazon web service 분석

[[TableOfContents]]
== Amazone Web Service ==
Amazon Web Services(이하 AWS)는 클라우드 컴퓨팅을 위한 원격 컴퓨팅 서비스의 모음으로 Amzaone.com이 제공한다. AWS의 핵심은 잘알려진 EC2와 S3이다. AWS는 물리적인 컴퓨터시스템과 네트워크 시스템과 같인 인프라를 "가상화"해서 제공한다. 즉 유저는 이들 인프라를 마치 원격에 있는 소프트웨를 제어하듯이, 자유롭게 '''만들고, 실행하고, 늘리고, 삭제할 수'''있다.

AWS는 EC2와 S3 즉 컴퓨터와 네트워크, 스토리지 위에 다른 수많은 소프트웨어 서비스들을 제공한다. 여기에는 '''검색''', '''Message queue''', '''Cloudwatch''', '''MapReduce''', '''Database''', '''NoSQL'''... 등이 포함된다.

AWS가 처음부터 클라우드 컴퓨팅 기술을 아마존이 시작한 건 아니다. HP, Oracle, 마이크로 소프트 등이 오랫동안 클라우드 관련 사업을 해오고 있었다. 아마존이 EC2 베타버전의 서비스를 발표한게 고작해야 2006년, 그 짧은 시간에 아마존이 클라우드 시장을 장악했다. 

이러다 보니 클라우드 개발을 하기 위해서 아마존 웹 서비스를 먼저 분석해야 하는게 지금 (나의)상황이다. 분석은 사용자 입장이 아닌 순전히 개발자 입장에서 진행할 생각이다. 

== AWS Global Infrastructure ==
=== Region ===
Region은 AWS의 컴퓨팅 파워를 제공하는 물리/네트워크 기반이 있는 "지역"을 의미한다.  

AWS는 US East, US West(Northern Califoni) US West(Oregon), Sao Paulo(Brazil), Ireland, Singapore, Tokyo, Sydney 8개의 region을 운용하고 있다. 이외에 미국 정부를 위해서 미국내에 '''GovCloud'''를 운영하고 있다. 8개 이외의 지역의 경우 지역적으로 가장가까운 region을 선택해서 서비스 한다. 예를들어 대한민국의 경우 Tokyo region을 이용한다[[FootNote(지역적으로 그리 멀리 떨어진건 아닌데, 워낙 트래픽이 많이 발생하는 지역이라서 네트워크워크 상태가 그리 좋지 않다. (2013년 7월 기준)아직 대한민국을 위한 region 계획은 없다.)]]

각 Region은 하나 이상의 '''Availability zone'''으로 구성된다. Availability zone은 하드웨어적으로 분리된다. 따라서 하나의 zone이 문제 생기더라도 다른 zone은 문제 없이 작동할 수 있는 구조다. 

=== Edge ===
Region외에 '''AWS edge'''가 있다. Edge는 CloudFront(CDN)과 Route53을 제공한다. 대한민국의 경우 '''AWS Region'''을 제공하지는 않는 대신, AWS Edge는 제공한다. 예컨데, 컴퓨팅자원(VM 인스턴스 등)은 tokyo에 두고, 컨텐츠는 대한민국 Edge에 두는 방식으로 인터넷 서비스를 효율적으로 서비스할 수 있다.    

== AWS 관련 문서들 ==
  * [wiki:Site/cloud/AWS/Architecture AWS 서비스 아키텍처]   
  * [wiki:Site/cloud/AWS/ServiceList AWS 주요 서비스 목록] 
  * [wiki:Site/cloud/AWS/RDS AWS Relational Database Service] 
  * [wiki:Site/cloud/AWS/VPC AWS Virtual Private Cloud]
  * [wiki:Site/cloud/AWS/VPCManagement VPC 관리 전략]
  * [wiki:Site/cloud/AWS/VPCandDNS VPC에서의 DNS 관리 방안]
  * [wiki:Site/cloud/AWS/ELB AWS Elastic Load Balance 분석]

== 전체 문서들 ==
[[subindex]]
@


1.6
log
@128.134.217.152;;yundream;;
@
text
@a3 1

d13 4
a16 1
== 구조 ==
d21 3
a31 1
== AWS Cloud 아키텍처링 ==
@


1.5
log
@128.134.217.152;;yundream;;
@
text
@d19 8
a26 44
== AWS의 서비스들 ==
=== Compute ===
 * [wiki:Site/cloud/AWS/EC2 Amazon Elastic Compute Cloud (EC2)]
 * Amazon Elastic MapReduce
=== Networking ===
 * [wiki:Site/cloud/AWS/EIP Amazon EIP] : AWS에서 제공하는 Public IP 서비스
 * [wiki:Site/cloud/AWS/ELB ELB - Elastic Load balance] : 로드밸런싱 서비스
 * Amazon Route 53 : 고가용성의 DNS(Domain Name System)
 * Amazon virtual Private Cloud(VPC)
    * [wiki:Site/cloud/AWS/VPC VPC 개요]
    * [wiki:Site/cloud/AWS/VPCManagement VPC 관리 전략]
    * [wiki:Site/cloud/AWS/VPCandDNS VPC에서 DNS 관리 방안]
 * AWS Direct Connect 
=== Content Delivery ===
 * Amazon CloudFront
=== Storage & Content Delivery ===
 * Amazon Simple Storage Service(S3)
 * Amazon Glacier 
 * AWS Storage Gateway
 * Amazon Elastic Block Storage (EBS)
=== Database ===
 * Amazon DynamoDB
 * Amazon ElastiCache 
 * [wiki:Site/cloud/AWS/RDS Amazone Relational Database Service (RDS)]
 * Amazon Redshift
 * Amazon SimpleDB
=== Deployment === 
 * Amazon CloudFormation
 * AWS Elastic Beanstalk
 * AWS OpsWorks
=== Management ===
 * Amazon Identity and Access Management (IAM)
 * Amazon CloudWatch
 * AWS Management console
=== App Services ===
 * Amazon CloudSearch
 * Amazon DevPay
 * Amazon Elastic Transcoder
 * Amazon Flexible Payment Service 
 * Amazon Simple Email Service (SES)
 * Amazon Simple Queue Service (SQS)
 * Amazon Simple Notification Service (SNS)
 * Amazon Simple Workflow (SWF)

d29 1
a29 1
== 문서들 ==
@


1.4
log
@128.134.217.152;;yundream;;
@
text
@d24 2
d62 3
@


1.3
log
@128.134.217.152;;yundream;;
@
text
@d40 1
a40 1
 * [wii:Site/cloud/AWS/RDS Amazone Relational Database Service (RDS)]
@


1.2
log
@128.134.217.152;;yundream;;
@
text
@d40 1
a40 1
 * Amazone Relational Database Service (RDS)
@


1.1
log
@128.134.217.152;;yundream;;
@
text
@d4 1
d6 5
a10 1
아마존을 빼고 클라우드 컴퓨팅을 이야기 할 수 없을 거다. 원래는 전자 상거래 업체로 시작했지만 지금은 클라우드 서비스 업체로 더 알려져 있다. 가장 큰 클라우드 기업이며, 클라우드 기술과 클라우드 시장 모두를 선도하고 있다.
d12 1
a12 1
처음부터 클라우드 컴퓨팅 기술을 아마존이 시작한 건 아니다. HP, Oracle, 마이크로 소프트 등이 오랫동안 클라우드 관련 사업을 해오고 있었다. 아마존이 EC2 베타버전의 서비스를 발표한게 고작해야 2006년, 그 짧은 시간에 아마존이 클라우드 시장을 선도해 버렸다.
d14 2
a15 1
이러다 보니 클라우드 개발을 하기 위해서 아마존 웹 서비스를 먼저 분석해야 하는게 지금 나의 상황이다. 분석은 사용자 입장이 아닌 순전히 개발자 입장에서 진행할 생각이다. 
d17 1
d19 42
a60 1
== 하위 문서들 ==
@
