#title remove(3)
[wiki:function_remove(3) HTML변환문서]
{{{#!plain
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook V4.1//EN">
<chapter lang=ko>
<!-- 작성자 : yundream             -->
<!-- 작성일 : 2005/07/16           -->
<!-- 연락처 : yundream@joinc.co.kr -->

<!-- 함수 이름을 입력합니다 -->
<title>remove(3)</title>

<!-- 이건 함수에 대한 대략적인 설명이구요 -->
<para>
	프로그램 명령행 인자를 파싱한다.
</para>
 
<!-- 여기에 함수의 간단한 사용법이 들어갑니다 -->
<section>
    <title>사용법</title>
    <para>
        <screen>
#include &lt;stdio.h>

int remove(const char *pathname);
        </screen>

    </para>
</section>

<!-- 여기엔 함수의 자세한 설명 이 들어갑니다 -->
<section>
    <title>설명</title>
    <para>
		파일시스템에서 파일을 삭제한다. 이 함수는 내부적으로 unlink(2)와 
		rmdir(2)를 호출한다.
    </para>
    <para>
		만약 삭제하는 파일이 마지막 링크이고 파일을 열고 있는 프로세스가 
		더 이상없다면 파일은 디스크 공간에서 완전히 삭제된다. 
		삭제된 공간은 다른 파일에 의해서 사용이 된다. 
    </para>
    <para>
	 	삭제하고자 하는 파일이 마지막 링크이지만, 파일을 열고 있는 프로세스가 
		있을 경우 해당 프로세스가 파일을 close()할때까지 여전히 남아 있게 된다.  
    </para>
    <para>
		삭제하고자 하는 파일이 symbolic 링크일 경우 링크가 삭제된다.
    </para>
    <para>
		삭제하고자 하는 파일이 socket(12), fifo(12)일경우 파일은 삭제되지만, 
		해당 객체는 여전히 프로세스에 의해서 사용되어진다.
    </para>
</section>

<!-- 함수가 되돌려주는 값이구요 -->
<section>
    <title>반환값</title>
    <para>
		성공할 경우 0을리턴한다. 실패할 경우 -1을 리턴하고 적당한 errno값이 설정된다.
    </para>
</section>

<!-- 에러가 발생했을때 되돌려주는 값들입니다 -->
<section>
    <title>에러</title>
    <para>
        <variablelist>    
            <varlistentry>
            <term>EFAULT</term>    
            <listitem>
                <para>    
				pathname을 가리키는 포인터가 접근가능한 주소영역을 벗어났다.
                </para>    
            </listitem>
            </varlistentry>
            <varlistentry>
            <term>EACCES</term> 
            <listitem>
                <para>    
                부모 디렉토리가 프로세스에게 쓰기 허가권을 허락하지 않았거나, 
                pathname에 있는 디렉토리 중 하나가 찾기 허가권이 없다.
                </para>    
            </listitem>
            </varlistentry>
            <varlistentry>
            <term>ENOENT</term>    
            <listitem>
                <para>    
				pathname을 포함한 디렉토리 혹은 파일이 존재하지 않는다.	
                </para>    
            </listitem>
            </varlistentry>
            <varlistentry>
            <term>ENAMETOOLONG</term>
            <listitem>
                <para>    
                <emphasis>pathname</emphasis>이 너무 길다.
                </para>    
            </listitem>
            </varlistentry>
            <varlistentry>
            <term>ENODIR</term>    
            <listitem>
                <para>    
                <emphasis>pathname</emphasis>에 디렉토리로서 사용한 요소가 
                디렉토리가 아니다.
                </para>    
            </listitem>
            </varlistentry>
            <varlistentry>
            <term>ENOMEM</term>    
            <listitem>
                <para>    
                이용할 수 있는 커널 메모리가 충분하지 않다.
                </para>    
            </listitem>
            </varlistentry>
            <varlistentry>
            <term>EROFS</term>    
            <listitem>
                <para>    
                <emphasis>pathname</emphasis>가 읽기 전용 파일 시스템에 있는
                파일을 가리키고 있다.
                </para>    
            </listitem>
            </varlistentry>
        </variablelist>    
    </para>
</section>

<!-- 마지막으로 에제 입니다                                                 -->
<!-- 여기에는 완전한 예제가 들어가 있는데, 굳이 완전한 예제를 만들필요 없이 -->
<!-- 코드 일부분만 작성해서 올려주셔도 됩니다                               --> 
<!-- "<", ">", "&" 등은 변환해 주셔야 하는데, 귀찮으시면 :-) 변환 하지 않   -->
<!-- 아도 됩니다. 제가 검사 해서 올리겠습니다                               -->
<!-- 예제에 대한 간단한 설명을 적어주셔도 되구요                            -->
<section>
    <title>예제</title>
    <para>
        <screen>
#include &lt;stdio.h>
#include &lt;errno.h>

int main(int argc, char **argv)
{
	int rtv;

	if (argc !=2 )
	{
		printf("Usage : ./remove filename\n");
		exit(0);
	}	
	if(remove(argv[1]) != 0)
	{
		perror("file remove error ");
		return 1;
	}
	return 0;
}

        </screen>
    </para>
</section>
</chapter>
}}}
