head	1.1;
access;
symbols;
locks
	root:1.1; strict;
comment	@# @;


1.1
date	2015.05.26.03.43.45;	author root;	state Exp;
branches;
next	;


desc
@./data/text/man_2f12_2fdocker_2fDockerFile
@


1.1
log
@1.214.223.250;;yundream;;
@
text
@#title DockerFile 레퍼런스

== DockerFile 레퍼런스 ==
'''Dockerfile'''에는 도커이미지를 빌드하기 위한 정보들이 들어 있다. 이 정보들을 이용해서 자동으로 도커 이미지를 만들 수 있다. 

=== 사용 ===
'''docker build''' 다음에 '''Dockerfile'''이 있는 디렉토리 경로를 설정해 주면 된다. 만약 Dockerfile이 현재 작업 디렉토리에 있다면 
{{{#!plain
# docker build ./
}}}

== 형식 ==
Dockerfile의 형식을 살펴보자.
{{{#!plain
# Comment
INSTRUCTION arguments
}}}
Insruction은 대소문자 구분없이 사용할 수 있다. 명령과 옵션의 구분을 더 명확히 하기 위해서 일반적으로 대문자를 사용한다. 

도커는 '''Dockerfile'''을 읽어서  instruction이 지시하는 내용을 실행한다. Dockerfile의 가장 처음에는 반드시 '''FROM'''이 와야 한다. 이 지시어는 새로운 이미지를 만들기 위한 '''Base Image'''를 설정하기 위해서 사용한다. 예를 들어 ubuntu를 베이스 이미지로 하고 싶다면 '''FROM ubuntu'''라고 명시해야 한다. 

'''#'''은 주석이다. 주석 표시된 영역은 해석하지 않고 넘어간다.

=== Envirionment Replacement ===
환경 변수는 '''ENV'''로 설정할 수 있다. 이것은 '''Dockerfile''' 에서 일종의 변수처럼 사용 할 수 있다. ENV로 설정한 변수는 $variable_name이나 ${variable_name}과 같이 사용할 수 있다. 
{{{#!plain
FROM busybox
ENV foo /bar
WORKDIR ${foo}
ADD . $foo
COPY \$foo /quux
}}}
'''Dockerfile'''에서 사용할 수 있는 instruction 들이다.
  * ENV
  * ADD
  * COPY
  * WORKDIR
  * EXPOSE
  * VOLUME
  * USER
=== FROM ===
베이스 이미지를 설정한다.
{{{#!plain
FROM <image>
}}}
혹은
{{{#!plain
FROM <image>:<tag>
}}}

=== MAINTAINER ===
이미지를 만든 사람의 정보를 알려주기 위해서 사용한다.

=== RUN ===
RUN은 두 개의 폼을 가진다.
  * RUN <command> : command는 쉘(/bin/sh -c)로 실행된다. 
  * RUN ["executable", "param1", "param2"] (exec form)
== 참고 ==
  * http://docs.docker.com/reference/builder/ : 원문
@
