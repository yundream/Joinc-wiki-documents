#title 정보처리

== 정보처리 ==
정보수집, 정보검색, 가공, 분류, 분석과 관련된 내용들을 정리해 보려고 한다. 하지만 '''Information Retrival'''연구 과 같은 학구적인 관점에서 접근하지는 않을 것이다. 매우 실용적인 관점에서 접근할 것이며, Joinc의 관리 경험을 살려서 정리해나가볼 생각이다. 

== 지식 정리의 전략 ==
나의 경우 외부에서 정보를 crawl 해와서 일단 쌓아두자는 식으로 접근을 하지 않았다. 내가 원하는 지식을 얻기 위해서 정보를 읽어오고 이것을 나름의 기준에 의해서 다시 정리하는 방법을 선택했다. 예컨데, 신문에서 중요한 부분을 스크랩하는게 아닌 신문을 읽고 자신의 생각을 글로 적고, 그것을 정리하는 방식이다. 

=== 지식 정리가 실패하는 이유 ===
누가나 지식을 정리하려고 한다. 메모하는 방법, 메모한것을 분류하고 정리하는 방법과 노하우를 담고 있는 책들은 어렵지 않게 찾아볼 수 있다. 여기에 웹이 등장하고 wiki(:12)와 blog(:12)와 같은 손쉽게 정보를 저장할 수 있는 툴들이 만들어지자 정보를 수집해서 자신의 것으로 만들고자 하는 사람들도 많아졌다. 정보가 넘쳐나고 정보가 돈이 된다고 믿어지고 있는 지식정보화 사회이다 보니, 때때로 강박증적으로 접근하는 사람들도 보인다.

그러나 막상 제대로 지식을 정리했다고 본사람은 없는 것 같다. 생각컨데, 대략 90% 정도는 시작단계에서 포기하고 8%정도는 제풀에 나가 떨어지고 고작해야 2% 정도만이 나름대로의 지식정리노하우가 녹아든 결과물을 유지하는 것 같다. 

지식 정리를 성공적으로 하기 위한 내 개인적인 노하우는 다음과 같다.

== 일단 시작한다. ==
=== 나를 위해서 만든다. ===
어디까지나 나를 위해서 만든다는 목적에서 시작한다. 방문자가 더 잘 볼 수 있게 해주겠다라는 마음가짐으로 시작하지 않는다. 서비스를 만드는게 아니다. 타인의 시각을 의식하기 시작하면, 시스템이 복잡해 질 수 밖에 없다. 시스템을 만들고 유지보수하다가 볼장 다 볼 수 있다. '''simple is best''' 처음엔 그냥 간단히 시작한다. 다른 사람도 쉽게 볼 수 있도록 하는건 나중에 천천히 시작해도 된다.

=== 잘할려고 하지 말자 ===
제대로 하려고 하면 '''무한대의 공수'''가 들어가는게 정보처리다. 잘할려고 하지 말자. 잘해야지 하고 마음먹으면, 얼마 못가서 포기하게 되어 있다. 일단 내가 보는데 문제 없으면 된다는 마음가짐으로 접근한다. 내용도 마찬가지다.

개발자 공동체는 다른 산업공동체와는 달리 '''풀뿌리 공동체'''적 성격이 강한 측면이 있다. 이런 풀뿌리 공동체에서는 공동체의 구심점이 되어줄 '''아우로라'''를 가진 이른바 '''영웅적인 개발자'''를 중요시 하는 경우가 많다. 그러하다 보니 반대로 자신의 실력이 '''드러나는'''것, 즉 허접한 실력을지닌 혹은 듣보잡 취급 받을지도 모른다는 것에 대한 불안감을 느끼게 된다. 영웅이 있으면 천민도 있는 법 아니겠는가. '''과거의 너가 쓴 잘못된 정보를 담고 있는 허접한 글을 보고 있자니 부끄럽지 않느냐''' 라는 개발자 커뮤니티에서 간혹 볼수 있는 핀잔도 같은 맥락이다.  

이런거에 신경쓰지 마라. 왜 과거 자신의 글을 부끄러워 하는가 ? 자신의 과거를 부정하고 싶은건가 ? 실수나 잘못이 있을 수 있겠지만, 그 실수나 잘못이 누군가에게 명백한 피해를 주기 위한게 아니라면 왜 부끄러워 해야 하나. 그냥 과거에 있었던 사실일 뿐인거다.

=== RDBMS적 시각을 버리자 ===
위의 '''잘할려고 하지 마라'''와 비슷한 맥락의 내용이다. 잘할려고 하고 싶으니 기존의 성공적인 모델을 따르고 싶어진다. 개발자가 보아왔던 성공적인 모델은 RDBMS(:12)에 의한 정보의 관리다. RDBMS는 정보를 초분과화 시키고 원자화 시키고 각각의 원자화된 정보들의 관계를 기술해서, 가능한 모든 경우에 있어서 원하는 정보를 신속하게 제공하겠다는데 그 목적을 두고 만들어 졌다. 

이러한 방식은 입력값과 출력값이 명확하고 책임져야할 데이터의 범위와 깊이를 명확히 알고 있을 때나 가능한 방법이다. 컨테이너벨트로 대표되는 산업시대에나 가능한 방법이지, 인터넷시대에 가능한 방법은 아니다. 이런식으로 정리하다 보면, 거의 반드시 실패한다고 보면 된다. 카테고리를 나누고, 나눈 카테고리를 또다시 나누고, 이쪽 카테고리를 저쪽 카테고리와 병합하고 등등 카테고리를 기획하고 나누고 병합하다가 볼장 다본다.

인터넷세계는 포스트모던한 세계다. 모던한세계, 그러니까 빤듯빤듯하고 모든게 제자리에 놓여져 있고 구획화 되어서 관리될 수 있는 그런 세계가 아니다. 대략적인 세계다. 대략적으로 관리하자.

== 정보관리 툴 ==
정보는 기본적으로 자신이 쉽게 찾을 수 있는 형태로 저장된다고 가정한다. 다른사람은 정보를 찾기가 쉽지 않겠지만 주인장은 대략적인 위치를 알고 있을 것이다. 그러나 그걸로는 역시 부족하다. 인간의 기억은 한계가 있기 때문에 도구의 도움을 받아야 한다. 여기에서는 개인적으로 활용하는 툴들을 중심으로 관리방법을 설명해보려고 한다. 물론 어디까지나 지극히 개인적인 방법이다. 

=== 카테고리 ===
인터넷 정보는 예전에 서류철을 통해서 정보를 관리하듯 세밀하게 분과화해서 관리할 필요가 없다. 쓸데없이 번거로울 뿐이고 제대로 관리할 수도 없다. 그러나 역시 그러하다고 하더라도, 일단계 정도의 카테고리를 가지고 있어주는게 좋다. 이단계를 넘어가지 않도록 한다. 삼단계 이상되면 카테고리를 유지보수하는데 너무 많은 공수가 들어간다. 이 공수는 쓸데없는 공수가 될 확률이 매우 높다.

=== 검색 ===
정보를 찾는데 가장 좋은 방법은 검색엔진(:12)을 활용하는 것이다. 이걸 모르는 사람은 없을 것이다. 문제는 검색엔진을 도입하는게 그리 만만한 일이 아니라는 것이다. 대안으로 DBMS 노가다를 하기도 하지만 매우 비효율적일 뿐더러, 결과도 그리 만족스럽지 못하다. 

다행히 구글:::개인화:::검색(:12)와 같이 개인이 활용할 수 있는 검색자원을 통해서, 이제는 별 어려움없이 검색엔진을 가질 수 있다. 정보를 정리할 때는 카테고리를 활용하고 정보를 찾을 때는 검색엔진을 이용한다. 

=== 태그 ===
