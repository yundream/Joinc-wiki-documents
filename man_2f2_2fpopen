#title linux man page : popen - 프로세스 입출력

{{{#!html
<HTML
><HEAD
><TITLE
><a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=popen">popen</a>(2)</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.64
"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="CHAPTER"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="CHAPTER"
><H1
><A
NAME="AEN1"
>1&#51109;. <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=popen">popen</a>(2)</A
></H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>&#52264;&#47168;</B
></DT
><DT
>1.1&#51208;. <A
HREF="#AEN4"
>사용법</A
></DT
><DT
>1.2&#51208;. <A
HREF="#AEN8"
>설명</A
></DT
><DT
>1.3&#51208;. <A
HREF="#AEN13"
>반환값</A
></DT
><DT
>1.4&#51208;. <A
HREF="#AEN16"
>에러</A
></DT
><DT
>1.5&#51208;. <A
HREF="#AEN20"
>예제</A
></DT
></DL
></DIV
><P
>	프로세스 I/O</P
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN4"
>1.1&#51208;. 사용법</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;stdio.h&#62;

FILE *<a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=popen">popen</a>(const char *command, const char *type);
int <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=pclose">pclose</a>();
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN8"
>1.2&#51208;. 설명</A
></H1
><P
>		popen 은 command 를 shell(:12)을 가동시켜서 열고 pipe(2)로 연결한다. 
		pipe 는 기본적으로 단방향으로만 정의 되어 있음으로, 읽기전용 혹은 
		쓰기전용 으로만 열수 있으며, type 로 정의된다. popen 은 
		command 를 실행시키고 pip 연결을 위해서 내부적으로 <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=fork">fork</a>() 와 <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=pipe">pipe</a>() 
		를 사용한다. 
	</P
><P
>		command 는 실행쉘인 /bin/sh 에 -c 옵션을 사용하여서 전달되게 된다.  
	</P
><P
>		pclose(2) 함수는 종료되는 관련 프로세스를 기다리며 wait(2) 가 반환하는 
		것처럼 명령어의 종료 상태를 반환한다. 
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN13"
>1.3&#51208;. 반환값</A
></H1
><P
>		popen 은 실패할경우 NULL 을 반환한다. pclose 는 종료되는 
		관련 프로세스를 기다리며 명령어의 종료 상태를 반환한다. 
		에러가 발견될경우 -1 을 리턴한다.  
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN16"
>1.4&#51208;. 에러</A
></H1
><P
>		popen 함수는 메모리 할당이 실패한다면, errno 를 설정하지 않는다. <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=
		fork">

		fork</a>()나 <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=pipe">pipe</a>()에서 실패했을경우 적당한 errno 를 설정한다. 		
	</P
><P
>		<a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=pclose">pclose</a>()는 자식의 상태를 얻을수 없을경우 errno 를 ECHILD 로 
		설정한다. 
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN20"
>1.5&#51208;. 예제</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;stdio.h&#62;

#define MAXLINE 256

int <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=main">main</a>()
{
    FILE *fp;
    int state;

    char buff[MAXLINE];
    fp = popen("ls -al", "r");
    if (fp == NULL)
    {
        <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=perror">perror</a>("erro : ");
        <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=exit">exit</a>(0);
    }

    while(fgets(buff, MAXLINE, fp) != NULL)
    {
        printf("%s", buff);
    }

    state = <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=pclose">pclose</a>(fp);
    printf("state is %d&#92;n", state);
}
		</PRE
></TD
></TR
></TABLE
>

	</P
></DIV
></DIV
></BODY
></HTML
>
}}}
