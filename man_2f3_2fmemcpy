#title linux man page : memcpy 메모리영역 복사

{{{#!html
<HTML
><HEAD
><TITLE
><a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=memcpy">memcpy</a>(3)</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.64
"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="CHAPTER"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="CHAPTER"
><H1
><A
NAME="AEN1"
>1&#51109;. <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=memcpy">memcpy</a>(3)</A
></H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>&#52264;&#47168;</B
></DT
><DT
>1.1&#51208;. <A
HREF="#AEN4"
>사용법</A
></DT
><DT
>1.2&#51208;. <A
HREF="#AEN8"
>설명</A
></DT
><DT
>1.3&#51208;. <A
HREF="#AEN11"
>반환값</A
></DT
><DT
>1.4&#51208;. <A
HREF="#AEN14"
>예제</A
></DT
></DL
></DIV
><P
>	메모리 영역 복사</P
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN4"
>1.1&#51208;. 사용법</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;string.h&#62;

void *<a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=memcpy">memcpy</a>(void *dest, const void *src, size_t n);
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN8"
>1.2&#51208;. 설명</A
></H1
><P
>		memcpy 는 메모리 영역 src를 메모리 영역 dest 로 n 바이트 복사한다. 
		메모리 영역은 겹쳐지지 않는다. 만일 메모리 영역을 겹쳐서 사용하길 
		원한다면 <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=memmove">memmove</a>(3)를 사용한다.    
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN11"
>1.3&#51208;. 반환값</A
></H1
><P
>		<a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=memcpy">memcpy</a>() 함수는 포인터 dest 를 반환한다. 
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN14"
>1.4&#51208;. 예제</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;unistd.h&#62;

#include &#60;string.h&#62;

struct mydata
{
    int age;
    int weight; 

    char name[16];
    char juso[80];
};

int <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=main">main</a>()
{
    struct mydata data;
    struct mydata *mdata;
    char f_data[120];
    int my_weight;

    data.age    = 29;
    data.weight = 64;

    <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=strcpy">strcpy</a>(data.name, "yundream"); 
    <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=strcpy">strcpy</a>(data.juso, "seoul korea");

    <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=memset">memset</a>(f_data, 0x00, 120);
    
    // data 구조체를 f_data 로 메모리 복사한다.  
    memcpy(f_data, (void *)&#38;data, <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=sizeof">sizeof</a>(struct mydata));

    mdata = (void *)&#38;f_data; 

    printf("pcopy %d&#92;n", mdata-&#62;age);

    <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=memcpy">memcpy</a>((void *)&#38;my_weight, f_data+4, <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=sizeof">sizeof</a>(int)); 

    printf("%d&#92;n", my_weight);
}
		</PRE
></TD
></TR
></TABLE
>

	</P
></DIV
></DIV
></BODY
></HTML
>
}}}
