#title Ajax Library 붙이기

=== 기본 아이디어 ===
웹 개발 프레임워크를 보아하니, ajax(:12)는 기본으로 지원하는 것 같다. 굉장히 복잡한 기술들이 많은 것 같다. 하지만.. 복잡한걸 사용하지 않기로 했다. 결과를 DOM(:12)이나 JSON(:12)으로 한다던지 하는건 너무 무거워 보인다. 그냥 HTML(:12)결과를 그대로 되돌려줘서 뿌려주면 안되나 ? 싶은 생각에, 일단 HTML을 그대로 뿌려주기로 했다.

어차피 완전히 모듈기반으로 가져갈 것이고, 각각의 모듈이 '''MV'''를 구현하기로 했다면, view 정보를 완전한 HTML로 던지더라도 전혀 문제될게 없다고 생각되기 때문이였다. 어차피 비동기 요청을 받아서, 처리를 해야될 서버 코드도, DMF(:12) 상에서 모듈로 작성될 것이기 때문이다. 이 ajax 서버의 page는 다음과 같은 형식을 가질 것이다.
{{{#!plain
#!ajax push rn912056

[[AjaxModule]]
}}}
'''ajax'''라는 전처리문을 사용했는데, push 방식을 사용할 것인지 아니면, 일반적인 get/post 방식을 사용할 것인지를 모듈에게 알려준다. 만약 push 방식을 사용하겠다면, php(:12)의 header() 함수를 사용해서, 다음과 같이 header type을 정하게 할 것이다. ajax에서 push를 이용한 정보전송방법은 [wiki:Site/Ajax/Document Ajax를 이용한 Server Push] 문서를 참고하기 바란다. 전처리문의 3번째 인자는, boundary 문자열이다. 만약 지정하지 않는다면, hash(:12)를 이용하던지, random()을 이용하던지, 등등해서 만들어내면 될 것이다.
{{{#!plain
 header('Content-type: multipart/x-mixed-replace;boundary="{$this->formatter['boundary']}"); 
}}}

=== 사용할 Ajax Library ===
사용할 Ajax library로는 sajax(:12)를 선택하기로 결정했다. 이유는 매우 간단하고, 매우 가볍기 때문이다. 기능은 여엉 부족할 수도 있겠지만, FULL HTML을 받기로 한 이상 크게 문제될 것 같지도 않기 때문이다.
