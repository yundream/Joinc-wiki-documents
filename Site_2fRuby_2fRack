#title Rack 

== Rack에 대해서  ==
Rack는 WEBrick나 Mongrel 같은 웹 서버와 Rails, Sinatra 같은 웹 프레임워크를 연결해서, 웹 기반의 애플리케이션을 개발하기 위한 최소한의 API를 제공하는 것을 목표로 한다.     

Sinatra같은 웹 프레임워크는 Rack을 내장하고 있는데, 이 Rack를 이용해서 웹 애플리케이션과 웹 서버를 연결할 수 있다. Rack은 WEBrick, Mongrel 등의 웹 서버를 연결하기 위한 '''handler'''를 포함하고 있다. 또한 Sinatra와 Rails등을 연결하기 위한 adapter를 가지고 있다.   

아래는 Rack 애플리케이션의 구조다.

{{{#!html
<img src="https://docs.google.com/drawings/d/1LmE5PMVskAhCEUhJgr9vyaVFQW5gFDiiCoaXH4wr4aU/pub?w=1066&amp;h=190">
}}}

Rack은 Handler를 통해서 웹서버와 연결을 하고, 다른 한편으로는 Adapter를 통해서 웹 프레임워크와 연결을 한다. Handler와 Adapter 사이에는 Middleware가 있어서, 이 둘 사이의 정보교환을 중계한다. Middle는 정보교환을 중계하면서, 동시에 정보를 처리해서 전달할 수도 있다.

Rack가 있는 덕분에 개발자는 Merb, Camping, Sinatra, Ramaze, Mayeric, Halcyon 같은 다양한 종류의 웹 프레임워크와 WEBrick, Mongrel, Thin, Ebb등의 웹 서버와 간단하게 연결할 수 있다. 간단하게 웹 서버와 애플리케이션을 연결하기 위해서 사용했던 CGI의 현대적인 구현체라고 생각하면 되겠다.   

== Rack app 개발 ==

== Rack gem을 이용한 개발 ==

== Middleware 개발 ==
