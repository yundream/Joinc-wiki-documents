head	1.2;
access;
symbols;
locks
	root:1.2; strict;
comment	@# @;


1.2
date	2015.01.31.02.56.09;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2015.01.30.16.08.11;	author root;	state Exp;
branches;
next	;


desc
@./data/text/man_2f12_2fKafka
@


1.2
log
@119.64.102.68;;yundream;;
@
text
@#title Apache Kafka
[[TableOfContents]]
== Apache Kafka ==
=== 왜 ? ===
([[Date(2015-01-30T16:08:11)]])오늘 부터 Kafaka를 공부하려고 한다. 원래 빅데이터쪽에는 그다지 관심을 두고 있지는 않았다. 뜨거운 이슈이긴 했지만, 지금 당장 딱히 써먹을 곳이 없었기 때문이다. 원래, 당장 필요하진 않지만 나중을 위해서 미리 공부하는 스타일이 아니라서, 눈 밖에 있었던 것. 나는 지금 필요 한 것들, 그 필요한 것들과 관련이 있는 것들 위주로 공부하는 스타일이다. 

요즘 IoT 관련 일들을 하고 있다. IoT의 여러 분야 중에서도 센서로 부터 데이터를 읽어서 처리하는 '''IoT 인터넷 인프라''' 시스템 구축을 하고 있다. 센서데이터를 중앙에서 수집한 다음에 다른 소프트웨어 혹은 다른 기기로 보내는 일을 하는 녀석이다. 일종의 메시징 시스템이다. 요녀석을 어느 정도 구축하고 나니, 결국 그 데이터를 수집해서 무얼 할 건데 ? 라는 물음에 다다르게 됐다. 결과적으로 "센서 데이터를 실시간으로 분석하는 솔류션을 개발" 하기로 했다. 

그 첫번째가 카프카(kafka)다. 수집한 데이터를 분석 시스템으로 보내는게 우선일 테니까.

=== Kafka 소개 ===
Apache kafka는 스칼라(scala)로 개발된 Pub/Sub 기반의 오픈소스 메시지 브로커다. 프로젝트는 대량으로 유입되는 데이터를 '''실시간으로 처리''하기 위한 통합된 메시지 플랫폼을 제공하는 것을 목표로 한다.   

'''속도''', '''확장성''', '''Durable'''이 가장 큰 특징이다. 
  * Fast : 하나의 카프카 브로커를 이용해서 수천대의 클라이언트로 부터 발생하는 초당 수백메가 바이트 이상의 데이터를 읽고, 쓸 수 있다.  
  * 확장성 : 카프카는 여러 개의 클러스터를 모아서 하나의 거대한 데이터 백본을 만들 수 있다. 이런 구조는 서비스의 중단 없이 확장할 수 있도록 하고 있다. 데이터 스트림은 클러스터의 노드에 파티셔닝/분할 되어서 흐른다. 이들 클러스터의 노드들이 서로 협력함으로써, 하나의 노드에서는 처리할 수 없었던 거대한 데이터를 처리할 수 있다.
  * Durable : 메시지는 디스크에 저장되며 복제된다. 각 브로커는 분실 염려 없이 테라바이트의 메시지를 처리할 수 있다.

== 할 것들 ==
아래 순서대로
=== 카프카 스터디 ===
카프카를 설치하고, 운용하기 위한 방법을 살펴본다. 이것 부터 하자.

=== 센서 정보와의 통합 ===
IoT 인터넷 플랫폼은 MQTT를 이용해서 센서 정보를 수집한다. 수집한 정보는 카프카를 이용해서 실시간 처리 엔진으로 보낸다. IoT 인터넷 인프라와 어떻게 통합해야 할지를 주로 살펴본다.

=== 실시간 처리 시스템과의 통합 ===
Storm 혹은 spark등 실시간 처리 시스템과의 통합을 살펴본다. 

=== 룰 기반 추천 시스템 ===
우선은 비교적 단순한? 룰 기반의 추천 시스템을 설계한다.
  1. 실시간으로 수집한 정보를 추천 엔진에 돌려서 유의미한 추천을 만든다.
  1. 대량의 데이터를 실시간으로 처리하기 위한 아키텍처를 고민한다. 아마 람다 아키텍처를 응용하지 않을까 싶다. 

=== 머신러닝 ===
이건 내가 경험이 없어서 모르겠다. 카프카 스터디, 센서 정보 및 실시간 처리 시스템과의 통합 작업을 하면서 슬슬 고민을 해봐야 겠다.
@


1.1
log
@119.64.102.68;;yundream;;
@
text
@d2 1
a2 1

d17 17
a33 1
  * Durable : 메시지는 디스크에 저장되며 복제된다. 각 브로커는 분실 염려 없이 테러바이트의 메시지를 처리할 수 있다.
d35 2
@
