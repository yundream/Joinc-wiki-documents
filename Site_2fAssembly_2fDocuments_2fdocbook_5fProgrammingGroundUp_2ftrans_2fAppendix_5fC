Describe Site/Assembly/Documents/docbook_ProgrammingGroundUp/trans/Appendix_C here

= Appendix C. 중요 시스템 콜 =

리눅스에서 필요한 중요 시스템 콜들을 소개한다. 시스템 콜은 최대한 단순하게 디자인되었고(역자: 전통적인 유닉스의 철학이 단순함이지요) 
라이브러리 함수들은 프로그래밍을 돕기 위해 만들어진 것이므로
시스템 콜을 직접 사용하는 것보다 라이브러리를 사용하는 것이 대부분 더 좋을 것이다.
리눅스가 제공하는 C 라이브러리에 대해서는 http://www.gnu.org/software/libc/manual/ 에 있는 메뉴얼을 보도록 한다.

%eax에 시스템 콜의 번호를 넘기면 시스템 콜의 반환 값이나 에러 코드가 저장된다는 것을 기억하자.

Table C-1. 주요 리눅스 시스템 콜

|| %eax |||| 이름      |||| %bx         ||||       %ecx          |||| %edx         |||| 설명                        ||
|| 1    |||| exit      |||| 반환값 (int)||||                     ||||              |||| 프로그램을 끝낸다.               ||
|| 3    |||| read      |||| 파일 디스크립터  |||| 버퍼 주소     |||| 버퍼 크기 (int) |||| 주어진 버퍼로 읽어온다.             ||
|| 4    |||| write     |||| 파일 디스크립터  |||| 버퍼 주소      |||| 버퍼 크기(int)   |||| 파일에 버퍼의 내용을 쓴다              ||
|| 5    |||| open      |||| 널문자로 끝나는 파일 이름|||| 오션 리스트         |||| 권한 모드   |||| 지정된 파일 열기. 파일 디스크립터나 에러 코드를 반환한다 ||
|| 6    |||| close     |||| 파일 디스크립터    ||||                     ||||              |||| 지정된 파일 디스크립터를 닫는다.          ||
|| 12   |||| chdir     |||| 널 문자로 끝나는 디렉토리 이름 ||||                     ||||              |||| 프로그램의 실행되고 있는 현재 디렉토리를 바꾼다.                            ||
|| 19   |||| lseek     |||| 파일 디스크립터    |||| 오프셋              |||| 모드           |||| 열려있는 파일의 오프셋을 바꾼다. 모드에 0을 지정하면 상대 위치, 1을 지정하면 절대 위치를 지정할 수 있다.   ||
|| 20   |||| getpid    ||||                    ||||                     ||||              |||| 현재 프로세서의 프로세스 ID를 반환한다.     ||
|| 39   |||| mkdir     |||| 널 문자로 끝나는 디렉토리 이름  |||| 권한 모드               ||||              |||| 지정된 디렉토리를 만든다. 상위 디렉토리들이 모두 존재한다고 가정한다. ||
|| 40   |||| rmdir     |||| 널 문자로 끝나는 디렉토리 이름  ||||                     ||||              |||| 지정된 디렉토리를 지운다.              ||
|| 41   |||| dup       |||| 파일 디스크립터           ||||                     ||||              |||| 이미 존재하는 디스크립터와 동일한 디스크립터를 만든다. ||
|| 42   |||| pipe      |||| 파이프 배열             ||||                     ||||              |||| 두개의 파일 디스크립터를 만들어서 하나의 프로세스가 데이터를 뜨고 다른 하나가 읽을 수 있도록 한다. %ebx는 파일 디스크립터가 저장될 2개의 16비트로 된 배열의 포인터이다.     ||
|| 45   |||| brk       |||| 데이터 섹션의 크기 변경      ||||                     ||||              |||| 데이터 섹션의 한계 (System Break)를 변경한다. 인자로 0을 지정하면 현재 상태를 반환한다.       ||
|| 54   |||| ioctl     |||| 파일 디스크립터    |||| 요청 코드           |||| 전달할 인자  |||| 디바이스 파일에 인자를 전달하는데 사용된다. 인자로 지정한 파일이나 장치에 따라 사용법이 달라진다.   ||

더 정확하고 자세한 리스트를 원한다면 http://www.lxhp.in-berlin.de/lhpsyscal.html 를 확인한다.
유닉스 메뉴얼의 섹션 2에는 시스템 콜에 대한 정보가 저장되어 있으므로 'man 2 시스템콜이름' 명령어를 사용하면 
각 시스템 콜에 대한 정보를 얻을 수 있다.
하지만 이 정보들은 C 언어에서 시스템 콜을 사용하는 방법을 알려주므로 때로는 도움이 안될 수도 있다.
시스템 콜이 리눅스에서 어떻게 구현되었는지를 알고 싶을 때는 Linux Kernel 2.4 Internals 책에서
http://www.faqs.org/docs/kernel_2_4/lki-2.html#ss2.11 섹션을 찾아보도록 한다.
