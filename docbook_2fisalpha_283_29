#title linux man page : isalpha

[wiki:man/3/isalpha HTML 변환문서]

{{{#!plain
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook V4.1//EN">
<chapter lang=ko>
<!-- 작성자 : yundream             -->
<!-- 작성일 : 2004/06/02           -->
<!-- 연락처 : yundream@joinc.co.kr -->

<!-- 함수 이름을 입력합니다 -->
<title>isalpha(3)</title>

<!-- 이건 함수에 대한 대략적인 설명이구요 -->
<para>
	문자의 종류 판독
</para>
 
<!-- 여기에 함수의 간단한 사용법이 들어갑니다 -->
<section>
	<title>사용법</title>
	<para>
		<screen>
#include &lt;ctype.h&gt;

int isalnum(int c);
int isalpha(int c);
int isascii(int c);
int isblank(int c);
int iscntrl(int c);
int isdigit(int c);
int isgraph(int c);
int islower(int c);
int isprint(int c);
int ispunct(int c);
int isspace(int c);
int isupper(int c);
int isxdigit(int c);
		</screen>
	</para>
</section>

<!-- 여기엔 함수의 자세한 설명 이 들어갑니다 -->
<section>
	<title>설명</title>
	<para>
		이 함수들은 문자<emphasis>c</emphasis>에 대해서 어떤 영역에 포함되는지를
		확인한다.
	</para>
	<para>
		<variablelist>
			<varlistentry>
			<term>isalnum</term>	
			<listitem>
				<para>	
				알파벳숫자임을 체크한다. 이것은 isalpha(c) || isdigit(c)와 동일하다. 
				</para>	
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>isalpha</term>
			<listitem>
				<para>	
				알파벳임을 확인한다. isupper(c) || islower(c)로 같은일을 할 수 있다. 
				</para>	
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>isascii</term>
			<listitem>
				<para>	
				주어진 문자 <emphasis>c</emphasis> ASCII 문자셋에 포함되는 7-bit 
				unsigned char 인지를 확인한다.
				</para>	
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>isblank</term>
			<listitem>
				<para>	
				공백문자인지를 확인한다. 공백문자는 스패이스, 탭이 포함된다.
				</para>	
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>isdigit</term>
			<listitem>
				<para>	
				0에서 9까지의 숫자인지를 확인한다. 
				</para>	
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>isgraph</term>
			<listitem>
				<para>	
				출력가능한(printable)문자인지를 확인한다. 스페이스는 제외된다.
				</para>	
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>islower</term>
			<listitem>
				<para>	
				소문자인지 검사한다.
				</para>	
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>islower</term>
			<listitem>
				<para>	
				소문자인지 검사한다.
				</para>	
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>isprint</term>
			<listitem>
				<para>	
				출력가능한 문자인지 검사한다. 스페이스 문자 까지 포함한다.
				</para>	
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>isspace</term>
			<listitem>
				<para>	
				공백문자들을 검사한다. form-feed ('\f'), newline ('\n'), 
				carriage return ('\r'), horizontal tab ('\t'), vertiacal ('\v')
				를 포함한다.
				</para>	
			</listitem>
			</varlistentry>
			<varlistentry>
			<term>isxdigit</term>
			<listitem>
				<para>	
				16진수 를 표한할 수 있는 문자인지 확인한다. 
				<emphasis>0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F</emphasis>
				</para>	
			</listitem>
			</varlistentry>
		</variablelist>
	</para>
</section>

<section>
	<title>반환값</title>
	<para>
	검사 항목을 만족하는 문자라면 0이 아닌 숫자를 그렇지 않다면 0을 리턴한다.	
	</para>
</section>

<!-- 마지막으로 에제 입니다                                                 -->
<!-- 여기에는 완전한 예제가 들어가 있는데, 굳이 완전한 예제를 만들필요 없이 -->
<!-- 코드 일부분만 작성해서 올려주셔도 됩니다                               --> 
<!-- "<", ">", "&" 등은 변환해 주셔야 하는데, 귀찮으시면 :-) 변환 하지 않   -->
<!-- 아도 됩니다. 제가 검사 해서 올리겠습니다                               -->
<!-- 예제에 대한 간단한 설명을 적어주셔도 되구요                            -->
<section>
	<title>예제</title>
	<para>
		<screen>
#include &lt;ctype.h&gt;
#include &lt;stdio.h&gt;

int main(int argc, char **argv)
{
    char buff[256];
    int i;

    fgets(buff, 255, stdin);


    for(i = 0; i &lt; strlen(buff); i++)
    {
        if (islower(buff[i]))
            buff[i] = (int)buff[i] - 32;
    }
    printf ("%s\n", buff);
}
		</screen>
	</para>
</section>
<section>
	<title>참고문헌</title>
	<para>
		<orderedlist>
		<listitem>
		<para>
		<ulink url="http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_ctype.h를_이용한_문자다루기">ctype 함수를 이용한 문자 다루기</ulink>
		</para>
		</listitem>
		</orderedlist>
	</para>
</section>
</chapter>
}}}
