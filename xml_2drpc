XML-RPC for C, C++ 사이트입니다. 참고하시길.

http://xmlrpc-c.sourceforge.net/

=== 소개 ===
xml-rpc와 QT를 이용해서 함수를 검색하는 프로그램을 작성한다. 함수쏘쓰는 joinc의 [wiki:function_list 함수사전]에 있는 데이터를 이용하도록 한다. 

==== 일반 구조 ====
xml-rpc를 이용해서 데이터를 요청하고 이에대해서 응답하도록 한다. 요청과 요청결과에 대한 랜더링 화면은 QT를 이용해서 만들도록 하며, 클라이언트가 된다. 서버측은 perl의 xml-rpc 패키지를 이용해서 stand along 방식으로 작성하도록 한다. 

클라이언트와 서버를 작성하면서 xml-rpc응용력과 QT애플리케이션 제작방법을 익히도록 한다.

=== 사전 조사 ===
프로젝트의 진행을 원할히 하기 위한 사전조사로 xml-rpc에 대해서 조사하도록 한다. qt에 대해서는 [wiki:Site_QT QT 미니사이트]를 통해서 이용기본적인 조사가 이루어진 상태임으로 조사에서 제외하도록 한다. 필요하다면 QT 미니 사이트의 내용을 보강하도록 한다. 

=== xml-rpc ===
xml-rpc에 대한 일반적인 내용은 [http://wiki.kldp.org/HOWTO//html/XML-RPC-HOWTO xml-rpc-howto]를 참고하도록 한다. 여기에서는 위 문서를 활용한 테스트와 구현에 무게중심을 두도록 한다. 

==== Perl xml-rpc 모듈 설치 ====
서버는 perl을 이용해서 작성하기로 했다. 우선은 xml-rpc를 지원할 수 있도록 필요한 모듈들을 설치해야 한다. 필요한 모듈은 Frontier-RPC와 Frontier-Daemon-Forking로 [http://www.cpan.org CPAN]에서 다운 받을 수 있다. 

==== C프로그래밍을 위한 xml-rpc 라이브러리 ====
C응용을 위해서 다음의 패키지들이 준비되어 있는지 확인하도록 한다. 여기에서는 fedora 9.0을 기준으로 한다.
 1. xmlrpc-c-0.9.9-1.i386.rpm
 1. w3c-libwww-5.2.8-4.i386.rpm
 1. xmlrpc-c-apps-0.9.9-1.i386.rpm
 1. xmlrpc-c-devel-0.9.9-1.i386.rpm

=== 간단한 xml-rpc 서버/클라이언트 ===
howto 문서의 예제를 이용해서 서버/클라이언트 테스트를 해보았다.
==== xml-rpc 서버 ====
{{{#!plain
#!/usr/bin/perl
use Frontier::Daemon;

sub sumAndDifference
{
    my($x, $y) = @_;
    return {'sum' => $x + $y, 'difference' => $x - $y};
}

$methods = {'sample.sumAndDifference' => \&sumAndDifference};
Frontier::Daemon->new(LocalPort => 8080, methods => $methods)
    or die "Couldn't start HTTP server: $!";
}}}

==== xml-rpc 클라이언트 ====
{{{#!plain
#include <stdio.h>
#include <xmlrpc.h>
#include <xmlrpc_client.h>


#define NAME    "XML-RPC Client"
#define VERSION "0.1"

void die_if_fault_occurred(xmlrpc_env *env)
{
    if(env->fault_occurred)
    {
        fprintf(stderr, "XML-RPC Fault: %s (%d)\n",
                env->fault_string, env->fault_code);
        exit(1);
    }
}

int main()
{
    xmlrpc_env env;
    xmlrpc_value *result;
    xmlrpc_int32 sum, difference;

    xmlrpc_client_init(XMLRPC_CLIENT_NO_FLAGS, NAME, VERSION);
    xmlrpc_env_init(&env);

    result = xmlrpc_client_call(&env, "http://localhost:8080/RPC2",
                                "sample.sumAndDifference", "(ii)",
                                (xmlrpc_int32) 5,
                                (xmlrpc_int32) 3);
    die_if_fault_occurred(&env);
    xmlrpc_parse_value(&env, result, "{s:i,s:i,*}",
                        "sum", &sum,
                        "difference", &difference);
    die_if_fault_occurred(&env);

    printf("Sum: %d, Diff: %d\n", (int)sum, (int)difference);

    xmlrpc_DECREF(result);

    xmlrpc_env_clean(&env);
    xmlrpc_client_cleanup();
    return 0;
}
}}}
