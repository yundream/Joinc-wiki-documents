[[TableOfContents]]

== 멍 ==

안녕하세요 :)

요샌 많이 놀아서 강좌를 못올렸다. ㅠ_ㅠ 앞으로 열심히 올려야지... '''(2004-11-02)'''

== 개인 신상 ==

|| 이름	|| 윤명욱 ||
|| 하는 일 || 추상화된 개체를 실체화(구체화)하는 작업 ||
|| 취미	|| 영화[[br]] 채팅[[br]] 컴퓨터[[br]] 축구[[br]] 공상 ||
|| 특기	|| 모가 있을까?? ||
|| 관심분야       || system sw and core api[[br]] programming language[[br]] compiler/interpreter[[br]]kernel/device driver[[br]] embedded software[[br]] robot ||
|| 앞으로의 계획	|| 강좌[[br]] 오픈소스 프로젝트 진행[[br]] ||
|| 읽은 책 || 프로젝트 데드라인[[br]]  ||
|| 최근 읽고 있는 책 || DeBUGGING C++[[br]] ATL Com Programming[[br]]  Understanding COM+[[br]] 리눅스 디바이스 드라이버(2.2.x 번역본): X ||
|| 오픈소스 프로젝트 || SQLite DBMS ||

== 프로젝트 ==

=== 대학 재학시 ===
  1. C/S용 기업업무 자동화 시스템 개발
    1. TChart 활용하여 그래프 출력, GDI를 핸들링하여 다양한 보고서 양식을 직접 만들어 출력
  1. 다수 잡다한 프로그램 개발

=== 프리랜서 ===
  1. 대여폰 통합관리 프로그램 개발
    1. QuickReport(리포팅 툴)를 활용하여 다양한 보고서 양식 출력
  1. 1:1 전화 미팅 서비스 개발
    1. Dialogic 음성보드를 이용하여 CTI 응용 서비스 개발
    1. 1:1 전화 미팅
    1. DB 연동하여 전화 요금 처리
    1. Vox 재생 및 레코딩
  1. 녹취 시스템 개발
    1. 서버
      1. Dialogic 음성보드를 이용하여 CTI 응용 서비스 개발
      1. 관리자/상담자 클라이언트가 요청한 작업을 쓰레드 단위로 처리
      1.  전화 걸기/끊기
      1. DB에 접속하여 상담내용 저장
      1. 통화내용을 녹음파일로 저장
      1. 부하를 줄이기 위해 요청한 작업에 대해 쓰레드 생성하여 처리하고 소멸되는 방식으로 동작
    1. 클라이언트: 관리자/상담자 버전
      1. 사용하기 편리한 GUI 환경지원
      1. 전화 서버와 소켓 통신하여 전화 걸기/끊기 작업 요청
      1. 상담현황 및 통계 출력
      1. 인증 기능

=== 실 무 ===

  1. 리눅스 시스템/네트워크 프로그래밍
    1. IMS 메일 서버 개발
    1. 팸메신저 서버 개발
    1. nport 서버 개발
    1. DivX Player(Multimedia System) 개발
      1. 테스트한 레퍼런스 보드 : VIA EPIA mini-ITX, Wisembed, Transmeta
        1. Wisembed : Sigma Design 사의 Realmagic 디코더칩을 이용한 플레이어 개발 전용 보드, DVD Loader와 연결할 수 있음
        1. Transmeta : Transmeta에서 개발한 x86 기반의 크루소 cpu를 탑재한 멀티미디어 장비 및 	서브 노트북 등 다양한 장비 개발용 보드
      1. 리눅스 커널 최적화 컴파일 및 설치
      1. 디바이스 드라이버 최적화
      1. 소프트웨어 최적화 : X 서버, mplayer, Video driver, alsa(Sound Driver)
      1. mplayer및 alsa 소스 분석을 통한 스프트웨어 최적화 기법 연구

    1. Software AP를 이용한 무선랜 시스템 구축
      1. hostap driver를 수정하여 웹리다이렉트 및 자동 IP 할당을 위해 DHCP 패킷 포워딩를 구현함
      1. hostad를 수정하여 로그인/로그오프시 인증 정보를 관리데몬에 전송하는 루틴을 구현함

  1. 윈도우 어플리케이션 개발
    1. SecureGS : Station용 무선랜 접속 유틸리티 개발 
      1. EAP-MD5, EAP-TLS 지원
      1. ETRI 버전의 프로토타입을 winpcap을 이용해서 포팅 
      1. x-supplicant를 winpcap을 이용해서 윈도우 2000/XP으로 포팅 
      1. 윈도우 2000/XP 버전을 윈도우 CE 버전(Pocket PC)으로 포팅
      1. DHCP 기능 구현

  1. 임베디드 리눅스
    1. 스터디 및 실습
      1. 크로스 개발환경 구축 
      1. 리눅스 커널 및 디바이스 드라이버 개발 과정 이해
      1. microwindows와 터치스크린 드라이버 연동 : microwindows driver 소스 수정 및
     hyper104 개발 보드에 포팅하여 테스트
    1. 프로젝트 : SecureBox 개발
      1. 개발목표 : DHCP, NAT, FIREWALL 등을 사용자 인터페이스를 통해서 제어하는 qt 애플리케이션 개발
      1. 개발내용
         1. hyper104 개발 보드에 포팅된 ads7843 터치 스크린 드라이버와 연동되게 qt 임베디드 라이브러리 소스 수정
         1. 네트워크 장비 IP 설정 툴 및 dhcp 서버 설정 툴 개발
         1. 최종적으로 usr 파일 시스템에 개발한 프로그램 복사하여 파일 시스템 재구성,
         1. hyper104 개발 보드에서 다운받아 flash에 기록, 재부팅하여 테스트
  
== 보유기술 ==

 1. 프로그래밍 언어/툴
   1. 윈도우: Delphi, C++Builder, VB, VC++, eMbedded Visual Tool
   1. 리눅스: GCC, TMAKE, QT/GTK, BASH
   1. 패킷 분석툴: Sniffer(상용), Ethereal(공개)
   1. 언어: Fortran, Cobol, C/C++, Basic, Pascal, Assembly, ...
    * 인터프리터보다 컴파일러가 더 좋음!!

 1. 사용 OS
   1. 도스
      MS-DOS
   1. 윈도우
      95/98/ME/NT/2000/XP/2003
   1. 유닉스-like
     1. 리눅스: 래드햇, 슬랙웨어, 젠투
     1. 솔라리스
   1. 기타

 1. DBMS
   1. 공개: MySQL, PostgreSQL
   1. 상용: MS-SQL, Oracle

 1. 문서화
   1. MS-Office

 1. 기타
   1. 서버관리
      1. DNS/WEB(윈도우), Firewall(윈도우), Mail(솔라리스), File(솔라리스)
      1. 기존 윈도우 Exchange Server에서 솔라리스 기반의 XMail 서버로 이전 작업 
      1. E-Mail 계정 관리, IP 관리, 파일 서버 계정 관리
   1. 서버 SW
      1. Firewall : 화랑
      1. Mail : XMail  
      1. File : Samba

== 앞으로 발전시킬 기술 ==
  1. English
  1. Windows Programing: System, Network, COM
  1. Embedded Linux/Device Driver: X
  1. C++/UML/OOAD
  1. Software Engineering
      * 할 것은 많고 귀찮음만 늘어나구... ㅠ.ㅡ

'''강좌가 계속 밀어지고 있습니다.''' 
'''힘들면 내년까지 해서 여유있게 올려야겠네요 ^^;; 헤헤'''
  
== 2004년 강좌 계획 ==

'''4월'''
  1. 네트워크 계산기 예제 작성 => article_datastructure 업데이트 '''(2004-11-02 완료)'''

'''11월'''
 1. Qt를 이용한 간단한 네턱 설정툴 개발 강좌('''미정''')
 1. VC/VB/Delphi에서 모듈(소스코드) 붙이기
   1. VC: 리소스 편집, c, cpp 붙이기
   1. VB: frm, bas 붙이기, 참조 방식
   1. Delphi: dfm, pas 붙이기, use 구문 활용, 참조 방식

{{{#!plain
	예제)
	- 코드의 확장: 소스 코드 > 프로시저, 함수 > 모듈, 유닛 > 라이브러리 > SDK
	- 분할 컴파일 <- 추가해서 올리기
	- 모듈(소스 화일) 끼리의 변수, 함수 참조 방식 <- 추가해서 올리기
	- 각 언어별 프로시저와 함수의 선언/정의(바디)와 활용 
}}}

 1. VC/VB/Delphi를 이용한 정적/동적 라이브러리 개발 및 활용
   1. 정적 라이브러리
   1. 공유&동적 라이브러리
   1. 윈도우 없는 코드기반 dll => sqlite, VC로 만들어서 VB나 Delphi에서 활용
   1. 윈도우기반 dll => 스플래쉬 윈도우

{{{#!plain
	예제)
	- 스플래쉬 윈도우
	- sqlite 
}}}

 1. 범용 라이브러리 제작시 주위할 점

== 2005년 강좌 계획 ==

'''1월'''
  1. DivX Player 개발 강좌
     * 하드웨어(보드): VIA EPIA mini-ITX

'''2월'''
  1. 무선랜 Software AP 개발 강좌
     * DHCP 기능 추가: DHCP Server
     * IP 공유 기능 추가: IP forward
     * 파일 서버 기능 추가: Samba

'''3월'''
  1. 무선랜 보안 강좌
     * 무선랜 보안
     * 인증 서버 구축
     * Software AP 환경에서 인증 테스트
  
'''4월'''
  1. 무선랜 인증 프로그램을 윈도우용으로 포팅
     * 포팅 계획
     * 네트워크 라이브러리 개발
     * Packet Capture Library
     * UI 디자인
     * 인증 프로그램 개발
     * 테스트
  
'''5월'''
  1. gui : gtk, qt, wxwindows, ... 
  1. 크로스 플랫폼 GUI 라이브러리 선택
  1. 실행파일 크기
  1.  메모리 차지 
    라이브러리 개수 
    개발환경 및 지원
    개발자의 성향이나 인기도

'''6월'''
  1. 크로스 플랫폼 개발 환경
  1. cygwin, mingw, gcc, eclipse, ...

'''7월'''
   1. 리눅스 어플리케이션 윈도우로 포팅하기
   1. 윈도우 어플리케이션 리눅스로 포팅하기
   
'''8월'''
  1. 야구게임 C/S 개발
     * C/S 모두 CUI 기반
     * GCC를 이용해 리눅스 환경에서 개발
     * 프로토콜 정의
     * 네트워크 라이브러리 개발
     * C/S 개발
     * 테스트
     
'''9월'''
  1. 윈도우용 야구게임 클라이언트 개발
     * 개발 언어/툴: Delphi => 차후에 리눅스용 완성하면 Gtk 윈도우 라이브러리를 이용해서 포팅한다.
     * 포팅 계획
     * UI 디자인
     * 네트워크 라이브러리 개발
     * 클라이언트 모듈 개발
     * 클라이언트 개발
     * 테스트

'''10월'''
  1. 리눅스용  야구게임 클라이언트 개발
     * 사용 GUI 라이브러리: Gtk(Qt에서 바꿈)
     * 개발 언어: GCC
     * UI 디자인 
     * 클라이언트 모듈 개발
     * 클라이언트 개발
     * 테스트
     
'''11월'''
   1. 패키징 : deb, rpm, tar.gz, ebuild
   1. 문서화 및 배포
   1. 라이센스

== 강좌 목록 ==

=== 기초 ===
 *[http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_programming_term 알고 싶은 프로그래밍 세계]
 *[http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_pointer 여러가지 포인터 예제]
 *[http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_pointer2 포인터 이야기] 
 *[http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_datastructure 자료구조]
 *[http://www.joinc.co.kr/modules/moniwiki/wiki.php/pthread%20%BF%B9%C1%A61 Posix Thread Example]
 *[http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_oop OOP (Object-Oriented Programming) 개론]
 *[http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_oosw 객체지향를 지원하는 여러 가지 소프트웨어들!!]

=== 활용 === 
 *[http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_calculator 다양한 계산기 예제]
 *[http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_network_calc 계산기&채팅 C/S 프로그램]
 
=== 윈도우 ===
 *[http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_ddk Microsoft Windows 2000 Driver Development Kit]
 *[http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_openssl_windows Windows 환경에서 ?OpenSSL 활용]
 *[http://www.joinc.co.kr/modules/moniwiki/wiki.php/blackbox_window Blackbox for Windows]
 *[http://www.joinc.co.kr/modules/moniwiki/wiki.php/C%2B%2BBuilder C++Builder]
 
=== SQLite ===
 *[http://www.joinc.co.kr/modules/moniwiki/wiki.php/SQLIte%20Architecture The Architecture Of SQLite]
 *[http://www.joinc.co.kr/modules/moniwiki/wiki.php/SQLite%20console%20program%20%BA%D0%BC%AE SQLite console program 분석]
 *[http://www.joinc.co.kr/modules/moniwiki/wiki.php/SQLite%20Windows SQLite Windows]
 
=== 프로젝트 데드라인 요약정리 ===
 *[http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_project_deadlilne 프로젝트 데드라인 1장]
 *[http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_project_deadline_2 프로젝트 데드라인 2장]
 *[http://www.joinc.co.kr/modules/moniwiki/wiki.php/article_project_deadline_3 프로젝트 데드라인 3장]
 
