#title link - 파일에 대한 새로운 이름을 만든다.

{{{#!html
<HTML
><HEAD
><TITLE
>link(2)</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.59"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="CHAPTER"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="CHAPTER"
><H1
><A
NAME="AEN1"
>1&#51109;. link(2)</A
></H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>&#52264;&#47168;</B
></DT
><DT
>1.1&#51208;. <A
HREF="#AEN4"
>사용법</A
></DT
><DT
>1.2&#51208;. <A
HREF="#AEN8"
>설명</A
></DT
><DT
>1.3&#51208;. <A
HREF="#AEN13"
>반환값</A
></DT
><DT
>1.4&#51208;. <A
HREF="#AEN16"
>에러</A
></DT
><DT
>1.5&#51208;. <A
HREF="#AEN44"
>예제</A
></DT
></DL
></DIV
><P
>파일(:12)에 대한 새로운 이름을 만든다. </P
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN4"
>1.1&#51208;. 사용법</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;unistd.h&#62;

int <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=link">link</a>(const char *oldpath, const char *newpath);
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN8"
>1.2&#51208;. 설명</A
></H1
><P
>		link는 oldpath 로 존재하는 파일에 대해서 새로운 연결 - 보통 
		하드링크(:12) 라고 한다 -을 만든다. 
	</P
><P
>		만약 newpath 가 이지 존재하고 있다면, 덮어쓰지 않는다. 
	</P
><P
>		이것은 copy(:12) 와는 다르다. 2개의 파일은 같은 inode(:12) 로 서로 연결되어 
		있다. 그러므로 link 는 서로 다른 장치(:12)들 사이에는 사용이 불가능하다. 
		서로 다른장치(파일시스템) 사이를 연결하려면 <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=symlink">symlink</a>(2) 를 사용해야 
		한다.  
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN13"
>1.3&#51208;. 반환값</A
></H1
><P
>		성공할경우 0을 실패했을경우에는 -1을 반환하며, 적당한 errno(:12) 값을 
		설정한다. 
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN16"
>1.4&#51208;. 에러</A
></H1
><P
>		<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>EXDEV</DT
><DD
><P
>	
					oldpath 와 newpath가 같은 파일시스템(:12)에 있지 않을경우, 
					oldpath 와 newpath는 같은 파일시스템(:12)에 있어야 한다.  
				</P
></DD
><DT
>EPERM</DT
><DD
><P
>					oldpath 와 newpath를 포함하는 파일시스템은 하드링크 
					생성을 지원하지 않는다. 
				</P
></DD
><DT
>EACCESS</DT
><DD
><P
>					newpath를 포함하는 디렉토리(:12)에 대한 쓰기 권한이 없다.
					혹은 newpath 의 디렉토리 구성요소중 어느 하나에 대해서 
					실행 허가권을 가지고 있지 않을경우	
				</P
></DD
><DT
>ENOENT</DT
><DD
><P
>					oldpath 혹은 newpath 에 있는 디렉토리 구성요소가 
					존재하지 않을경우
				</P
></DD
><DT
>EROFS</DT
><DD
><P
>					일기전용 파일시스템일경우
				</P
></DD
><DT
>EEXIST</DT
><DD
><P
>					newpath 가 이미 존재할때
				</P
></DD
></DL
></DIV
>	
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN44"
>1.5&#51208;. 예제</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;unistd.h&#62;

#include &#60;string.h&#62;
#include &#60;stdio.h&#62;

int main(int argc, char **argv)
{
	if ( argc != 3)
	{
		printf ("Usage: ./link [원본파일] [복사파일]&#92;n");
		return -1;
	}	

	if(access(argv[1], F_OK) != 0)	
	{
		printf("원본파일이 없습니다&#92;n");
		return -1;
	}

	if( access(:12) (argv[2], F_OK) == 0)
	{
		printf("이미파일이 존재합니다&#92;n");
		return -1;
	}

	if (link (argv[1], argv[2]) == -1)
       {
		perror("link error ");
       }
}
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
></DIV
></BODY
></HTML
>
}}}
