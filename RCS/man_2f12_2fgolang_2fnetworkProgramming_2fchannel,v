head	1.2;
access;
symbols;
locks
	root:1.2; strict;
comment	@# @;


1.2
date	2014.12.22.15.32.54;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2014.11.09.14.56.04;	author root;	state Exp;
branches;
next	;


desc
@./data/text/man_2f12_2fgolang_2fnetworkProgramming_2fchannel
@


1.2
log
@119.64.102.68;;yundream;;
@
text
@#title Network channels

== 소개 ==
netchan은 go1.1 버전이후로 사용하지(discontinue라고 한다. 즉 폐지) 않고 있다. 새로운 netchan이 개발중인데, 구버전의 netchan과는 사용방법이 사뭇 다르다. 원문은 구 버전의 netchan을 기준으로 하는데, 폐지된 지금 시점에서 다룰 필요가 없을 것 같다. 그래서 번역을 포기했다. 
@


1.1
log
@119.64.102.68;;yundream;;
@
text
@d4 1
a4 6
프로세스간 정보를 교환하기 위한 여러가지 모델들이 있다. 이런 모델 중 Go언어의 channel은 프로세스간 통신을 위한 우아한 방법을 제공한다. Go의 channel은 공유메모리를 사용하지 않는다. 프로세스간 통신에서 "공유메모리"의 제어가 얼마나 많은 문제를 발생하는지 생각해 보라. Go는 다른 프로세스와 메시지를 주고 받을 수 있는 채널을 만든다. 이 채널을 통해서 동기적, 혹은 미동기적인 메시지를 전송하는 것으로 통신을 할 수 있다.    

== Channel server ==
== Channel client ==
== Time out ==
== Channel of channel ==
@
