#title javaone 2004 참관기

출처 : http://www.javastudy.co.kr/javastudy/new_bbs/qna_view.jsp?bbs_name=newsbbs&theid=56&pageNum=1

이 참관기는 본인이 주로 관심있었던 세션을 위주로 되어있어 다소 주관적일수도 있      
으니 양해 부탁드립니다. 그리고 어학의 한계도 감안해서 봐주셨으면 합니다.            
                                                                                    
----
[[TableOfContents]]
                                                                                    
=== 샌프란시스코 공항에 도착하다 ===
처음에 샌프란시스코 비행기를 오를 때만해도 막연히 미국 서부에 있는 한 도시에서 하는 행사를 구경하는 정도로 생각했다. 그리고 자바에 관해서는 닷넷에 조금 밀리는 시들해진 언어라고 느끼고 있었다. 그러한 10시간 이상의 비행을 하며 태평양을 건너가야 한다는 막연한 생각으로 강경수기자와 서관규군 이렇게 셋이서 비행기에 몸을 실었다.
                                                                                    
2번의 식사와 2편의 영화를 보고나서야 샌프란시스코 공항에 도착을 했다. 샌프란시스코는 대낮이었고 햇살도 무척 따가웠다. 이제 입국심사를 해야하는데 JavaOne이라고 하면 알까? 아님 그냥 Seminar차 왔다고 할까?하는 고민을 하다가 JavaOne에 왔다고 하니 입국심사관은 흔쾌히 패스를 내주었다. 여기서도 JavaOne이 국제적으로 하는 대단한 행사라고 느꼈다. 샌프란시스코 시내에 들어서니 JavaOne행사를 알리는 깃발이 거리에 휘날리는 모습이 우리를 반기는 듯 했다.                                    
                                                                                    
=== [제 1일차] 등록, J2SE 5.0(타이거) ===

아침일찍 뱃지를 받기 위해 registration desk로 갔다. 널찍한 공간에 많은 안내도우미, 그리고 등록정보를 검색하기에 충분히 많은 컴퓨터들이 등록확인 및 뱃지를 받기쉽도록 해주었다. 우리 일행은 뱃지를 받고서 세션안내 책자를 받으러 갔다. 첨에는 간단한 팜플렛 정도인줄 알았는데 가방과 함께 책자로 2권(스케줄, 프로그램 가이드)을 받았다. 아침 식사가 제공되기 전까지 스케줄 및 프로그램 가이드를 보면서 각자관심있는 세션에 체크를 했다. 나도 각 시간대별로 관심있는 분야에 체크를 했다.

세션에 관해서 얘기를 하자면 일단은 자바원에 갔다온 사람들은 General Session은 반드시 들으라는 것이었다. 나는 단순한 업체들의 신제품 설명을 하려니 했는데 막상 들어보니 그 이상의 무언가가 있었다. 제 1, 2, 3, 4일차 모두다가 Java와 관련된 기술의 트랜드를 알려주었다는 점과 그 기술을 알기 쉽게 장비를 갖추어 직접 눈으로 보고 느낄 수 있게 해주었다는 점이 생생한 기억으로 남았있다.

첫날에 들은 President and COO인 Jonathan Schwartz의 Java 기술 시장에 관한 트랜드는 자바 개발자들이 뛸 수 있는 분야와 자바의 무한한 성장 가능성을 알려주었다. 죠나단 스왈츠는 『Java=Opportunity』라는 프리젠테이션을 보여주면서 자바의 경제 성장을 강조했다. Ubiquity, JavaGame, JavaCard, Java Desk Top, Java Tools, J2EE Server 등 이러한 기술들이 만들어내는 시장경제의 규모는 어마어마한 금액이었다.그리고 자바카드, 데스크탑용 자바, 휴대폰속의 자바, 자동차속의 자바, 화성탐사성 장비에 들어간 자바 등등..주위에 널려 있어 (Java is Everywhere) 자바를 이용한 다양한 비즈니스가 성장한다는 것이다. 자동차의 경우 실제 자바로된 네비게이션 시스템이 장착된 BMW차를 보여주었다.

==== 타이거의 등장 ====
그리고 갑자기 웬 여자가 호랑이 한마리가 무대에 데리고 나와서 많은 눈길을 끌었다. 이 호랑이는 지난 2월에 발표된 베타판 J2SE1.5를 상징하는 동물이다. 타이거에 대한 세션도 많았고 General Session에서 비중있게 다루었다는 점에서 타이거의 등장은 자바 코딩 스타일에 적지않은 변화를 가져올 것이라 생각이 들었다. 타이거의 코드 샘플을 보니깐 2가지 문법적인 변화가 나의 눈에 들어왔는데 물론 귀에는 흐릿하게 들렸지만...역시 개발자는 코드로 말하며 서로 통한다는 것을 새삼 느꼈다.
                                                                                    
=== 압축공기 티셔츠 캐논포 ===
General Session이 끝날즈음 압축공기로 쏘는 티셔츠 캐논포가 나와서 즐거움을 주었다. 설명을 들으니 웹브라우저도 방향과 파워를 조절하여 쏘는 시스템이었다. 이날은 한개도 못받았는데 다음 날에 다른 캐논포를 쏠 때 티셔츠를 몇 장 받았다.

==== Java 1.4 -> Java 5.0 ====
나도 그랬지만 아직 1.5인줄 알고 갑자기 웬 5.0이라고 의아해 하는 사람이 많으리라. 원래 Java1.2 부터 Java2라고 해왔는데 이번 1.5 릴리스시에는 J2SE Ver.5.0이라고 하는 버젼명으로 바꿀예정이라 했다. 타이거버전에는 코딩을 단순화하고 모니터링을 위한 API를 제공한다.

우선 내가 본 2가지는 컬렉션 엘리멘트 캐스팅과 반복문에 관한 것이다. 타이거에서는 각기 Generics와 Enhanced for Loop라 불리는데, Generics는 컬렉션에 있어 <>기호속에 그 타입을 명시함으로써 엘리먼트에 억세스 할 때 캐스트 작업을 하지 않도록하는 것이다. 그래서 컴파일할 때 데이터 타입의 안전성(Compile-time Type Safety)을 제공하며, 추가적인 캐스팅(데이터 타입 변환) 코드를 넣지 않아도 된다. 그리고 Enhanced for loop는 컴파일러로 하여금 iterator를 처리하도록 함으로써 오류발생 및 코드를 간결하게 만들어 주었다. 이 두가지가 문법적으로 새로운 것이어서 생소했으며 코딩 스타일에 변화를 가져오리라는 생각이 들었다. 

그외에 Autoboxing/Unboxing(기본 데이터 타입/랩퍼 데이터 타입을 자동으로 변환), 복잡성 및 오류 발생을 줄인 Typesafe enums가 있다.

한편 Static 변수를 클래스 이름을 거치지 않고 참조할 수 있도록 해주는 Static Import가 눈에 띄었다. 이런 코드가 SCJP시험에 나왔다면 타이거 버전에서는 맞는 코드가 되리라. 그리고 그리고 『@』기호를 사용한 Code Anotation도 눈길을 끌었다. 예전의 /** ~*/ 방식의 주석과 달리 코드명과 코드값으로 주석을 Property형식으로 첨가함으로써 보다 유연하고 실용적인 코드 작성을 도와준다. 그리고 JVM을 모니터링할 수 있는 API(JMX)가 추가되었고 MBean을 이용하여 JVM의 상태를 모니터링 할 수가 있다. 그래서 이를 이용한 많은 자바관련 모니터링 및 프로파일링 S/W들이 나오리라 생각되며, 개발자들이 개발함에 있어 자신의 코드를 손쉽게 튜닝할 수 있으리라 생각 된다.
                                                                                    
=== [제2일차] : 스캇맥닐리, JSF, EJB 3.0 ===

스캇 맥닐리는 Java 3D를 사용한 슈팅 게임을 소개했다. 보통은 자바하면 웹 또는 모바일쪽 애플리케이션을 떠올리는데, 자바로 레인보우식스같은 (적어도 내눈에는 그래 보였다) 게임을 데모함으로써 많은 가능성을 보여주었다. 그리고 SK텔레콤의 솔루션이 듀크 초이스 어워드(The Duke''s Choice Awards)를 받게되어 한국 자바개발자로서의 자부심을 느꼈다. 그리고 일본인 개발자(Hideya Kawahara)를 무대로 불러 들여 Java 3D Glass의 데모를 보여주었다. 이는 일반적으로 쓰는 2차원의 윈도우가 3차원의 투명한 GLASS로 만들어져서 3차원으로 움직이는 것을 보여주었는데, 조만간에 일반 애플리케이션에도 많은 변화를 줄 것으로 생각되었다. 

첫날에 오픈소스로 서밋해 라는 조나단의 권유에 budget을 더 주면 오픈소스화 하겠다며 거절했다가 스캇 맥닐리의 무대에 올라와 오픈소스화 했다. Looking Glass는 설명이 필요없고, 직접 보기를 바란다. 그리고 Looking Glass의 오픈소스화때문에 Java3D도 java.net을 통해서 open source화한다고 들었다. 마지막으로 제너럴 세션이 끝날 즈음 자전거 동력을 이용해서 티셔츠를 쏘는 캐논포가 나왔는데 체인이 끊어 지는 바람에 손으로 던지는 해프닝이 있었다. 그덕에 티셔츠를 받을 수가 있었다.

==== JSF ====
나는 JSP를 이용한 웹개발을 많이 해왔고, 코딩을 많이 하다 보니 보다 간편하게 개발할 수 있는 무엇인가를 찾게되었고, 그것이 바로 프레임워크에 있다는 것을 자연스레 깨닫게 되었다. 자바에서도 웹개발을 위한 몇가지의 프레임워크에 관한 세션이 있었다. 그중에서도 JSF(Java Server Faces)는 Sun에서 인정한 표준 User Interface Framework라는 점에서 개발자들의 관심을 끌기에 충분했다. 그래서인지 해당 세션에는 시작하기 전부터 긴줄이 늘어서서 그 열기를 짐작하게 만들었다. JSF는 웹개발자들이 늘 겪는 단순 반복작업을 없애주고, JSP프로그램내에서 스크립틀릿의 필요성을 제거하여 비즈니스 로직과 프리젠테이션 로직을 분리해준다. 그렇기 때문에 코드의 재사용이 가능하다.

특히 JSF는 프리젠테이션 로직을 담당하기 때문에 MVC모델에 있어 View와 Model을 담당하는 프레임워크를 사용하면 금상첨화가 될 것이다. 내가 들었던 JSF와 JDO를 이용한 웹애플리케이션 개발이 그러했다. JDO는 자바객체를 관계형데이터베이스에 매핑하여 사용할 수 있는 프레임워크이다. 여기에 컨트롤부분으로 스트럿츠가 들어가면 환상의 프레임워크 3중주가 되지 않을까 하는 생각을 해봤다. 한편으로는 JSP(html, JavaScript, Scriptlet)와 DB쿼리만 좀 알면 웹개발을 쉽게 할 수 있는데 닭잡는데 소잡는 칼 3자루 들고 설치는게 아닐까 하는 생각도 들었다. 하지만 코드의 재사용, 즉 단순반복작업을 안하기 위해서는 이러한 프레임워크의 사용이 필요하다는 것을 느꼈다.                                                                               
                                                                                    
==== EJB ====
General Session 다음 시간에는 EJB 3.0세션을 중심으로 들었다. EJB3.0은 Simple해졌다는 느낌을 강하게 받았다. 본인도 EJB를 개발한 경험이 있었지만, 자질구레하게 개발자가 신경써야 할 것이 너무 많았다. EJB Bean, 홈인터페이스, 원격인터페이스등에 대한 Deployment Descriptor의 경우 굉장히 헷갈리게 만들었는데 EJB 3.0에서는 자바 메타데이터를 사용하여 Deployment Descriptor를 개발자가 작성하지 않도록 했다. 강의할 때는 그 speaker가 Descriptor부분을 설명하는 파워포인트부분을 빈화면으로 해서 DD가 없어졌음을 강조했다.

그외에 EJB의 설계에서 DB객체와 BEAN을 어떻게 매핑해야 하는지가 개발자에게 많은 고민거리였었다. 여기서는 native한 SQL쿼리를 지원하고 객체관계 매핑을 지원함으로써 그러한 짐을 덜어주었다. 그외에도 컨테이너 dependency와 JNDI접근을 추상화한 유틸리티 클래스제공함으로써 빈을 단순화했고, Callback Interface와 Home Interface는 반드시 사용하지 않아도 되도록 함으로써 편리성의 더해주었다. 또한 타이거에도 눈에 뜨게 적용된 annotation이 EJB의 클래스, 메써드에도 적용이 되었다. 여하튼 해당 세션에는 많은 개발자들이 몰려 그만큼 EJB에 대한 관심이 많다는 것을 보여주었고, EJB 3.0이 개발 생산성에 많은 도움을 주리라고 생각한다.

=== [제3일차] : 노키아, NetBeans, Eclipse ===

3일차 제너널세션은 선사가 아닌 Nokia의 CTO인 Pertti Korhonen이 나왔다. 그는 자바가 탑재된 모바일기기가 폭발적으로 증가한다는 것을 역설하였다. 그리고 모바일폰으로 홈네트워크에 접속하여 기기를 작동하는 데모를 보여줌으로써 이쪽의 분야는 무한한 가능성이 있다는 것을 새삼 깨달을 수 있었다.

==== 다양한 개발툴의 등장 ====
초창기 자바개발자들은 이렇다할만한 툴을 쓰지 않고 그냥 텍스트 에디터를 주로 사용했다. 그래서 에디트플러스나 울트라에디트, 가와 같은 툴에 자바컴파일 및 실행, 프로젝트 관리같은 메뉴가 들어있었다. 그당시 툴을 사용한다면 AWT나 Swing으로된 UI를 구성하거나 EJB컴포넌트를 구성할 때에는 벤더에서 제공하는 툴(JBuilder, VisualAge 등)을 사용하는 정도였다. 그러나 이번 자바원 컨퍼런스에는 Pavilion코너에는 많은 회사에서 자바관련 개발툴 제품들을 선뵈였고, 세션의 주제로 3가지의 툴이 다뤄졌다. 

NetBeans IDE, Java Studio Creator, Eclipse가 그 세가지이다.
                                                                                    
==== NetBeans IDE vs Eclipse ====
NetBeans IDE와 Eclipse에 대한 비교세션을 들었다. 얼핏 보니깐 둘다 오픈소스이며 자바개발을 위한 통합 IDE라는 점에서 비슷비슷하다. 그래서 나도 그랬지만 개발자들로 하여금 어떤 툴을 사용해야할지에 대해서 많은 고민을 하게 만들었다. 이 툴을 볼 때, 일단 태생으로 치면 NetBeans가 형이고 Eclipse는 동생뻘이다. 그러나 NetBeans는 썬에서 내놓은 자식이요, Eclpise는 IBM에서 밀어주는 자식이므로 배다른 형제라 보면 되겠다. 그래서 NetBeans IDE는 이번에 4.0버전을 내놓으면서 NetBeans 개발관계자들을 위해 NetBeans Software Day Event를 따로 진행되었다. 그래서 NetBeans쪽을 밀고 있다는 느낌이 전반적으로 들었다. 이는 뒤에 Java Studio Creator로 이어진다.                                                                                 

테크니컬한 점으로는 NetBeans는 AWT, Swing을 쓰고, Eclipse는 SWT를 사용한다는게 매우 틀리다. 그래서 그래피컬한 처리 성능에서 둘은 약간의 차이를 보이고, 운영체제에 따른 차이도 발생한다. Eclipse는 플러그인이 무궁무진하게 많으며 (이것에 반해서 플러그인만 열심히 만드는 개발자 친구도 있다) 자신만을 위한 전용 플러그인이 있다는 점에서 매우 강력한 IDE이다. 그러나 GUI컴포넌트 디자인 및 J2EE지원쪽으로는 NetBeans가 강하다. 또한 NetBeans는 모바일, 웹, J2EE, Desktop 애플리케이션 등 자바 전반적인 개발을 지원한다. 그래서 이 둘의 장점을 딴 IDE가 나오면 자바개발자들에게 큰 호응이 있으리라는 생각이 들었다. 이에대해서는 제임스 고슬링도 이 두가지 툴에 대해서 공동으로 작업을 할 수 있는 기회가 있다고 말했다.

=== [제4일차] 제임스 고슬링 : 오픈소스, Sun Java Studio Creator ===

많은 자바개발자들이 기대했던 제임스 고슬링의 세션에서는 자바를 사용한 입는 컴퓨터를 보여주었다. 안경에 장착된 웹캠으로 문자, 사물이나 사람(여기서는 제임스고슬링과 한자(한문))을 화면으로 캡쳐해서 그것을 인식하는 데모를 보여 주었다. 약간은 웹캠의 화질 및 프레임수가 적어서 좀 어색했지만 앞으로 응용할 분야는 많아 보였다. 그외에 실시간 자바제어기술로써 길다란 봉을 수직으로 유지해주는 데모도 보여주었다. 그리고 제임스고슬링을 비롯하여 IBM을 위시한 자바오픈소스옹호와 비옹호자 들간의 토론이 진행되었다. 오픈소스의 반대측은 이미 오픈 소스화된 리눅스의 다양한 버전의 호환성 문제를 예시하면서 이를 우려하고 있지만, 찬성측은 호환성 문제도 해결할 수 있다는 그런 얘기였다.

==== 자바 스튜디오 크리에이터(Java Studio Creator) ====
썬에서 야심차게 내놓은 (그래서 책도 나온것 같다.) Java Studio Creator에 대한 얘기를 하겠다. 이는 마지막날 제임스고슬링의 세션에서 손놀림 좋은 개발자가 직접 Web Application을 4GL처럼 뚝딱 만들어 내는 데모를 보여주었다. 그냥 개발하면 많은 코드가 들어갈 부분인데 마우스를 드래그 몇번하더니, 간단히 만들어내는 모습을 보여주었다.

Java를 개발하면서 MS의 비주얼스튜디오같은 환경이 있었으면 하는 바램이 있었는데, 자바 스튜디오 크리에이터는 『스튜디오』라는 말에서 느낄수 있듯이 MS의 비주얼 스튜디오에 견줄만한 것이다. 그래서 빠른 개발을 할 수 있도록 비주얼한 환경을 제공하고, NetBeans, JSF, JDBC, JAXP등의 기술을 녹여서 코드를 간편화 할 수 있도록 해주었다. 그외에도 이 안에서 코드개발 및 테스트, 디플로이가 한방에 되도록 함으로써 개발에 가속도를 붙여주었다. 그외에도 개발자가 둘이 나와 서로 같은 프로그램을 편집하면서 CVS의 기능이 있다는 것을 눈으로 확인 시켜주었다. 이런 설명을 들으니 이거 하나 깔아놓으면 웬만한 자바 애플리케이션은 편하게 다 개발할 수 있으리라는 생각이 들었다. 생각이 있으신 분은 직접 깔아서 테스트 해보시길...

=== 자바원의 세션외에 이야기들 ===
                                                                                    
==== 자바원에서 배운 문화 : 행사의 이모 저모를 살피고 ====
자바원의 테크니컬 세션 이외에 자바 Hands On Lab에서는 1인 1컴퓨터로 다양한 자바기술을 몸소 체험할 수 있도록 해주었다. 그리고 BOF세션은 (우리 나라로 치면 동호회) 나는 언어의 장벽때문에 참여를 망설였지만, 같은 관심을 가진 개발자들이 더욱 친숙해 질 수 있도록 해주었다. 그외에 파빌리언에서 나눠주는 많은 경품들도 자바원에서 획득할 수 있는 쏠쏠한 아이템들이었다. 그리고 자바 개발자들이 편하게 쉴 수 있도록 군데군데에 편한 방석을 배치해 주었고, 영화도 상영하고, 밴드도 부르고 오락기도 배치해서 즐기면서 배울수 있는 행사라는 느낌이 더욱 들었다. 물론 웹서핑을 할 수 있는 피시는 충분히 넉넉하게 준비해서 편리하게 이용할 수 있었다. 이런 것을보니 자바원 컨퍼런스의 문화를 실감할 수 있었다.

==== 미국이란 나라 ====
미국인은 기본적인 매너가 있다는 점을 새삼 느꼈다. 별거 아닌데도 호텔에서 엘리베이터를 탈 때, 길을 걷다 비켜 갈 때 등등...그 들은 항상 "Excuse me"라고 하면서 양보를 한다. 이에 비하면 우리 나라는 말 없이 먼저 가는 게 당연한 현실이다. 그리고 자바원 행사 진행 도우미로 할아버지 할머니들이 말쑥하게 정장을 입고 맞아 주었다. 인건비 때문인지는 몰라도 우리 나라 같으면 생각도 못하는 상황인데 그런 것이 자연스러웠다.

=== 마무리 ===
위에 열거한 여러 이야기들은 자바원 세션을 들은 나의 관심사 위주로 구성되어 있는 자바원 정글의 한 부분이다. 특히 모바일을 비롯한 Hard Ware쪽 주제와 트랜드는 능력의 한계로 인해 많이 다루지 못했다. 그외에도 많을 것이라 생각되는데 자세한 내용은 javaone온라인 홈페이지를 참조하길 바란다. 끝으로 자바원 행사 참여를 지원해준 선마이크로시스템즈 코리아에게 감사를 표한다.                                     

{{{#!plain
▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
POWERED BY 絶對高手
E-Mail : juldaegosu@hanmail.net
MSN : juldaegosu@hanmail.net
Nate : infohunt@nate.com
Home : javacraft.net & javastudy.co.kr
▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒
}}}
