#title Sequel - 루비언어를 위한 데이터베이스 툴킷 

== sequel ==
데이터 베이스 애플리케이션 개발은 C나 PHP에서 직접 mysql, postgresql API를 호출하는 방식으로 해왔기 때문에, ORM(Object-relational mapping)은 나에게 생소하다. 예컨데 나는 PHP나 C에서 persistence layer를 처리하는 Model 1 방식만을 경험한 셈이다. ORM은 데이터베이스 Model 3로 iBatis, Hibernat와 같은 persistence 담당하는 프레임워크를 이용해서 데이터 베이스를 처리하는 방식이다. 객체지향적인 프로그래밍이 가능하다라는 장점이 있는 반면, 프레임워크를 배워야 한다는 단점이 있다.

sequel은 루비언어를 위한 데이터베이스 툴킷으로 ORM 레이어를 포함하고 있다. 전공분야는 아니지만 이왕 sinatra를 하게 된거, 배워두면 쓸모가 있겠다 싶어서 간단히 살펴보기로 했다.     

=== 지원 데이터베이스 ===
ADO, Amalgalite, CUBRID, DataObjects, DB2, DBI, Firebird, IBM_DB, Informix, JDBC, MySQL, Mysql2, ODBC, OpenBase, Oracle, PostgreSQL, SQLite, Swift, TinyTDS 많이도 지원한다. 이중에서 다뤄본 DB는 MySQL, Oracle, SQLite, PostgreSQL 정도.  

=== 설치 ===
{{{#!plain
# gem install sequel
}}}

=== 예제 - 1 ===
{{{#!plain
require 'rubygems'
require 'sequel'

DB = Sequel.sqlite # memory database

DB.create_table :items do
  primary_key :id
  String :name
  Float :price
end

items = DB[:items] # Create a dataset

# Populate the table
items.insert(:name => 'abc', :price => rand * 100)
items.insert(:name => 'def', :price => rand * 100)
items.insert(:name => 'ghi', :price => rand * 100)

# Print out the number of records
puts "Item count: #{items.count}"

# Print out the average price
puts "The average price is: #{items.avg(:price)}"
}}}

=== sinatra 에서 사용 ===
  * Sinatra 웹 프레임워크에서 사용해 보려한다. 주소록이나 만들어 볼 생각이다. 

== 문서 정리 ==
음 공부해야할 문서들이 많군. 쩝.
  * Databases
    * Connection a Database 
    * Database Transactions
    * Schema Modification
    * Master/Slave Databases and Sharding
  * Dataset
  * Models
    * Reflection
    * Thread Safety
    * Testing With Sequel
  * Migrations
