#title access - 파일의 권한을 체크한다. 

{{{#!html
<HTML
><HEAD
><TITLE
><a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=access">access</a>(2)</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.64
"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="CHAPTER"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="CHAPTER"
><H1
><A
NAME="AEN1"
>1&#51109;. <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=access">access</a>(2)</A
></H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>&#52264;&#47168;</B
></DT
><DT
>1.1&#51208;. <A
HREF="#AEN4"
>사용법</A
></DT
><DT
>1.2&#51208;. <A
HREF="#AEN8"
>설명</A
></DT
><DT
>1.3&#51208;. <A
HREF="#AEN13"
>반환값</A
></DT
><DT
>1.4&#51208;. <A
HREF="#AEN16"
>에러</A
></DT
><DT
>1.5&#51208;. <A
HREF="#AEN68"
>예제</A
></DT
></DL
></DIV
><P
>파일의 사용자 권한을 체크하기 위해서 사용하지만, 보통은 파일이 
존재하는지를 간단히 체크하기 위해서 주로 사용된다. access 를 사용하지 않을경우 <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=
open">
open</a>(2) 등의 함수를 이용해야 하는데, 단지 파일의 존재유무만을 파악하기 위해서 
open 을 사용하는것은 너무 번거롭기 때문이다. </P
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN4"
>1.1&#51208;. 사용법</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;unistd.h&#62;

int <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=access">access</a>(const char *pathname, int mode);
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN8"
>1.2&#51208;. 설명</A
></H1
><P
>		acess 는 프로세스가 pathname 으로 지정된 파일에 대해서 읽기, 쓰기, 실행권한을 가지고 
		있는지 체크한다. 만약 pathname 파일이 심볼릭링크된 파일이라면 원본 파일을 체크한다.  
	</P
><P
>		mode 는 R_OK, W_OK, X_OK, F_OK 로 구성된다. 		
	</P
><P
>		R_OK 는 읽기, W_OK 는 쓰기, X_OK 는 실행 여부를 체크하며 F_OK 는 파일의 존재유무를 
		체크한다. 
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN13"
>1.3&#51208;. 반환값</A
></H1
><P
>		권한이 성공적으로 체크되었다면, 0 그렇지 않았다면 -1 이 반환되며, 적당한 errno 값이 
		세팅된다. 
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN16"
>1.4&#51208;. 에러</A
></H1
><P
>		<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>EACCESS</DT
><DD
><P
>	
					요구된 접근이 파일에 의해 거절되거나, 경로명안의 어느 한 디렉토리에 의해 
					거절되었을경우
				</P
></DD
><DT
>EROFS</DT
><DD
><P
>					read-only 인 파일시스템에 의해서 쓰기권한이 거절되었을경우 		
				</P
></DD
><DT
>ENOENT</DT
><DD
><P
>					경로명의 디렉토리가 없거나, 심볼릭 링크가 깨져있을때.
				</P
></DD
><DT
>ENOENT</DT
><DD
><P
>					경로명의 디렉토리가 없거나, 심볼릭 링크가 깨져있을때.
				</P
></DD
><DT
>ENODEV</DT
><DD
><P
>					경로명이 장치파일을 참고하고, 일치하는 장치가 없을때.
				</P
></DD
><DT
>EROFS</DT
><DD
><P
>					경로명이 read-only 파일시스템을 참조하면서, 쓰기로 열려고 할때.
				</P
></DD
><DT
>EROFS</DT
><DD
><P
>					경로명이 read-only 파일시스템을 참조하면서, 쓰기로 열려고 할때.
				</P
></DD
><DT
>EFAULT</DT
><DD
><P
>					경로명이 접근할수 없는 주소강간을 가르킬때 
				</P
></DD
><DT
>EINVAL</DT
><DD
><P
>					모드가 적절하지 않을때	
				</P
></DD
><DT
>ENAMETOOLONG</DT
><DD
><P
>					경로명이 너무 길때	
				</P
></DD
><DT
>ENOENT</DT
><DD
><P
>					경로명의 디렉토리로 접근가능하지만 존재하지 않거나 깨진 링크일때		
				</P
></DD
><DT
>ENOTDIR</DT
><DD
><P
>					경로명의 디렉토리가 존재하지 않을때
				</P
></DD
></DL
></DIV
>	
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN68"
>1.5&#51208;. 예제</A
></H1
><P
>		/usr/test/cat 파일이 존재하는지 확인할때
		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;unistd.h&#62;
#include &#60;stdio.h&#62;

int <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=main">main</a>(int argc, char **argv)
{
    if (access(argv[1], F_OK) != 0)
        perror("파일이 존재하지 않음 : ");
    else
        printf("파일 존재함&#92;n");
}
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
></DIV
></BODY
></HTML
>
<br />
}}}
