#title linux man page : read - 열린 파일기술자로 부터 데이타를 읽어들인다.
{{{#!html
<HTML
><HEAD
><TITLE
><a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=read">read</a>(2)</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.59"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="CHAPTER"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="CHAPTER"
><H1
><A
NAME="AEN1"
>1&#51109;. <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=read">read</a>(2)</A
></H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>&#52264;&#47168;</B
></DT
><DT
>1.1&#51208;. <A
HREF="#AEN4"
>사용법</A
></DT
><DT
>1.2&#51208;. <A
HREF="#AEN8"
>설명</A
></DT
><DT
>1.3&#51208;. <A
HREF="#AEN11"
>반환값</A
></DT
><DT
>1.4&#51208;. <A
HREF="#AEN15"
>에러</A
></DT
><DT
>1.5&#51208;. <A
HREF="#AEN43"
>예제</A
></DT
></DL
></DIV
><P
>열린 파일기술자로 부터 데이타를 읽어들인다.</P
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN4"
>1.1&#51208;. 사용법</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;unistd.h&#62;

ssize_t <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=read">read</a>(int fd, void *buf, size_t count);
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN8"
>1.2&#51208;. 설명</A
></H1
><P
>		socket(2) 혹은 open(2) 등으로 열린 파일에서 원하는 데이타를 읽어들인다. 
		fd 가 socket, open 으로 열린 파일기술자이다. fd 에 읽을 데이타가 
		있다면 buf 에 담아서 가져온다. count 는 buf 에서 한번에 가져올 
		데이타의 크기를 나타낸다.  
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN11"
>1.3&#51208;. 반환값</A
></H1
><P
>		성공할경우 0이상의 값을 반환한다. 0이라면 파일의 끝을 의미하며, 
		0 보다 큰 양수라면 이는 읽어들인 buf 의 크기를 나타낸다. 
		파일 끝이 아닌상태에서 파일에서 데이타를 가져오는데 성공했다면, 
		파일 포인터의 위치는 읽은 데이타의 크기만큼 이동하게 된다. 
	</P
><P
>		에러가 발생할경우 -1 을 되돌려주며 errno 는 적당한 값으로 설정된다. 
		에러가 발생했을경우 파일:::포인터(:12)의 위치가 어떻게 바뀔지는 예측할수 
		없다.   
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN15"
>1.4&#51208;. 에러</A
></H1
><P
>		다양한 원인에 의해서 에러가 발생할수 있으며 아래와 같은 에러 메시지들이 있다. 
		<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>EINTR</DT
><DD
><P
>	
					데이타를 읽기전에 함수가 <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=신호">신호</a>(signal)에 의해 인터럽트 되었다. 
				</P
></DD
><DT
>EAGAIN</DT
><DD
><P
>					비봉쇄로 열린 파일지시자에 즉시 읽을 데이타가 없을 
					경우.
				</P
></DD
><DT
>EIO</DT
><DD
><P
>					I/O 에러.
				</P
></DD
><DT
>EISDIR</DT
><DD
><P
>					파일지시자 fd 가 디렉토리를 가르킬경우.
				</P
></DD
><DT
>EBADF</DT
><DD
><P
>					파일지시자 fd 가 유효한 파일기술자가 아니거나 읽기 위해 
					열려있지 않을경우
				</P
></DD
><DT
>EINVAL</DT
><DD
><P
>					fd 가 읽기에 적당하지 않은 객체와 연결되어 있다. 
				</P
></DD
></DL
></DIV
>	
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN43"
>1.5&#51208;. 예제</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;unistd.h&#62;

#include &#60;stdio.h&#62;
#include &#60;string.h&#62;

#define STDIN 1

int <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=main">main</a>()
{
    char buf[80];

    <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=memset">memset</a>(buf, 0x00, 80);
    if (<a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=read">read</a>(STDIN, buf, 80) &#60; 0) 
    {
        <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=perror">perror</a>("read erro : ");    
        <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=exit">exit</a>(0);
    }

    printf("%s", buf);
}
		</PRE
></TD
></TR
></TABLE
>

		표준입력(:12) "1"(키보드) 로 부터 읽어들인 문자열을 화면에 
		출력한다.  
	</P
></DIV
></DIV
></BODY
></HTML
>
}}}
[[tag(파일,시스템프로그래밍)]]

