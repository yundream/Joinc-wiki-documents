#title linux_systemcall_quick_reference here
[wiki:docbook_linux_systemcall_quick_reference Docbook 원문]

이 문서는 http://tiger.la.asu.edu/Quick_Ref/Linux_Syscall_quickref.pdf 의 번역 문서입니다. 참고하시기 바랍니다.

{{{#!html
<HTML
><HEAD
><TITLE
>리눅스 시스템 콜 퀵 레퍼런스</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.76b+
"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="ARTICLE"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="ARTICLE"
><DIV
CLASS="TITLEPAGE"
><H1
CLASS="TITLE"
><A
NAME="AEN2"
></A
>리눅스 시스템 콜 퀵 레퍼런스</H1
><H3
CLASS="AUTHOR"
><A
NAME="AEN4"
>윤 상배</A
></H3
><DIV
CLASS="AFFILIATION"
><DIV
CLASS="ADDRESS"
><P
CLASS="ADDRESS"
>				yundream@joinc.co.kr<br>
			</P
></DIV
></DIV
><DIV
CLASS="REVHISTORY"
><TABLE
WIDTH="100%"
BORDER="0"
><TR
><TH
ALIGN="LEFT"
VALIGN="TOP"
COLSPAN="3"
><B
>&#44256;&#52828; &#44284;&#51221;</B
></TH
></TR
><TR
><TD
ALIGN="LEFT"
>&#44256;&#52840; 0.8</TD
><TD
ALIGN="LEFT"
>2004년 3월 19일 23시</TD
><TD
ALIGN="LEFT"
></TD
></TR
><TR
><TD
ALIGN="LEFT"
COLSPAN="3"
>최초 번역</TD
></TR
></TABLE
></DIV
><HR></DIV
><DIV
CLASS="TOC"
><DL
><DT
><B
>&#52264;&#47168;</B
></DT
><DT
>1. <A
HREF="#AEN14"
>소개</A
></DT
><DT
>2. <A
HREF="#AEN22"
>시스템 콜 예제</A
></DT
><DT
>3. <A
HREF="#AEN26"
>시스템 콜 레퍼런스</A
></DT
></DL
></DIV
><DIV
CLASS="SECTION"
><H1
CLASS="SECTION"
><A
NAME="AEN14"
></A
>1. 소개</H1
><P
>	
		시스템 콜이란 리눅스 커널에 의해 제공되는 서비스이다. 예를 들어 
		파일에 쓰는 서비스를 이용하길 원한다면 프로그래머는 리눅스에서 
		제공하는 해당 시스템콜을 이용해서 프로그램을 작성한다.  
		C를 이용해서 프로그래밍을 할경우 대부분의 시스템콜은 libc를 통한 
		포장(wrapper)함수형태로 제공받을 수 있다.  
	</P
><P
>	
		시스템 콜 함수에 대한 정보는 매뉴얼 페이지(man page)의 섹션 2번을 
		통해서 얻어올 수 있다. 예를 들어 read()시스템콜에 대한 정보를 얻기를 
		원한다면 man 2 read 하면 된다. 시스템콜에 대한 소개를 원한다면 
		<B
CLASS="EMPHASIS"
>man 2 intro</B
>를 이용하기 바란다. 
		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
># man 2 intro
		</PRE
></TD
></TR
></TABLE
>
	</P
><P
>		시스템 콜을 사용하기 위해서 libc를 통한 포장함수를 호출하는 외에도 
		syscall()함수를 이용해서 직접 실행시키는 방법도 있다. 각각의 
		시스템콜은 고유한 번호를 가지고 있는데, syscall에 이 시스템 콜의 
		번호를 입력하는 방식으로 호출한다. 내부적으로 syscall은 0x80 인터럽트를
		이용해서 커널에 명령을 전달한다.   
	</P
><P
>		시스템 콜함수들은 syscall.h 와 unistd.h 에 정의되어 있으며, 
		시스템 콜 테이블은 "arch/i386/kernel/entry.S"리눅스 커널 소스파일에 
		정의되어 있다. 
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN22"
></A
>2. 시스템 콜 예제</H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;syscall.h&#62;
#include &#60;unistd.h&#62;
#include &#60;stdio.h&#62;
#include &#60;sys/types.h&#62;

int main()
{
    long ID1, ID2;

    // 시스템콜의 직접 사용  
    // 시스템콜 번호 : 20
    ID1 = syscall(SYS_getpid);
    printf("%ld\n", ID1);

    // libc를 이용한 시스템 콜
    // 시스템콜 번호 : 20
    ID2 = getpid();
    printf("%ld\n", ID2);

    return (0);
}
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN26"
></A
>3. 시스템 콜 레퍼런스</H1
><P
>		<DIV
CLASS="TABLE"
><A
NAME="AEN29"
></A
><P
><B
>&#54364; 1. 시스템 콜 레퍼런스</B
></P
><TABLE
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>번호</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>함수 이름</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>설명</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>소스</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>1</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>exit()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>현재 프로세스의 종료</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/exit.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>2</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fork()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>자식 프로세스의 생성</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i385/kernel/process.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>3</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>read()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일 지정자로 부터 읽기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/read_write.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>4</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>write()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일 지정자로 쓰기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/read_write.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>5</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>open()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일이나 장치열기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/open</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>6</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>close()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일 지정자 닫기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/open.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>7</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>waitpid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>프로세스의 종료를 기다린다</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/exit.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>8</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>creat()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일이나 장치의 생성</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/open.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>9</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>link()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일을 위한 새로운 이름 만들기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/namei.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>10</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>unlink()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일 혹은 참조된 이름을 삭제한다</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/namei.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>11</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>execv()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>프로그램의 실행</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/process.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>12</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>chdir()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>작업디렉토리의 변경</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/open.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>13</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>time()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>초단위의 시간 얻기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/time.h</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>14</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mknod()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>일반 혹은 특수파일의 생성</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/namei.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>15</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>chmod()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일의 권한 바구기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/open.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>16</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>chown()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일의 소유자 변경</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/open.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>18</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>stat()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일의 상태 얻기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/stat.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>19</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>lseek()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일에서의 위치 변경</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/read_write.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>20</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>getpid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>프로세스의 ID를 얻어온다</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sched.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>21</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mount()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일 시스템의 마운트</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/super.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>22</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>umount()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일 시스템 마운트 해제</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/super.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>23</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>setuid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>실제 유저 아이디 설정</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>24</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>getuid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>실제 유저 아이디 얻어오기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sched.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>25</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>stime()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>시스템의 시간과 날짜 설정</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/time.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>26</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>ptrace()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>부모프로세스가 자식프로세스의 실행을 제어하도록 허가</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/ptrace.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>27</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>alarm()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>실정시간후 alarm시그널이 전달되도록 한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sched.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>28</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fstat()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일 상태 얻기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/stat.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>29</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>pause()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>시그널이 전달될때까지 대기한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/sys_i386.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>30</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>utime()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일의 엑세스시간과 수정시간을 수정한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/open.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>33</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>access()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일의 권한을 검사한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/open.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>34</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>nice()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>프로세스의 우선순위를 번경한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sched.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>36</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sync()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>슈퍼블럭을 업데이트 한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/buffer.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>37</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kill()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>프로세스에 시그널을 전송한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/signal.h</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>38</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>rename()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일의 이름과 위치를 변경한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/namei.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>39</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mkdir()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>디렉토리를 생성한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/namei.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>40</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>rmdir()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>디렉토리를 제거한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/namei.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>41</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>dup()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>열린 파일 지정자를 복사한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/fcntl.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>42</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>pipe()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>내부통신을 위한 채널을 생성한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/sys_i386.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>43</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>times()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>프로세스 시간을 얻는다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>45</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>brk()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>프로세스의 데이터 세그먼트 크기를 변경한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mm/mmap.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>46</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>setgid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>real 그룹 아이디를 설정한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>47</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>getgid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>real 그룹 아이디를 얻어온다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sched.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>48</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sys_signal()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>ANSI C 시그널 제어</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/signal.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>49</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>geteuid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>effective 유저 아이디 가져오기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sched.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>50</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>getegid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>effective 그룹 아이디 가져오기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sched.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>51</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>acct()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>프로세스 측정을 켜거나 끈다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/acct.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>52</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>umount2()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일시스템 unmount</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/super.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>54</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>ioctl()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>장치 제어</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/ioctl.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>55</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fcntl()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일 제어</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/fcntl.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>56</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mpx</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>사용되지 않음</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>57</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>setpgid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>프로세스의 그룹 아이디 설정</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>58</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>ulimit()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>사용되지 않음</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>59</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>olduname</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>구식의 uname 시스템콜</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/sys_i386.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>60</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>umaks()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일 마스크의 생성</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>61</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>chroot()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>루트디렉토리의 변경</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/open.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>62</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>ustat()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일시스템의 통계 얻기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/super.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>63</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>dup2()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일 지정자 복사</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/fcntl.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>64</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>getppid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>부모 프로세스의 PID 얻기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sched.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>65</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>getpgrp()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>프로세스의 그룹 아이디 얻기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>66</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>setsid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>세션과 프로세스 그룹 아이디 설정</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>67</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sigaction()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>POSIX 시그널 제어 함수</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/signal.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>68</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sigmask()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>ANSI C 시그널 제어</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/signal.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>69</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>ssetmask()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>ANSI C 시그널 제어</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/signal.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>70</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>setreuid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>실제 혹은 유효사용자 아이디의 설정</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>71</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>setregid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>실제 혹은 유효그룹 아이디의 설정</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>72</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sigsuspend()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>시그널 마스크를 일시적으로 대체한후 시그널을 기다린다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/signal.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>73</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sigpending()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>시그널을 블럭하고 검사를 수행한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/signal.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>74</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sethostname()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>호스트이름 설정</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>75</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>setrlimit()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>자원의 제한값을 설정한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>76</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>getrlimit()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>자원의 제한값을 얻어온다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>77</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>getrusage()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>자원의 제한값을 얻어온다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>78</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>gettimeofday()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>날짜와 시간을 얻는다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/time.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>79</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>settimeofday()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>날짜와 시간을 설정한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/time.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>80</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>getgroups()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>포함된 그룹아이디의 목록을 얻는다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>81</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>setgroups()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>포함될 르룹아이디의 목록을 설정한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>82</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>old_select()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>오래된 버젼의 입출력다중화</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/sys_i386.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>83</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>symlink()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일에 대한 심볼릭링크 생성</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/namei.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>84</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>lstat()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일의 상태 얻기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/stat.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>85</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>readlink()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>심볼릭 링크의 연결된 파일 이름을 읽는다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/stat.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>86</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>uselib()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>공유라이브를 선택한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/exec.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>87</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>swapon()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일과 장치의 스와핑을 시작한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mm/swapfile.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>88</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>reboot()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>리붓 시키거나 Ctrl-Alt-Del을 활성화/비활성화 시킨다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>89</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>old_readdir()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>오래된 버젼의 디렉토리 내용읽기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/readdir.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>90</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>old_mmap()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>오래된 버젼의 메모리 파일 대응</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/sys/i386.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>91</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mnunmap()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>메모리 페이지 해제</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mm/mmap.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>92</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>truncate()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일의 길이 결정</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/open.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>93</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>ftruncate()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일의 길이 결정</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/open.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>94</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fchmod()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일의 권한 변경</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/open.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>95</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fchown()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일의 그룹및 소유자 변경</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/open.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>96</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>getpriority()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>프로그램의 우선순위 얻어오기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>97</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>setpriority()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>프로그램의 우선순위 설정</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>98</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>profile()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>execution time profile</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>99</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>statfs()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일시스템 정보 얻기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/open.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>100</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fstatfs()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일시스템 정보 얻기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/open.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>101</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>ioperm()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>set port input/output permissions</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/ioport.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>102</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>socketcall()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>소켓 시스템콜</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>net/socket.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>103</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>syslog()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>커널 메시지 버퍼의 내용을 읽거나 클리어한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kerne/printk.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>104</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>setitimer()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>내부 타이머 설정</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/itimer.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>105</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>getitimer()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>내부 타이머 값 가져오기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/itimer.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>106</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sys_newstat()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일의 상태 얻기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/stat.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>107</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sys_newlstat()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일의 상태 얻기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/stat.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>108</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sys_newfstat()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일의 상태 얻기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/stat.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>109</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>olduname()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>최근 커널의 정보얻기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/sys_i386.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>110</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>iopl()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>I/O privilege 레벨 변경</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/ioport.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>111</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>vhangup()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>가상으로 현재 tty를 중지시킨다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/open.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>112</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>idle()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>0번 프로세스를 idel상태로 한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/process.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>113</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>vm86old()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>가상 8086모드로 들어가기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/vm86.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>114</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>wait4()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>프로세스의 종료를 기다린다. BSD 스타일</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernelk/exit.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>115</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>swapoff()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일/장치의 스와핑 끝내기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mm/swapfile.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>116</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sysinfo()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>시스템의 정보 얻어오기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/info.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>117</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>ipc()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>System V IPC 시스템 콜</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernelk/sys_i386.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>118</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fsync()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일의 내부상태와 디스크상의 상태를 동기화 한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/buffer.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>119</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sigreturn()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>시그널 핸들러와 클린업 스택 프레임으로 부터 반환</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/signal.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>120</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>clone()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>자식 프로세스의 생성</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/process.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>121</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>setdomainname()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>도메인 이름 설정</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>122</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>uname()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>최근 커널의 정보 얻어오기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>123</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>modify_ldt()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>ldt를 가져오거나 설정한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/ldt.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>124</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>adjtmex()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>커널 클럭을 조율한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/time.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>125</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mprotect()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>메모리 영역에 대한 접근을 제어한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mm/mprotect.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>126</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sigprocmask()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>POSIX 시그널 제어 관련 함수</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/signal.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>127</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>create_module()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>적재가능한 모듈엔트리 생성</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/module.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>128</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>init_module()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>적재가능한 모듈 엔트리 초기화</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernelk/module.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>129</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>delete_module()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>적재 모듈의 삭제</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/module.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>130</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>get_kernel_syms()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>retrieve exported kernel and module symbols</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/module.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>131</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>quotactl()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>디스크 쿼터 수정</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/dquot.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>132</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>getpgid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>프로세스 그룹아이디 가져오기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>133</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fchdir()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>작업 디렉토리 변경</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/open.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>134</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>bdflush()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>start, flush, buffer-dirty-flush 데몬을 조정한다</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/buffer.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>135</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sysfs()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일시스템 타입정보 가져오기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/super.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>136</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>personality()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>프로세스 실행 도메인 설정</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/exec_domain.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>137</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>afs_syscall()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>사용하지 않음</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>138</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>setfsuid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일 시스템 검사를 위해 사용되는 사용자 실별자를 설정</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>139</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>setfsgid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일 시스템 검사를 위해 사용되는 그룹 식별자를 설정</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>140</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sys_llseek()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>읽기/쓰기 파일의 위치 이동</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/read_write.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>141</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>getdents()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>디렉토리 내용을 읽어들인다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/readdir.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>142</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>select()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>입출력 다중화</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/select.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>143</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>flock()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>열린파일에 대한 권고잠금 적용및 제거</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/locks.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>144</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>msync()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>메모리 맵과 파일의 동기화</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mm/filemap.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>145</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>readv()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>벡터를 읽는다</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/read_write.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>146</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>writev()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>벡터를 쓴다</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/read_write.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>147</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sys_getsid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>세션리더의 프로세스 아이디를 가져온다</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>148</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fdatasync()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일의 디스크에 있는 in-core 데이터를 동기화</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/buffer.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>149</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sysctl()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>시스템 파라메터를 읽고 쓴다</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>150</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mlock()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>메모리의 페이지 잠금</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mm/mlock.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>151</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>munlock()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>메모리의 페이지 잠금 풀기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mm/mlock.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>152</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mlockall()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>호출한 프로세스의 페이징을 금지시킨다</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mm/mlock.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>153</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>munlockall()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>호출한 프로세스에 대한 페이징을 다시 가능하도록 한다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mm/mlock.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>154</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sched_setparam()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>스케줄 파라메터 설정</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sched.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>155</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sched_getparam()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>스케쥴 파라메터 설정값 가져오기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sched.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>156</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sched_setscheduler()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>스케쥴 알고리즘 파라메터 설정</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sched.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>157</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sched_getscheduler()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>스케쥴 알고리즘 파라메터 값 가져오기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sched.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>158</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sched_yield()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sched.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>159</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sched_get_priority_max()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>정적 선행 범위를 가진다</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sched.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>160</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sched_get_priority_mix()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sched.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>161</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sched_rr_get_interval()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>프로세스의 SCHED_RR간격을 가져온다.</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sched.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>162</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>nanosleep()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>지정한 시간에 실행을 잠시 멈춘다</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sched.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>163</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mremap()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>가상 메모리 주소를 재대응시킨다</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mm/mremap.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>164</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>setresuid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>set real, effective and saved user or group ID</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>165</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>getresuid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>get real, effective and saved user or group ID</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>166</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>vm86()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>8086가상 모드로 진입</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/vm86.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>167</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>query_module()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>query the kernel for various bits pertaining to modules</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/module.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>168</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>poll()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일 지정자로 부터 이벤트를 기다린다</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/select.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>169</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>nfsservctl()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>커널 nfs 데몬을 위한 인터페이스</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/filesystems.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>170</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>setresgid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>set real, effective and saved user or group ID</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>171</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>getresgid()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>get real, effective and saved user or group ID</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>172</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>prctl()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>프로세스상에서의 실행</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/sys.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>173</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>rt_sigreturn</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/signal.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>174</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>rt_sigaction</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/signal.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>175</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>rt_sigprocmask</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/signal.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>176</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>rt_sigpending</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/signal.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>177</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>rt_sigtimedwait</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/signal.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>178</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>rt_sigqueueinfo</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/signal.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>179</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>rt_sigsuspend</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/signal.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>180</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>pread()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일 지정자로 부터 위치를 가져오거나 읽는다</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/read_write.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>181</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sys_pwrite()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일 지정자로 부터 위치를 가져오거나 쓴다</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/read_write.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>182</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>chown()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일 소유자 변경</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/open.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>183</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>getcwd()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>최근 작업 디렉토리 가져오기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>fs/dcache.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>184</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>capget()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>프로세스 기능의 설정값 가져오기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernel/capability.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>185</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>capset</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>프로세스 기능 설정하기</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>kernle/capability.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>186</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sigaltstack()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>시그널 스택 문맥을 가져오가나 설정</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/signal.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>187</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>sendfile()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>파일 지정자 사이의 데이터 교환</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>mm/filemap.c</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>188</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>getpmsg()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>사용하지 않음</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>189</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>putpmsg()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>사용하지 않음</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>190</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>vfork()</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>자식 프로세스 생성과 부모 프로세스 블럭</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>arch/i386/kernel/process.c</TD
></TR
></TBODY
></TABLE
></DIV
>
	</P
></DIV
></DIV
></BODY
></HTML
>
}}}
