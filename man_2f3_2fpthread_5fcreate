#title linux man page : pthread_create 쓰레드를 생성한다.

{{{#!html
<HTML
><HEAD
><TITLE
><a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=ptread_create">ptread_create</a>(3)</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.64
"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="CHAPTER"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="CHAPTER"
><H1
><A
NAME="AEN1"
>1&#51109;. <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=ptread_create">ptread_create</a>(3)</A
></H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>&#52264;&#47168;</B
></DT
><DT
>1.1&#51208;. <A
HREF="#AEN4"
>사용법</A
></DT
><DT
>1.2&#51208;. <A
HREF="#AEN8"
>설명</A
></DT
><DT
>1.3&#51208;. <A
HREF="#AEN16"
>반환값</A
></DT
><DT
>1.4&#51208;. <A
HREF="#AEN20"
>에러</A
></DT
><DT
>1.5&#51208;. <A
HREF="#AEN29"
>예제</A
></DT
></DL
></DIV
><P
>	새로운 쓰레드를 생성한다. </P
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN4"
>1.1&#51208;. 사용법</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;pthread.h&#62;

int  pthread_create(pthread_t  *  thread, pthread_attr_t *
attr, void * (*<a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=start_routine)">start_routine)</a>(void *), void * arg);
		</PRE
></TD
></TR
></TABLE
>
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN8"
>1.2&#51208;. 설명</A
></H1
><P
>		<B
CLASS="EMPHASIS"
>pthread_create</B
>는 새로운 쓰레드를 생성한다. 
		새로운 쓰레드는 <B
CLASS="EMPHASIS"
>start_rutine</B
> 함수를
		<B
CLASS="EMPHASIS"
>arg</B
> 아규먼트로 실행시키면서 생성된다. 
		생성된 쓰레드는 <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=pthread_exit">pthread_exit</a>(3) 을 호출하거나 또는 
		start_rutine 에서 return 할경우 제거된다. 	
	</P
><P
>		<B
CLASS="EMPHASIS"
>attr</B
> 아규먼트는 쓰레드와 관련된 특성을 
		지정하기 위한용도로 사용된다. 이에 대한 내용은 <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=
		pthread_attr_init">

		pthread_attr_init</a>(3) 을 참고해야 한다. attr 을 NULL 로 할경우 
		기본 특성으로 지정된다. 리눅스에서의 쓰레드는 
		joinable 과 non real-time 스케쥴 정책을 기본특성으로 한다. 
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN16"
>1.3&#51208;. 반환값</A
></H1
><P
>		성공할경우 쓰레드식별자인 <B
CLASS="EMPHASIS"
>thread</B
>에 
		쓰레드 식별번호를 저장하고, 0을 리턴한다. 실패했을경우 0 이 아닌 
		에러코드 값을 리턴한다. 
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN20"
>1.4&#51208;. 에러</A
></H1
><P
>		<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>EAGAIN</DT
><DD
><P
>	
					쓰레드 생성을 위한 자원이 부족하거나, 
					<B
CLASS="EMPHASIS"
>PTHREAD_THREADS_MAX</B
>를 초과해서 
					쓰레드 생성을 요청할경우
				</P
></DD
></DL
></DIV
>	
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN29"
>1.5&#51208;. 예제</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;pthread.h&#62;

#include &#60;stdlib.h&#62;

// 쓰레드 함수
void *<a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=test">test</a>(void *data)
{
    int i;
    int a = <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=*">*</a>(int *)data;
    for (i = 0; i &#60; 10; i++)
    {
        printf("%d&#92;n", i*a);
    }
    return (void *<a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=)">)</a>(i * 100);
}

int <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=main">main</a>()
{
    int a = 100;
    pthread_t thread_t;
    int status;

    // 쓰레드를 생성한다. 
    if (pthread_create(&#38;thread_t, NULL, test, (void *)&#38;a) &#60; 0)
    {
        <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=perror">perror</a>("thread create error:");
        <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=exit">exit</a>(0);
    }

    // 쓰레드가 종료되기를 기다린후 
    // 쓰레드의 리턴값을 출력한다. 
    pthread_join(thread_t, (void **)&#38;status);
    printf("Thread End %d&#92;n", status);
    return 1;
}
		</PRE
></TD
></TR
></TABLE
>

	</P
></DIV
></DIV
></BODY
></HTML
>
}}}
  * [wiki:Site/Thread/Beginning/PthreadApiReference Pthread API 레퍼런스]
