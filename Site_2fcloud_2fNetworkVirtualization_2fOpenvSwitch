#title Open vSwitch를 이용한 네트워크 가상화

== 네트워크 가상화 ==
클라우드는 컴퓨팅 자원을 유연하게 제어할 수 있어야 한다. 유연하게 제어하기 위해서 일반적으로 사용하는 방법은 소프트웨어적으로 추상화 하는 것이다. 관리자는 하드웨어를 직접 컨트롤 하는대신 소프트웨어를 컨트롤 하는 것으로 자원을 제어할 수 있다.

가상머신(virtual machine)이라는 것도 결국은 소프트웨어를 이용해서 컴퓨터자원을 추상화 한 것이다. 이 추상화 계층위에서 운영체제를 올리는게 가상머신의 본질이다. 

네트워크 가상화는 다른 가상화에 비해서 비교적 고민할게 많은 영역이다. 다양한 프로토콜과 다른 형태의 네트워크 장비들을 효과적으로 추상화하기 위한 노력이 최근에서야 결실을 맺고 있기 때문이다. 

네트워크 가상화 전에는 다음과 같이 네트워크 자원을 사용했다. 

== Open vSwitch에 대하여 ==
  * Open vSwitch는 Apache 2.0 라이센스를 따르는 가상 스위치.
  * NetFlow, sFlow, SPAN, RSPAN, CLI, LACP, 802.1ag 지원
  * 802.1Q VLAN(:12) 
  * STP
  * Fine-grained min/max rate QoS
  * HFSC qdisc 지원
  * Per VM interface traffic policing
  * OpenFlow protocol support 
  * IPv6 support
  * Multiple tunneling protocols (Ethernet over GRE, CAPWAP, IPSec, GRE over IPSec)
  * kernel and user-space forwarding engine options 
  * multi-table forwarding pipeline with flow-caching engine
=== Open vSwitch 설치 ===
  * Open vSwitch 설치
  * 간단 운용
    * KVM 이미지를 위한 가상 switch 생성
    * VLAN 구성

=== Open vSwitch를 이용한 네트워크 가상화 ===
  * 일반적인 네트워크 환경
  * Open vSwitch를 이용해서 가상화한 네트워크
    * KVM 기반으로 가상 네트워크 환경 구축해 보기 
    * 두 개의 KVM 박스에 가상 네트워크를 구축하고 이를 연결하기 
  * 분산 가상 swich의 개발
    * 가상의 switch를 이용한 switch 가상화 
    * 가상의 switch를 이용한 cloud network 설계
    * 성능 테스트

== OpenvSwitch를 이용한 가상 네트워크 구성 ==
=== 테스트 환경 ===
  * 집에 있는 리눅스 데스크탑
  * 우분투 리눅스 13.04. 커널버전은 3.8.0-26-generic
  * 하이퍼바이저로 [wiki:Site/cloud/Qemu kvm]을 사용한다. 
  * kvm  버전 
    {{{#!plain
# kvm --version
W: kvm binary is deprecated, please use qemu-system-x86_64 instead
QEMU emulator version 1.4.0 (Debian 1.4.0+dfsg-1expubuntu4), Copyright (c) 2003-2008 Fabrice Bellard
}}}

=== OpenvSwitch 설치 ===
{{{#!plain
# apt-get install kvm libvirt-bin virtinst
}}}
'''libvirt'''는 커맨드라인 유틸리티를 포함한다. 가상화 관련된 다른 소프트웨어들도 필요로 하는, 가상화 관련 소프트웨어의 개발과 테스트에 필수 도구다.

OVS를 설치하기 전에 libvirt bridge를(virbr0) 제거한다.
{{{#!plain
# virsh net-destroy default
default 네트워크 강제 종료
# virsh net-autostart --disable default
자동 시작으로 default 네트워크를 표시하지 않음
}}}

OVS 설치를 위한 기본작업을 끝마쳤다. OVS를 설치하자.
{{{#!plain
# apt-get install openvswitch-controller openvswitch-brcompat \
openvswitch-switch openvswitch-datapath-source
}}}

OVS설치를 끝냈다면, OVS가 브릿지 호환모드에서 작동하도록 해야 한다. '''/etc/default/openvswitch-switch'''파일에 아래 내용을 추가한다. 
{{{#!plain
# BRCOMPAT: If 'yes' and the openvswitch-brcompat package is installed, then
# Linux bridge compatibility will be enabled.
BRCOMPAT=yes
}}}

OVS 서비스를 재시작하자.
{{{#!plain
# service openvswitch-switch start
 * bridge module is loaded, not loading brcompat
 * could not load brcompat module, disabling bridge compatibility
 * ovsdb-server is already running
 * bridge module is loaded, not loading brcompat
 * could not load brcompat module, disabling bridge compatibility
 * ovs-vswitchd is already running
}}}
모듈이 로딩할 수 없다는 메시지를 확인할 수 있다.
