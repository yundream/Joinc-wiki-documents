#title CDT를 이용한 Windows C/C++ 개발 환경 만들기
[[TableOfContents]]
== CDT를 이용한 Windows C/C++ 개발 환경 만들기 ==
=== CDT에 대해서 ===
CDT는 C/C++ 개발툴로써 Eclipse 플렛폼에서, C/C++ 통합개발환경이 가능하도록 지원한다. 

CDT는 Eclipse 프로젝트의 확장툴 프로젝트의 일부로 개발되고 있다. 완전히 공개되어 있으며, 누구나 CDT개발에 참여할 수 있도록 열려있다. 

=== CDT의 주요 기능 ===
 * C/C++ 에디터 : 코드 완성기능, syntac highlighting, 기본함수 목록
 * C/C++ 디버깅 : GDB를 이용한다. 
 * C/C++ 실행기
 * Parser
 * 찾기
 * Makefile 생성기

이러한 기능과 함께 이클립스에서 제공하는 CVS(12) 클라이언트를 이용하게 되면 매우 강력한 개발환경을 구축할 수 있게 된다. 

=== Eclipse CDT 설치하기 (Windows 환경) ===
현재 (2005/07/17) 최신버젼인 3.1.0을 기준으로 설명하도록 하겠다. CDT의 버젼은 2.1을 기준으로 한다.

유닉스 환경은 간단하기 때문에 윈도우를 기준으로 설명하도록 할것이다. 윈도우 환경에서 Eclipse CDT를 통해서 C/C++ 개발환경을 만들경우 GNU 환경(gcc,g++,gdb,make)을 우선 만들어줘야 한다. 물론 VC++과 같은 윈도우 전용 개발환경을 이용하는 것도 방법이긴 하겠지만, 개인적으로 VC++은 사용할 일이 없고, 윈도우 애플리케이션 개발도 QT를 이용할 것이기 때문에 Eclipse + GNU + CDT 를 개발환경으로 할 것이다. 

==== GNU 환경 만들기 ====
GNU 개발환경은 '''MINGW'''로 만들었다. MinGW(12)는 윈도우에 GNU 환경을 만들기 위한 툴로 cygwin(12)과 매우 유사하다고 할 수 있다. 공개소프트웨어 라이센스를 따른다. cygwin과는 달리 Windows Native 응용 개발이 가능하도록 지원하고 있다. MinGW는 http://www.mingw.org 에서 받아서 설치할 수 있다. 다음은 간단한 테스트 코드다. 
{{{#!plain
#include <windows.h>

int WINAPI WinMain (HINSTANCE hInstance, 
                     HINSTANCE hPrevInstance, 
                     PSTR szCmdLine, 
                     int iCmdShow) 
{
   MessageBox (NULL, "Hello", "Hello Demo", MB_OK);
   return (0);
}
}}}
다음은 컴파일 방법이다.
{{{#!plain
$ gcc -o hello.exe hello.cc -mwindows
}}}

STL을 포함한 C++ 코드도 컴파일 해보았다. 잘된다.
{{{#!plain
#include <map>
#include <iostream>

using namespace std;

int main()
{
   map<int, int> List;
   map<int, int>::iterator mi;
   List[100] = 50;
   List[87] = 30;
   List[98] = 99;
   List[32] = 12;

   mi = List.begin();
   while(mi != List.end())
   {
      cout << mi->first << " : " << mi->second << endl;
      mi++;
   }
}
}}}


혹은 Windows QT4.0 opensource 를 다운로드 받아서 설치하면, 설치도중에 MINGW를 설치할 것인지를 물어보는데, QT개발 환경을 꾸미고 싶다면 QT4.0 opensource 버젼을 다운로드 받아서 설치 하도록 한다. 필자의 경우 QT4.0을 설치하면서 같이 설치했다. 

MINGW 와 함께 '''MSYS'''도 다운받아서 사용하도록 하자. MSYS는 윈도우 환경에서 Unix 콘솔 작업환경을 사용할 수 있도록 도와준다. 설치하면 bash shell과 vim, grep와 같은 필수 Unix 유틸리티들을 사용할 수 있다.  

다음은 윈도우에서 MSYS를 실행한 화면이다.

attachment:snap8.gif


==== Eclipse 실행하기 ====
Eclipse가 실행될 때 MINGW로 만들어진 GNU환경의 툴들(make, gcc, g++등)을 사용할 수 있도록 환경을 만들어줘야 한다. windows에서 set으로 환경변수에 등록하면 된다고 하던데, 윈도우 환경에 익숙하지 못한 관계로  '''MINGW'''의 bash 쉘을 통해서 환경을 만들고 이클립스를 실행시켰다.
{{{#!plain
$ cat ~/.bash_profile 
export PATH=$PATH:/c/MinGW/bin

$ source ~/.bash_profile
$ /c/eclipse/eclipse.exe 
}}}

==== CDT 설치하기 ====
Eclipse는 3.0 버젼부터 Update Manager 기능을 제공한다. 덕분에 새로운 기능의 추가나 업데이트가 매우 쉬워졌다. 

 1. Elipse를 실행시킨 후 '''Help > Sofrware Updates > Find and Install..'''을 선택하도록 한다. 
 1. Install/Update 창이 뜨는데, '''Search for new features to install'''을 선택하고 '''Next'''를 클릭한다. 
 1. 업데이트를 요청할 사이트를 등록하는 '''Update sites to visit''' 창이 뜬다. '''New Remote Site'''를 클릭하고 '''http://update.eclipse.org/tools/cdt/releases/new'''를 등록하도록 한다.  
 1. '''Finish'''를 클릭하면 해당 업데이트 사이트에 연결해서 CDT와 관련된 업데이트 내용을 받아온다. CDT를 선택하고 몇번 Next 버튼을 클릭하는 정도로 설치 완료된다.
=== CDT Tutorial ===
==== Project 생성 ====
메뉴에서 '''File > New > Project'''를 선택하면 '''Project wizard'''윈도우가 뜬다. 여기에서 알맞은 프로젝트를 선택하면 된다. C++의 Managed Make C++ Project를 선택하하자.

attachment:snap.gif

'''Next''' 버튼을 클릭하면 프로젝트의 이름과 프로젝트가 위치할 경로지정을 위한 창이 뜬다. 

attachment:snap2.gif

'''Next'''버튼을 클릭해서 Project Type과 Configurations을 결정해준다.

attachment:snap3.gif

'''Next''' 버튼을 클릭하면 부가적인 설정을 하는 창이 뜬다. 기본값으로 하고 '''Finish'''를 클릭하면 프로젝트가 생성된다.

attachment:snap4.gif

'''Hello World'''를 출력해주는 간단한 프로그램을 만들어 보도록 하자.

attachment:snap5.gif

다 만들었다면 '''Project > Build All'''(혹은 Ctrl+B)를 이용해서 빌드하도록 한다. 빌드된 프로그램을 실행시켜서 결과를 확인해 보도록 하자. '''Run > Run'''을 선택하면 아래와 같은 윈도우 창이 뜬다. '''New'''를 클릭해서 새로운 RUN 환경을 만들고 Project와 실행시킬 C/C++ apllication을 등록시키도록 한다.

attachment:snap6.gif

이제 '''Run'''버튼을 클릭하면 아래와 같이 실행결과가 출력됨을 확인할 수 있을 것이다.

attachment:snap7.gif

== 관련 페이지 ==
 * http://kldp.org/node/48962
 * [wiki:Site/QT/Documents/eclipse_qt eclipse를 이용한 qt 개발환경 구축]

== 투표 ==
'''이 문서가 도움이 되었나요 ?'''
[[Vote(아주 많이 13, 많이 5, 그럭저럭 2, 별로 0, 전혀 11)]]
