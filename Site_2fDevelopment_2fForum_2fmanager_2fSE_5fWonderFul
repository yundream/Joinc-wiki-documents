#title SE의 매력 ?

=== SE는 인간적이다 ? ===
서비스를 개발하거나 기업이나 일반고객용 소프트웨어를 개발하는 것을 매력적인 작업이라고 할 수 있을 것이다. 그러나 정말 매력적인가 하는 생각이 드는데, 그것은 자본주의 사회에서의 대고객 서비스를 위한 소프트웨어들은 '''고객을 위해서'''만드는 것일 수 밖에 없기 때문이다. 즉 나의 가치를 위해서 소프트웨어를 만드는 노동을 하는게아닌, 타인인 회사와 고객을 위해서 노동을 하기 때문이다. 

물론, 개발자는 '''우리는 그 노동의 댓가로 돈을 받을 수 있으며, 이 돈을 가치있는 곳에 쓸 수 있지 않느냐'''라고 할 수 있다. 맞는 말이지만, 이때 노동자는 노동과 가치가 분리되는 현상을 겪게 된다. 이 둘의 간격을 메우기 위해서 '''돈'''이 사용되게 된다. 결국 우리의 가치라는 것은 돈을 통해서 '''추상화'''되게 된다. 우리의 가치는 돈인가? 그럼 돈으로 가치를 산다라는 것인가 ? 결국 일자체가 자신의 가치가 아니게 되므로 지겨워지게 되는거 아닐까 ?   

개발자는 프로그램을 만드는 것을 좋아 한다. 그런데, 왜 회사에서 프로그램을 만드는 일에는 쉽게 싫증을 내는가. 왜 회사에서 노동을 하는 것과는 별개로 오픈소스라든지 자신을 위한 소프트웨어를 만드는 일을 하는가. 또는 직업적 '''프로그래머는 할 짓이 못된다. 프로그래밍은 그냥 취미로 해라'''라는 말을 하게 되는 것일까. 

나를 위한 프로그램이 아닌 다른 익명을 위한 프로그램을 만든다는 점, 구체적인 가치가 아닌, 돈에 의해서 추상화된 가치를 추구해야 한다는 점 때문일것이다. 예컨데, 예전시대의 수공업이나 농업은 노동과 가치가 분리되어 있지 않았다. 노동그 자체가 가치를 지닐 때, 사람은 여기에서 기쁨을 느낄 수 있을 것이다. 많은 사람들이 노후에는 결국 시골에 내려가서 농사를 지으면서 살아야 겠다고 생각하는 이유도 여기에 있을 것이다. 

실제 많은 사회학자들이 노동과 가치가 분리되는 이 현상을 자본주의에서의 노동의 위기가 발생하는 요인으로 보고 있다. 

인간성이 상실되어 간다는 것. 이것은 '''man-month'''라는 비인간적인 개발관리 프로세스가 만들어진 이유일 것이다. 이러한 소프트웨어 개발에서의 탈가치화 비인간성 문제를 해결하기 위해서 '''XP''', '''애자일''' 등등의 방법론이 도입되고 있으니 그나마 다행이라고 할 수 있겠다. 

XP의 경우를 예로 들자면, 예전의 소프트웨어 개발에 있어서는 개발자와 고객이 철저하게 분리되어 있었으나 XP에서는 프로그래머가 고객이 무엇을 필요로 하는지알 수 있는 권리라든지, 사용자 스토리에 대한 공유라든지 하는 것들을 보장하고 있다. 프로그래머는 그럭저럭 자신이 어떤가치를 위해서 일하고 있는지 어렴풋이나마 깨달을 수 있을 것이다.  그렇지만 탈가치화라는 근본적인 문제점은 여전히 가진다. 

개발자는 가능한 빨리 (지겨운)프로젝트를 마치고, 다른 일을 하고 싶어한다. 업무회전같은 제도는 결국 하는일에 충분한 가치를 느끼지 못해서 효율이 떨어지는 그들을 재충전하기 위한 목적 (전부는 아니지만)에서 개발되었다. 

그래서 어쩌자고 ? 우리는 자본주의 사회에 살고 있고, 왠만해서는 자본주의의 굴레에서 벗어나기도 힘들 것인데, 그렇다면 자본의 논리를 따르고 있는 소프트웨어 개발회사에서 익명을 위해서 프로그램을 만드는건 어쩔 수 없는 것 아닌가 라고 되물을 수 있을 것이다.

나 역시 그렇게 생각한다. 사회, 정치, 경제의 페러다임이 바뀌지 않는 한은 그 굴레에서 벗어나기 힘들 것이다. 그냥 지금처럼 노동을 한 댓가로 돈이 손에 쥐어지고, 이것을 이용해서 다시 제품을 - 정말 이게 나의 가치인지 확신하지도 못한채 - 소비하는 생활을 계속해 나가야 할 것이다. 

=== SE의 특별함 ===
이런 점에 있어서 SE(system engineering)가 하는 노동은 다른 소프트웨어 개발을 위한 노동들과 구별되는 특징을 가지고 있다. 노동과 가치가 하나가 되는, 즉 진정에 가까운 노동으로써의 환경을 제공해 준다는 환경적 특징이다. 

SE의 시스템 혹은 네트워크 관리를 위한 물리적인 작업 이나 소프트웨어의 개발은 기본적으로 '''자기자신'''을 향하고 있기 때문이다. 예컨데, 시스템의 수월한 관리를 위한 배포/인스톨 시스템, 자산으로써의 장비관리를 위한 관리시스템, 시스템을 이용하는 다른 개발자들과 커뮤니케이션 하기 위한 '''업무처리 시스템''' 소프트웨어일 경우, 그것을 개발하든지 도입하든지 간에, 그 주된 이유는 '''자기자신의 여유로움과 편함'''을 그 목적으로 한다. 자신이 원하는 바를 위해서 프로그램을 작성한다.!!!

'''애자일 방법론'''이 SE영역에서 만들어졌다는 것은 SE의 이러한 '''인간적'''인 특징을 말해주는 것 아닐까 ? 시스템 관리자가 가져야할 마음의 자세가 '''게으름'''이라고 하는 이유가 여기에 있을 것이다. 

SE개발자들이 괜히 Perl을 사랑하는게 아니다. Perl의 문화인'''자기를 위한 코드를 작성하라''', '''주어진 일을 해낼 수 있으면 그걸로 OK'''가 SE문화에 딱 부합하기 때문이다. 

=== 그러나 근무환경은 열악하다 ? ===
SE는 매력적일 수 있다고 생각하지만, 반대로 근무환경은 매우 열악하다. 

가장 큰 이유는 '''자본과 노동'''에 대한 삶이 배제된 신자유주의적 인식 때문이다. 회사는 합리적으로 '''이윤'''을 창출해야 하는 목표를 가진, '''경쟁'''을 해서 '''생존'''을 해야 하는 입장이므로 '''CEO''' 특히 '''주주'''들에게 중요한건 '''외연'''의 확장과 관련된 것들이 될 수 밖에 없다. '''눈'''에 보이는 돈으로 환산될 수 있는 지표들. 

'''내연'''과 관련된 것들은 그들의 관심사항이 아니다. SE가 제대로된 대접을 받지 못하는 이유다. 사실 SE에만 관련된건 아니다. 실제 '''눈'''에 들어나 보이지 않는 것들은 제대로된 평가를 받지 못하는게 우리사회다. 

연말쯤 되어서 부서평가가 들어가면, SE부서는 자신들이 했던 눈에 보이지 않는 일들을 '''돈'''으로 환산하는 일을 해야만 한다. '''시스템 가상화'''를 했다. 이게 실제 어느정도의 '''돈'''으로 환산될 수 있는가 ? 에 대한 답을 내놓아야 한다는건데, 예컨데 가사를 노동으로 놓고 금전적으로 평가하려고 하는것과 마찬가지의 일을 해야 하는 것이다. 왜? 돈으로 환산되지 않는 것은 '''가치'''가 아니니까. 

기초가 얼마나 튼튼하지, 얼마나 건강한 생태를 유지하고 있는지는 관심이 없다. 돈을 벌어서 주주의 주머니를 채워주면 그만이다. '''사회가 엉망이 되면 어때, 돈말벌면 되지'''라는 정치판의 마인드가 IT 바닥에도 그대로 적용되는 예라고나 할까 ? SE영역은 그에 걸맞는 평가 방식이 있어야 하는게 아닐까.
