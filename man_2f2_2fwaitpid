#title linux man page : waitpid - 자식 프로세스의 종료를 기다린다.

{{{#!html
<HTML
><HEAD
><TITLE
><a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=waitpid">waitpid</a>(2)</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.64"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="CHAPTER"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="CHAPTER"
><H1
><A
NAME="AEN1"
>1&#51109;. <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=waitpid">waitpid</a>(2)</A
></H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>&#52264;&#47168;</B
></DT
><DT
>1.1&#51208;. <A
HREF="#AEN4"
>사용법</A
></DT
><DT
>1.2&#51208;. <A
HREF="#AEN8"
>설명</A
></DT
><DT
>1.3&#51208;. <A
HREF="#AEN66"
>반환값</A
></DT
><DT
>1.4&#51208;. <A
HREF="#AEN69"
>에러</A
></DT
><DT
>1.5&#51208;. <A
HREF="#AEN89"
>예제</A
></DT
></DL
></DIV
><P
>	프로세스의 종료를 기다린다. </P
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN4"
>1.1&#51208;. 사용법</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;sys/types.h&#62;
#include &#60;sys/wait.h&#62;
 
pid_t <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=waitpid">waitpid</a>(pid_t pid, int *status, int options);
		</PRE
></TD
></TR
></TABLE
> 
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN8"
>1.2&#51208;. 설명</A
></H1
><P
>		waitpid 함수는 인수로 주어진 pid 번호의 자식프로세스가 종료되거나, 
		시그널 함수를 호출하는 신호가 전달될때까지 waitpid 호출한 영역에서 
		일시 중지 된다. 
	</P
><P
>		만일 pid 로 지정된 자식이 waitpid 함수 호출전에 이미 종료되었다면, 
		함수는 즉시 리턴하고 자식프로세스는 "좀비프로세스"로 남는다. 
	</P
><P
>		pid 값은 다음중 하나가 된다. 
		<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>&#60; -1</DT
><DD
><P
>	
					프로세서 그룹 ID가 pid 의 절대값과 같은 자식 프로세스를
					기다린다. 
				</P
></DD
><DT
>-1</DT
><DD
><P
>	
					임의의 자식프로세스를 기다린다. 이것은 <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=wait">wait</a>(2) 와 동일하다. 
				</P
></DD
><DT
>0</DT
><DD
><P
>	
					프로세스 그룹 ID가 호출 프로세스의 ID와 같은 
					자식프로세스를 기다린다. 
				</P
></DD
><DT
>&#62; 0</DT
><DD
><P
>	
					프로세스 ID가 pid 의 값과 같은 자식 프로세스를 기다린다.  
				</P
></DD
></DL
></DIV
>	
	</P
><P
>		options 의 값은 0이거나 다음값들과의 OR 이다. 	
		<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>WNOHANG</DT
><DD
><P
>	
					이것은 어떤 자식도 종료되지 않았더라도, 즉시 
					리턴하란 뜻이다. 
				</P
></DD
><DT
>WNOHANG</DT
><DD
><P
>	
					멈추거나 상태가 보고되지 않은 자식들을 위해 
					리턴
				</P
></DD
></DL
></DIV
>	
	</P
><P
>		status 는 프로세스의 상태를 가져오기 위해서 사용한다. 
		status 가 NULL 이 아닐경우 status 가 가리키는 위치에 프로세스의 
		상태정보를 저장한다. 다음의 메크로들을 통해서 
		상태정보를 알아가져올수 있다. 	 
		<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
><a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=WIFEXITED">WIFEXITED</a>(status)</DT
><DD
><P
>	
					자식이 정상적으로 종료되었다면 non-zero 이다. 
				</P
></DD
><DT
><a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=WEXITSTATUS">WEXITSTATUS</a>(status)</DT
><DD
><P
>	<a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=
					exit"> 
					exit</a>()를 호출하기 위한 인자나 return 값이 설정되고 
					종료된 자식의 반환 코드의 최하위 8비트를 평가한다. 
					이 매크로는 정상정료 - <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=WIFEXITED">WIFEXITED</a>(status) - 일때만 
					평가된다. 
				</P
></DD
><DT
><a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=WIFSIGNALED">WIFSIGNALED</a>(status)</DT
><DD
><P
>	
					자식프로세스가 어떤 신호때문에 종료되었다면 참을 
					반환한다. 
				</P
></DD
><DT
><a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=WTERMSIG">WTERMSIG</a>(status)</DT
><DD
><P
>	
					자식프로세스를 종료하도록한 신호의 번호를 반환한다. 
					당연히 WIFSIGNALED 가 non_zero 일 경우에만 사용할수 
					있다. 
				</P
></DD
><DT
><a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=WIFSTOPPED">WIFSTOPPED</a>(status)</DT
><DD
><P
>	
					반환의 원인이 된 자식프로세스가 현재 정지되어 있다면 
					참을 반환한다. 
				</P
></DD
><DT
><a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=WSTOPSIG">WSTOPSIG</a>(status)</DT
><DD
><P
>	
					자식을 정지하도록 야기한 신호의 숫자를 반환한다. 
					WIFSTOPPED가 non-zero 일경우에만 사용할수 있다.  
				</P
></DD
></DL
></DIV
>	
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN66"
>1.3&#51208;. 반환값</A
></H1
><P
>		종료된 자식 프로세스의 ID는 에러일때 -1반환 하고, 만일 
		WNOHANG 가 사용되고 어떤 자식도 이용할수 없다면 0을 반환한다. 
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN69"
>1.4&#51208;. 에러</A
></H1
><P
>		<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>ECHILD</DT
><DD
><P
>	
					pid 로 지정된 프로세스가 존재하지 않거나, 호출한 
					프로세스의 자식이 아닐경우
				</P
></DD
><DT
>EINVAL</DT
><DD
><P
>					options 인자가 유효하지 않을경우
				</P
></DD
><DT
>ERESTARTSYS</DT
><DD
><P
>					WNOHANG 가 설정되어 있지 않고 신호가 
					봉쇄되지 않았거나 SIGCHLD가 잡혔을때
				</P
></DD
><DT
>ENOBUFS</DT
><DD
><P
>					시스템에 연산을 위해서 이용할수 있는 자원이 부족할때
				</P
></DD
></DL
></DIV
>	
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN89"
>1.5&#51208;. 예제</A
></H1
><P
>		<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;sys/types.h&#62;
#include &#60;sys/wait.h&#62;
#include &#60;unistd.h&#62;
#include &#60;string.h&#62;
 
int <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=main">main</a>()
{
    int pid;
    int status;
 
    pid = <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=fork">fork</a>();
 
    if (pid &#60; 0)
    {
        <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=perror">perror</a>("fork error : ");
        <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=exit">exit</a>(0);
    }
    if (pid == 0)
    {
        <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=printf">printf</a>("Im Child&#92;n");
        <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=sleep">sleep</a>(10);
        return 2;
    }
    else
    {
        printf("Parent: wait (%d)&#92;n", pid);
        <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=waitpid">waitpid</a>(pid, &#38;status, 0);
        if (<a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=WIFEXITED">WIFEXITED</a>(status))
        {
            printf("정상종료&#92;n");
            printf("리턴값 %d&#92;n", <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=WEXITSTATUS">WEXITSTATUS</a>(status));
        }
        else if (<a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=WIFSIGNALED">WIFSIGNALED</a>(status))
        {
            printf("신호받았음&#92;n");
            printf("신호번호 %d&#92;n", <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=WTERMSIG">WTERMSIG</a>(status));
        }
    }
    <a href="/modules/moniwiki/wiki.php/manSearch?google=none&name=exit">exit</a>(0);
}
		</PRE
></TD
></TR
></TABLE
> 
		위 프로그램을 자식이 정상종료할때까지 기다리거나, 
		신호를 줘서 자식을 강제 종료시킨후의 결과값을 테스트 해보기 
		바란다.  
	</P
></DIV
></DIV
></BODY
></HTML
> 
}}}
