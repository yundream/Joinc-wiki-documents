#title 함수사전을 위키페이지로
[wiki:docbook_함수사전을 위키페이지로 Docbook 원문]
{{{#!html
<HTML
><HEAD
><TITLE
>함수사전을 위키 페이지로</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.59"><META
http-equiv="Content-Type"
content="text/html; charset=euc-kr"></HEAD
><BODY
CLASS="ARTICLE"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="ARTICLE"
><DIV
CLASS="TITLEPAGE"
><H1
CLASS="TITLE"
><A
NAME="AEN2"
>함수사전을 위키 페이지로</A
></H1
><H3
CLASS="AUTHOR"
><A
NAME="AEN4"
>윤 상배</A
></H3
><DIV
CLASS="AFFILIATION"
><DIV
CLASS="ADDRESS"
><P
CLASS="ADDRESS"
>				yundream@www.joinc.co.kr<br>
			</P
></DIV
></DIV
><DIV
CLASS="REVHISTORY"
><TABLE
WIDTH="100%"
BORDER="0"
><TR
><TH
ALIGN="LEFT"
VALIGN="TOP"
COLSPAN="3"
><B
>&#44368;&#51221; &#44284;&#51221;</B
></TH
></TR
><TR
><TD
ALIGN="LEFT"
>&#44368;&#51221; 0.9</TD
><TD
ALIGN="LEFT"
>2004년 1월 08일 21시</TD
><TD
ALIGN="LEFT"
></TD
></TR
><TR
><TD
ALIGN="LEFT"
COLSPAN="3"
>docbook 문서로 변환</TD
></TR
><TR
><TD
ALIGN="LEFT"
>&#44368;&#51221; 0.8</TD
><TD
ALIGN="LEFT"
>2004년 1월 03일 09시</TD
><TD
ALIGN="LEFT"
></TD
></TR
><TR
><TD
ALIGN="LEFT"
COLSPAN="3"
>wiki문서 최종완료</TD
></TR
></TABLE
></DIV
><HR></DIV
><DIV
CLASS="TOC"
><DL
><DT
><B
>&#52264;&#47168;</B
></DT
><DT
>1&#51208;. <A
HREF="#AEN18"
>소개</A
></DT
><DT
>2&#51208;. <A
HREF="#AEN22"
>왜 위키페이지로 옮기는 작업을 하는가</A
></DT
><DD
><DL
><DT
>2.1&#51208;. <A
HREF="#AEN24"
>google에서의 검색용이를 위해서</A
></DT
><DT
>2.2&#51208;. <A
HREF="#AEN28"
>위키 페이지에서 직접적인 함수참조 가능하도록</A
></DT
><DT
>2.3&#51208;. <A
HREF="#AEN34"
>사용자 피드백의 용이성</A
></DT
></DL
></DD
><DT
>3&#51208;. <A
HREF="#AEN37"
>함수사전을 위키 페이지로</A
></DT
><DD
><DL
><DT
>3.1&#51208;. <A
HREF="#AEN39"
>기본 아이디어</A
></DT
><DT
>3.2&#51208;. <A
HREF="#AEN42"
>DB에서 함수사전 테이블 내용 가져오기</A
></DT
><DD
><DL
><DT
>3.2.1&#51208;. <A
HREF="#AEN47"
>함수 사전 관련 테이블 구조</A
></DT
><DT
>3.2.2&#51208;. <A
HREF="#AEN185"
>위키페이지로 저장하기</A
></DT
></DL
></DD
></DL
></DD
><DT
>4&#51208;. <A
HREF="#AEN203"
>프로그램의 작성</A
></DT
><DD
><DL
><DT
>4.1&#51208;. <A
HREF="#AEN206"
>전체 프로세스</A
></DT
><DT
>4.2&#51208;. <A
HREF="#AEN210"
>코드</A
></DT
><DT
>4.3&#51208;. <A
HREF="#AEN215"
>테스트</A
></DT
></DL
></DD
><DT
>5&#51208;. <A
HREF="#AEN219"
>참고문헌</A
></DT
></DL
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN18"
>1&#51208;. 소개</A
></H1
><P
>		joinc에서는 <A
HREF="http://www.joinc.co.kr/modules.php?name=Encyclopedia&op=list_content&eid=2"
TARGET="_top"
>함수사전</A
>을 제공하는데, 사전의 
		내용을 모두 위키로 옮기는 작업을 하기로 했다. 여기에서는 옮기는 
		과정에 대해서 기술한다.   
	</P
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN22"
>2&#51208;. 왜 위키페이지로 옮기는 작업을 하는가</A
></H1
><DIV
CLASS="SECTION"
><H2
CLASS="SECTION"
><A
NAME="AEN24"
>2.1&#51208;. google에서의 검색용이를 위해서</A
></H2
><P
>			어떤 이유에서인지 모르겠지만 <A
HREF="http://www.google.co.kr"
TARGET="_top"
>			google</A
>에서 함수사전에 있는 함수들의 내용이 검색되지 
			않는다는 것을 확인했다. 비록 내부적으로 Joinc 통합검색엔진 
			프로젝트를 진행하고 있긴 하지만 google등의 검색엔진에서도 쉽게 
			검색될 수 있다면 좋을 것이다. 지금 운영중인 위키에 있는 페이지들은 
			google을 통한 검색이 잘 이루어 지고 있음을 확인했고, 그런이유로 위키 
			페이지로 옮기기로 결정했다. 
		</P
></DIV
><DIV
CLASS="SECTION"
><HR><H2
CLASS="SECTION"
><A
NAME="AEN28"
>2.2&#51208;. 위키 페이지에서 직접적인 함수참조 가능하도록</A
></H2
><P
>			사이트의 특성상 위키 페이지에 함수들이 자주 등장하게 되는데, 함수의 내용이 
			궁금할경우 joinc의 함수찾기 기능을 이용해서 함수를 참조해야만 한다. 
			4-5번 정도의 마우스 클릭작업이 들어갸야 하는데, 시간도 많이 걸리고 
			매우 불편하다.  
		</P
><P
>			이들 함수사전의 내용을 위키로 만들면 위키의 PHP코드를 약간 수정하는 정도로
			자동으로 링크가 걸리도록 할 수 있다. fgets(3), gets(3), fopen(3) 모든 함수가 
			자동으로 링크가 걸리는 걸 확인 할 수 있을것이다. 실제 문서 작성 때도 
			문서작성자는 함수를 링크시키기 위해서 부가적인 작업을 하지 않아도 된다.       
			이 기능은 php의 정규치환을 이용해서 구현했다. 다음은 정규표현식이다. 
			<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>$text = ereg_replace("([a-z0-9\_]+)(\([a-zA-Z0-9:\_\.\"\,\&#38;\* ]*\))",
        "&#60;a href=http://www.joinc.co.kr/modules/moniwiki/wiki.php/function_\\1\\2&#62;\\1&#60;/a&#62;\\2", $text);
			</PRE
></TD
></TR
></TABLE
>
			정규표현식을 보면 알겠지만 모든 함수사전을 위한 모든 위키페이지 명은 
			<B
CLASS="EMPHASIS"
>function_</B
>를 접두사로 가져야 한다. 
		</P
></DIV
><DIV
CLASS="SECTION"
><HR><H2
CLASS="SECTION"
><A
NAME="AEN34"
>2.3&#51208;. 사용자 피드백의 용이성</A
></H2
><P
>			위키의 특성으로 용이한 사용자 피드백이 가능할 것이다. 
			필요하다면 wiki전용의 댓글 시스템을 만들 수도 있다.  
		</P
></DIV
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN37"
>3&#51208;. 함수사전을 위키 페이지로</A
></H1
><DIV
CLASS="SECTION"
><H2
CLASS="SECTION"
><A
NAME="AEN39"
>3.1&#51208;. 기본 아이디어</A
></H2
><P
>			물론 노가다 수작업으로 일일이 위키 페이지를 만들 수 있겠으나 프로그램을 
			만들어서 일괄적업 하기로 했다.	
			현재 함수사전의 모든 내용은 DB를 통해서 관리된다. 간단한 DB프로그램을 만들어서 
			각각의 함수이름과 함수이름에 대한 설명이 들어 있는 필드의 정보를 가져올 수 있다.
			그러면 이들 내용을 토대로 wiki페이지를 만든다. 
		</P
></DIV
><DIV
CLASS="SECTION"
><HR><H2
CLASS="SECTION"
><A
NAME="AEN42"
>3.2&#51208;. DB에서 함수사전 테이블 내용 가져오기</A
></H2
><P
>			DB에서 내용을 가져오기 위해서 함수사전에 사용되는 테이블의 구조를 분석할 
			필요가 있다. 함수사전에는 <B
CLASS="EMPHASIS"
>joinc_encyclopedia</B
>와 
			<B
CLASS="EMPHASIS"
>joinc_encyclopedia_text</B
> 두개의 테이블이 사용된다.  
		</P
><DIV
CLASS="SECTION"
><HR><H3
CLASS="SECTION"
><A
NAME="AEN47"
>3.2.1&#51208;. 함수 사전 관련 테이블 구조</A
></H3
><P
> 				joinc_encyclopedia에는 사전의 타입과 설명등이 입력된다. joinc의 사전은 
				여러 종류의 사전이 동시에 운용될 수 있으므로 사전의 프로토타입의 정의를 
				위한 테이블이 별도로 필요하다.     
				<DIV
CLASS="TABLE"
><A
NAME="AEN50"
></A
><P
><B
>&#54364; 1. joinc_encyclopedia</B
></P
><TABLE
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Field</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Type</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Null</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Key</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Default</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Extra</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>1</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>eid</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>int</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>PRI</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>NULL</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>auto_inc</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>2</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>title</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>varchar</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>3</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>description</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>text</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>4</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>counter</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>int</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
></TR
></TBODY
></TABLE
></DIV
>
				<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>eid</DT
><DD
><P
>  							새로운 사전이 추가될때 마다 1씩 증가하며 함수내용에 대한 
							인덱스 값이 된다.    
							</P
></DD
><DT
>title</DT
><DD
><P
>								eid 번호를 가지는 사전에 대한 제목
							</P
></DD
><DT
>description</DT
><DD
><P
>  								사전에 대한 상세 설명 
							</P
></DD
><DT
>counter</DT
><DD
><P
>								방문 카운트
							</P
></DD
></DL
></DIV
>
			</P
><P
>				<DIV
CLASS="TABLE"
><A
NAME="AEN112"
></A
><P
><B
>&#54364; 2. joinc_encyclopedia_text</B
></P
><TABLE
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Field</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Type</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Null</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Key</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Default</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>Extra</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>1</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>tid</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>int</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>PRI</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>NULL</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>auto_inc</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>2</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>eid</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>int</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>3</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>title</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>varchar</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>4</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>text</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>int</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
></TR
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
>5</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>count</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>int</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
>&nbsp;</TD
></TR
></TBODY
></TABLE
></DIV
>
				<P
></P
><DIV
CLASS="VARIABLELIST"
><DL
><DT
>tid</DT
><DD
><P
>								사전내용에 대한 일련번호
							</P
></DD
><DT
>eid</DT
><DD
><P
>								사전내용이 어느 사전에 포함된것인지에 대한 정보로 
								joinc_encyclopedia.eid를 인덱스한다.
							</P
></DD
><DT
>title</DT
><DD
><P
>								사전내용에 대한 제목
							</P
></DD
><DT
>text</DT
><DD
><P
>								실질적인 사전 내용
							</P
></DD
><DT
>counter</DT
><DD
><P
>								방문 카운트
							</P
></DD
></DL
></DIV
>
			</P
></DIV
><DIV
CLASS="SECTION"
><HR><H3
CLASS="SECTION"
><A
NAME="AEN185"
>3.2.2&#51208;. 위키페이지로 저장하기</A
></H3
><P
>				DB를 뒤져서 함수사전 내용을 얻어왔다면, 얻어온 내용을 토대로 위키페이지를 
				만들어야 한다. 위키페이지는 파일기반으로 
				<A
HREF="http://doc.kldp.org/KoreanDoc/html/RCS/RCS.html"
TARGET="_top"
>RCS</A
>를 
				통해서 관리된다. 
			</P
><P
>				파일로 저장되므로 파일이름을 정해야 하는데 중복을 피하기 위해서 
				함수명앞에 '''function_'''을 붙이도록 한다. 
				실제 저장되는 위키페이지는 <B
CLASS="EMPHASIS"
>_</B
>를 
				<B
CLASS="EMPHASIS"
>_5f</B
>로 치환된다. 
				또한 <B
CLASS="EMPHASIS"
>(</B
>, <B
CLASS="EMPHASIS"
>)</B
>는 각각 
				<B
CLASS="EMPHASIS"
>_28</B
>, <B
CLASS="EMPHASIS"
>_29</B
>로 치환된다. 
				만약 <B
CLASS="EMPHASIS"
>fgets(3)</B
>을 등록시키길 원한다면 
				<B
CLASS="EMPHASIS"
>function_5ffgets_283_29</B
>라는 이름의 파일로 등록된다. 
			</P
><P
>				등록된 후에는 이걸 RCS로 보내야 한다. 이를 위해서 <B
CLASS="EMPHASIS"
>ci</B
>
				명령을 사용한다. 
				<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
># ci -tfunction_5ffgets_283_29 function_5ffgets_283_29 
				</PRE
></TD
></TR
></TABLE
>
				그러면 RCS파일이 생성된다. 이후 <B
CLASS="EMPHASIS"
>co</B
>명령을 이용해서 
				RCS파일을 다시 받아와서 원본파일을 유지하면 된다. 
				<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
># co function_5ffgets_283_29
				</PRE
></TD
></TR
></TABLE
>
				위의 내용이 잘 이해되지 않는다면 RCS레퍼런스 문서를 읽어 보기 바란다. 
			</P
></DIV
></DIV
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN203"
>4&#51208;. 프로그램의 작성</A
></H1
><P
>		프로그램은 C를 이용해서 작성되었다.
	</P
><DIV
CLASS="SECTION"
><HR><H2
CLASS="SECTION"
><A
NAME="AEN206"
>4.1&#51208;. 전체 프로세스</A
></H2
><P
>			프로세스는 간단하다.
			<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>int main()
{
  nobody 권한으로 변경한다.
  mysqldb에 접근
  함수사전을 얻기 위한 쿼리 수행
  while(더이상 사전내용이 없을 때 까지) 
  {
    list(title, text)를 얻어온다. 
    function_5ftitle 이름으로 파일을 만든다.  
    파일에 text를 적는다.
    {
      write wiki메크로 
    }
    co명령을 이용해서 RCS에 등록한다. 
    ci명령을 이용해서 RCS의 내용을 가져온다.   
  }
}
			</PRE
></TD
></TR
></TABLE
>
		</P
></DIV
><DIV
CLASS="SECTION"
><HR><H2
CLASS="SECTION"
><A
NAME="AEN210"
>4.2&#51208;. 코드</A
></H2
><P
>	
			코드 역시 매우 단순하다. 이 코드는 그럭저럭 돌아가지만 수정해야될 
			부분과 추가해야될 몇 가지 기능들이 있다. 간단한 주석으로 설명을 대신한다. 
			<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>#include &#60;mysql.h&#62;
#include &#60;string.h&#62;
#include &#60;stdio.h&#62;
#include "jdb.h"
#include &#60;stdlib.h&#62;

static char page_name[80];

// ( ==&#62; _28 
// ) ==&#62; _29
char * replace_tag(char *str)
{
    char null[12];
    char fu[80];
    char num[12];
    sscanf(str,"%[^(]%[(]%[^)]", fu, null, num);
    sprintf(page_name, "%s%s%s%s", fu, "_28", num, "_29");
    return &#38;page_name[0];
}

int main(int argc, char **argv)
{
    MYSQL   *connection = NULL, conn;
    MYSQL_RES *sql_result;
    MYSQL_ROW sql_row;
    int query_stat;
    char wiki_macro[80];
    char wiki_page[80];
    char *perfect_page;
    char man_section[16];
    FILE *fp;

    // MysqlDB에 연결  
    mysql_init(&#38;conn);
    connection = mysql_real_connect(&#38;conn, DB_HOST,
                                DB_USER, DB_PASS,
                                DB_NAME, 3306, (char *)NULL, 0);

    if (connection == NULL)
    {
        fprintf(stderr, "Mysql connection error : %s", mysql_error(&#38;conn));
        return 1;
    }
    query_stat = mysql_query(connection,
            "select title, eid, tid from nuke_encyclopedia_text where eid=2");
    if(query_stat != 0)
    {
        fprintf(stderr, "Mysql query error : %s\n", mysql_error(&#38;conn));
        return 1;
    }

    sql_result = mysql_store_result(connection);
    while((sql_row = mysql_fetch_row(sql_result)) != NULL)
    {
        char ci_command[120];
        char co_command[120];
        char title[80];
        if(strlen(sql_row[0]) &#62; 3)
        {
            // wikipage에 들어갈 메크로문자열과 
            sprintf(wiki_macro, "[[printency(%s,%s)]]\n", sql_row[1], sql_row[2]);
            // wikipage 이름
            sprintf(wiki_page, "function_5f%s", sql_row[0]);
            // wikipage 타이틀
            sprintf(title, "#title %s\n", sql_row[0]);
            // wikipage이름을 wiki스타일에 맞도록 변경한다. 
            perfect_page = replace_tag(wiki_page);

            // RCS등록을 위한 명령
            sprintf(ci_command, "/usr/bin/ci -t%s %s", perfect_page, perfect_page);
            sprintf(co_command, "/usr/bin/co %s", perfect_page);
            if((fp = fopen(perfect_page, "w")) != NULL)
            {
                fputs(title,fp);
                fputs(wiki_macro, fp);
                fclose(fp);
                // RCS등록을 한다. 
                system(ci_command);
                system(co_command);
            }
        }
    }
    mysql_free_result(sql_result);
    mysql_close(connection);
    return 0;
}
			</PRE
></TD
></TR
></TABLE
>
다음과 같이 컴파일 했다. 
			<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
># gcc -o wikifunc  main.c -I/usr/include/mysql -L/usr/lib/mysql -lmysqlclient -Wall
			</PRE
></TD
></TR
></TABLE
>
		</P
></DIV
><DIV
CLASS="SECTION"
><HR><H2
CLASS="SECTION"
><A
NAME="AEN215"
>4.3&#51208;. 테스트</A
></H2
><P
>			이 문서 자체가 테스트다. 아래의 함수가 링크가 잘 된다면 성공한 것이다.
			<TABLE
BORDER="0"
BGCOLOR="#E0E0E0"
WIDTH="100%"
><TR
><TD
><PRE
CLASS="SCREEN"
>파일을 열때는 open(2), 혹은 feopen(3)를 사용한다. 
write()함수는 write(fd, char *buff, size)와 같은 방식으로 사용한다.
			</PRE
></TD
></TR
></TABLE
>
		</P
></DIV
></DIV
><DIV
CLASS="SECTION"
><HR><H1
CLASS="SECTION"
><A
NAME="AEN219"
>5&#51208;. 참고문헌</A
></H1
><P
>		<P
></P
><OL
TYPE="1"
><LI
><P
> 					<A
HREF="http://doc.kldp.org/KoreanDoc/html/RCS/RCS.html"
TARGET="_top"
>RCS 레퍼런스</A
>
				</P
></LI
><LI
><P
> 					<A
HREF="http://www.joinc.co.kr/modules.php?name=News&file=article&sid=10"
TARGET="_top"
>Mysql 프로그래밍</A
>
				</P
></LI
></OL
>
	</P
></DIV
></DIV
></BODY
></HTML
>
}}}
